ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBUART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	USBUART_initVar
  19              		.bss
  20              		.type	USBUART_initVar, %object
  21              		.size	USBUART_initVar, 1
  22              	USBUART_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.USBUART_Start,"ax",%progbits
  25              		.align	2
  26              		.global	USBUART_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	USBUART_Start, %function
  30              	USBUART_Start:
  31              	.LFB0:
  32              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USBUART.c **** * \file USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * \version 3.10
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * \brief
   6:Generated_Source\PSoC5/USBUART.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * \copyright
  15:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USBUART.c **** 
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_cydmac.h"
  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_Dp.h"
  25:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 2


  26:Generated_Source\PSoC5/USBUART.c **** 
  27:Generated_Source\PSoC5/USBUART.c **** /***************************************
  28:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  29:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  30:Generated_Source\PSoC5/USBUART.c **** 
  31:Generated_Source\PSoC5/USBUART.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USBUART.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USBUART.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USBUART.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USBUART.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USBUART.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USBUART.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USBUART.c **** * functions.
  39:Generated_Source\PSoC5/USBUART.c **** */
  40:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  41:Generated_Source\PSoC5/USBUART.c **** 
  42:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USBUART.c ****         static void USBUART_InitEpDma(void);
  45:Generated_Source\PSoC5/USBUART.c **** 
  46:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_DmaChan[USBUART_MAX_EP] =
  48:Generated_Source\PSoC5/USBUART.c ****         {
  49:Generated_Source\PSoC5/USBUART.c ****             0u,
  50:Generated_Source\PSoC5/USBUART.c ****             0u,
  51:Generated_Source\PSoC5/USBUART.c ****             0u,
  52:Generated_Source\PSoC5/USBUART.c ****             0u,
  53:Generated_Source\PSoC5/USBUART.c ****             0u,
  54:Generated_Source\PSoC5/USBUART.c ****             0u,
  55:Generated_Source\PSoC5/USBUART.c ****             0u,
  56:Generated_Source\PSoC5/USBUART.c ****             0u,
  57:Generated_Source\PSoC5/USBUART.c ****             0u,
  58:Generated_Source\PSoC5/USBUART.c ****         };        
  59:Generated_Source\PSoC5/USBUART.c ****     #else
  60:Generated_Source\PSoC5/USBUART.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****         
  63:Generated_Source\PSoC5/USBUART.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaTd[USBUART_MAX_EP];
  65:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USBUART.c **** 
  68:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USBUART.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCnt   [USBUART_MAX_EP];
  72:Generated_Source\PSoC5/USBUART.c ****     
  73:Generated_Source\PSoC5/USBUART.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpLastBurstEl[USBUART_MAX_EP];
  75:Generated_Source\PSoC5/USBUART.c **** 
  76:Generated_Source\PSoC5/USBUART.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USBUART.c ****     uint8  USBUART_DmaEpBurstCntBackup  [USBUART_MAX_EP];
  78:Generated_Source\PSoC5/USBUART.c ****     uint32 USBUART_DmaEpBufferAddrBackup[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****      
  80:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaReqOut[USBUART_MAX_EP] =
  82:Generated_Source\PSoC5/USBUART.c ****     {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 3


  83:Generated_Source\PSoC5/USBUART.c ****         0u,
  84:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_dma__TR_OUTPUT,
  87:Generated_Source\PSoC5/USBUART.c ****         0u,
  88:Generated_Source\PSoC5/USBUART.c ****         0u,
  89:Generated_Source\PSoC5/USBUART.c ****         0u,
  90:Generated_Source\PSoC5/USBUART.c ****         0u,
  91:Generated_Source\PSoC5/USBUART.c ****         0u,
  92:Generated_Source\PSoC5/USBUART.c ****     };
  93:Generated_Source\PSoC5/USBUART.c **** 
  94:Generated_Source\PSoC5/USBUART.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_DmaBurstEndOut[USBUART_MAX_EP] =
  96:Generated_Source\PSoC5/USBUART.c ****     {
  97:Generated_Source\PSoC5/USBUART.c ****         0u,
  98:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USBUART.c ****         USBUART_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USBUART.c ****     };
 107:Generated_Source\PSoC5/USBUART.c ****     
 108:Generated_Source\PSoC5/USBUART.c **** #else
 109:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USBUART.c ****         static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USBUART.c ****         uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
 112:Generated_Source\PSoC5/USBUART.c ****         const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
 113:Generated_Source\PSoC5/USBUART.c ****         {
 114:Generated_Source\PSoC5/USBUART.c ****             0u,
 115:Generated_Source\PSoC5/USBUART.c ****             0u,
 116:Generated_Source\PSoC5/USBUART.c ****             0u,
 117:Generated_Source\PSoC5/USBUART.c ****             0u,
 118:Generated_Source\PSoC5/USBUART.c ****             0u,
 119:Generated_Source\PSoC5/USBUART.c ****             0u,
 120:Generated_Source\PSoC5/USBUART.c ****             0u,
 121:Generated_Source\PSoC5/USBUART.c ****             0u,
 122:Generated_Source\PSoC5/USBUART.c ****             0u,
 123:Generated_Source\PSoC5/USBUART.c ****         };
 124:Generated_Source\PSoC5/USBUART.c **** 
 125:Generated_Source\PSoC5/USBUART.c ****         volatile uint16 USBUART_inLength[USBUART_MAX_EP];
 126:Generated_Source\PSoC5/USBUART.c ****         const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
 127:Generated_Source\PSoC5/USBUART.c ****         volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
 128:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USBUART.c **** 
 132:Generated_Source\PSoC5/USBUART.c **** 
 133:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
 135:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USBUART.c **** *
 137:Generated_Source\PSoC5/USBUART.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USBUART.c **** *   After this function call, the USB device initiates communication with the
 139:Generated_Source\PSoC5/USBUART.c **** *   host by pull-up D+ line. This is the preferred method to begin component
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 4


 140:Generated_Source\PSoC5/USBUART.c **** *   operation.
 141:Generated_Source\PSoC5/USBUART.c **** *
 142:Generated_Source\PSoC5/USBUART.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USBUART.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USBUART.c **** *
 145:Generated_Source\PSoC5/USBUART.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USBUART.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USBUART.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USBUART.c **** *
 149:Generated_Source\PSoC5/USBUART.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USBUART.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USBUART.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USBUART.c **** *
 153:Generated_Source\PSoC5/USBUART.c **** *  \param device
 154:Generated_Source\PSoC5/USBUART.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 159:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USBUART.c **** *   following list.
 163:Generated_Source\PSoC5/USBUART.c **** *
 164:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USBUART.c **** *
 167:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USBUART.c **** *
 170:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 177:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_initVar
 178:Generated_Source\PSoC5/USBUART.c **** *
 179:Generated_Source\PSoC5/USBUART.c **** * \sideeffect
 180:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USBUART.c **** *
 182:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 183:Generated_Source\PSoC5/USBUART.c **** *  No.
 184:Generated_Source\PSoC5/USBUART.c **** *
 185:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USBUART.c **** {
  33              		.loc 1 187 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 5


  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45 0006 0346     		mov	r3, r0
  46 0008 0A46     		mov	r2, r1
  47 000a FB71     		strb	r3, [r7, #7]
  48 000c 1346     		mov	r3, r2
  49 000e BB71     		strb	r3, [r7, #6]
 188:Generated_Source\PSoC5/USBUART.c ****     if (0u == USBUART_initVar)
  50              		.loc 1 188 0
  51 0010 084B     		ldr	r3, .L3
  52 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  53 0014 002B     		cmp	r3, #0
  54 0016 04D1     		bne	.L2
 189:Generated_Source\PSoC5/USBUART.c ****     {
 190:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
  55              		.loc 1 190 0
  56 0018 FFF7FEFF 		bl	USBUART_Init
 191:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
  57              		.loc 1 191 0
  58 001c 054B     		ldr	r3, .L3
  59 001e 0122     		movs	r2, #1
  60 0020 1A70     		strb	r2, [r3]
  61              	.L2:
 192:Generated_Source\PSoC5/USBUART.c ****     }
 193:Generated_Source\PSoC5/USBUART.c **** 
 194:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
  62              		.loc 1 194 0
  63 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  64 0024 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  65 0026 1046     		mov	r0, r2
  66 0028 1946     		mov	r1, r3
  67 002a FFF7FEFF 		bl	USBUART_InitComponent
 195:Generated_Source\PSoC5/USBUART.c **** }
  68              		.loc 1 195 0
  69 002e 0837     		adds	r7, r7, #8
  70              		.cfi_def_cfa_offset 8
  71 0030 BD46     		mov	sp, r7
  72              		.cfi_def_cfa_register 13
  73              		@ sp needed
  74 0032 80BD     		pop	{r7, pc}
  75              	.L4:
  76              		.align	2
  77              	.L3:
  78 0034 00000000 		.word	USBUART_initVar
  79              		.cfi_endproc
  80              	.LFE0:
  81              		.size	USBUART_Start, .-USBUART_Start
  82              		.section	.text.USBUART_Init,"ax",%progbits
  83              		.align	2
  84              		.global	USBUART_Init
  85              		.thumb
  86              		.thumb_func
  87              		.type	USBUART_Init, %function
  88              	USBUART_Init:
  89              	.LFB1:
 196:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 6


 197:Generated_Source\PSoC5/USBUART.c **** 
 198:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 200:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USBUART.c **** *
 202:Generated_Source\PSoC5/USBUART.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USBUART.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USBUART.c **** * USBUART_Init() because the USBUART_Start() routine calls
 205:Generated_Source\PSoC5/USBUART.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USBUART.c **** *
 207:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 208:Generated_Source\PSoC5/USBUART.c **** *  No.
 209:Generated_Source\PSoC5/USBUART.c **** *
 210:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 212:Generated_Source\PSoC5/USBUART.c **** {
  90              		.loc 1 212 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              		.cfi_def_cfa_offset 16
 100 0004 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 213:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USBUART.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USBUART.c **** 
 217:Generated_Source\PSoC5/USBUART.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USBUART.c ****     * USBUART_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USBUART.c ****     */
 220:Generated_Source\PSoC5/USBUART.c **** 
 221:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ~ (uint32) USBUART_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USBUART.c ****     USBUART_BUS_RST_CNT_REG = USBUART_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USBUART.c **** 
 227:Generated_Source\PSoC5/USBUART.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USBUART.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USBUART.c ****     */
 230:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG = USBUART_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USBUART.c **** 
 232:Generated_Source\PSoC5/USBUART.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG |= USBUART_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USBUART.c **** 
 240:Generated_Source\PSoC5/USBUART.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_DEFUALT_CR1;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 7


 242:Generated_Source\PSoC5/USBUART.c **** 
 243:Generated_Source\PSoC5/USBUART.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_LVL_SEL_REG = USBUART_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USBUART.c **** 
 246:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG = USBUART_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USBUART.c **** 
 249:Generated_Source\PSoC5/USBUART.c **** #else
 250:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 102              		.loc 1 250 0
 103 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 104 000a 0346     		mov	r3, r0
 105 000c FB71     		strb	r3, [r7, #7]
 251:Generated_Source\PSoC5/USBUART.c **** 
 252:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USBUART.c ****     uint16 i;
 254:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USBUART.c **** 
 256:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
 106              		.loc 1 257 0
 107 000e 534A     		ldr	r2, .L6
 108 0010 524B     		ldr	r3, .L6
 109 0012 1B78     		ldrb	r3, [r3]
 110 0014 DBB2     		uxtb	r3, r3
 111 0016 43F00103 		orr	r3, r3, #1
 112 001a DBB2     		uxtb	r3, r3
 113 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
 114              		.loc 1 259 0
 115 001e 504A     		ldr	r2, .L6+4
 116 0020 4F4B     		ldr	r3, .L6+4
 117 0022 1B78     		ldrb	r3, [r3]
 118 0024 DBB2     		uxtb	r3, r3
 119 0026 43F00103 		orr	r3, r3, #1
 120 002a DBB2     		uxtb	r3, r3
 121 002c 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USBUART.c **** 
 261:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
 122              		.loc 1 262 0
 123 002e 4D4B     		ldr	r3, .L6+8
 124 0030 0122     		movs	r2, #1
 125 0032 1A70     		strb	r2, [r3]
 263:Generated_Source\PSoC5/USBUART.c **** 
 264:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 126              		.loc 1 264 0
 127 0034 4C4B     		ldr	r3, .L6+12
 128 0036 0222     		movs	r2, #2
 129 0038 1A70     		strb	r2, [r3]
 265:Generated_Source\PSoC5/USBUART.c **** 
 266:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= (uint8) ~USBUART_USBIO_CR0_TEN;
 130              		.loc 1 268 0
 131 003a 4C4A     		ldr	r2, .L6+16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 8


 132 003c 4B4B     		ldr	r3, .L6+16
 133 003e 1B78     		ldrb	r3, [r3]
 134 0040 DBB2     		uxtb	r3, r3
 135 0042 03F07F03 		and	r3, r3, #127
 136 0046 DBB2     		uxtb	r3, r3
 137 0048 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 138              		.loc 1 269 0
 139 004a 0020     		movs	r0, #0
 140 004c FFF7FEFF 		bl	CyDelayUs
 270:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USBUART.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USBUART.c ****     */
 274:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= (uint8) ~(USBUART_PM_USB_CR0_PD_N |
 141              		.loc 1 274 0
 142 0050 474A     		ldr	r2, .L6+20
 143 0052 474B     		ldr	r3, .L6+20
 144 0054 1B78     		ldrb	r3, [r3]
 145 0056 DBB2     		uxtb	r3, r3
 146 0058 23F00603 		bic	r3, r3, #6
 147 005c DBB2     		uxtb	r3, r3
 148 005e 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/USBUART.c ****                                                  USBUART_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USBUART.c **** 
 277:Generated_Source\PSoC5/USBUART.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~USBUART_USBIO_CR1_IOMODE;
 149              		.loc 1 278 0
 150 0060 444A     		ldr	r2, .L6+24
 151 0062 444B     		ldr	r3, .L6+24
 152 0064 1B78     		ldrb	r3, [r3]
 153 0066 DBB2     		uxtb	r3, r3
 154 0068 23F02003 		bic	r3, r3, #32
 155 006c DBB2     		uxtb	r3, r3
 156 006e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USBUART.c **** 
 280:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 157              		.loc 1 281 0
 158 0070 3F4A     		ldr	r2, .L6+20
 159 0072 3F4B     		ldr	r3, .L6+20
 160 0074 1B78     		ldrb	r3, [r3]
 161 0076 DBB2     		uxtb	r3, r3
 162 0078 43F00103 		orr	r3, r3, #1
 163 007c DBB2     		uxtb	r3, r3
 164 007e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/USBUART.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_REG_STABILITY_1US);
 165              		.loc 1 283 0
 166 0080 0120     		movs	r0, #1
 167 0082 FFF7FEFF 		bl	CyDelayUs
 284:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_VREF_RESTORE);
 168              		.loc 1 285 0
 169 0086 2820     		movs	r0, #40
 170 0088 FFF7FEFF 		bl	CyDelayUs
 286:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 9


 287:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= (uint8) ~USBUART_DM_MASK;
 171              		.loc 1 287 0
 172 008c 3A4A     		ldr	r2, .L6+28
 173 008e 3A4B     		ldr	r3, .L6+28
 174 0090 1B78     		ldrb	r3, [r3]
 175 0092 DBB2     		uxtb	r3, r3
 176 0094 03F07F03 		and	r3, r3, #127
 177 0098 DBB2     		uxtb	r3, r3
 178 009a 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= (uint8) ~USBUART_DP_MASK;
 179              		.loc 1 288 0
 180 009c 364A     		ldr	r2, .L6+28
 181 009e 364B     		ldr	r3, .L6+28
 182 00a0 1B78     		ldrb	r3, [r3]
 183 00a2 DBB2     		uxtb	r3, r3
 184 00a4 23F04003 		bic	r3, r3, #64
 185 00a8 DBB2     		uxtb	r3, r3
 186 00aa 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/USBUART.c **** 
 290:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 187              		.loc 1 291 0
 188 00ac 304A     		ldr	r2, .L6+20
 189 00ae 304B     		ldr	r3, .L6+20
 190 00b0 1B78     		ldrb	r3, [r3]
 191 00b2 DBB2     		uxtb	r3, r3
 192 00b4 43F00203 		orr	r3, r3, #2
 193 00b8 DBB2     		uxtb	r3, r3
 194 00ba 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(USBUART_WAIT_PD_PULLUP_N_ENABLE);
 195              		.loc 1 292 0
 196 00bc 0220     		movs	r0, #2
 197 00be FFF7FEFF 		bl	CyDelayUs
 293:Generated_Source\PSoC5/USBUART.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 198              		.loc 1 294 0
 199 00c2 2B4A     		ldr	r2, .L6+20
 200 00c4 2A4B     		ldr	r3, .L6+20
 201 00c6 1B78     		ldrb	r3, [r3]
 202 00c8 DBB2     		uxtb	r3, r3
 203 00ca 43F00403 		orr	r3, r3, #4
 204 00ce DBB2     		uxtb	r3, r3
 205 00d0 1370     		strb	r3, [r2]
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 206              		.loc 1 297 0
 207 00d2 2A4B     		ldr	r3, .L6+32
 208 00d4 0022     		movs	r2, #0
 209 00d6 1A70     		strb	r2, [r3]
 298:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 210              		.loc 1 298 0
 211 00d8 294B     		ldr	r3, .L6+36
 212 00da 0022     		movs	r2, #0
 213 00dc 1A70     		strb	r2, [r3]
 299:Generated_Source\PSoC5/USBUART.c **** 
 300:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 10


 301:Generated_Source\PSoC5/USBUART.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USBUART.c ****     {
 304:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USBUART.c **** 
 306:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USBUART.c ****         USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USBUART.c ****     }
 310:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USBUART.c **** 
 312:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 214              		.loc 1 312 0
 215 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 216 00e0 1846     		mov	r0, r3
 217 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 313:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USBUART.c **** 
 315:Generated_Source\PSoC5/USBUART.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USBUART.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_HI_VECT_NUM,  USBUART_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_HI_VECT_NUM, &USBUART_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USBUART.c **** 
 321:Generated_Source\PSoC5/USBUART.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_LO_VECT_NUM,  USBUART_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_LO_VECT_NUM, &USBUART_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USBUART.c **** 
 325:Generated_Source\PSoC5/USBUART.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_INTR_MED_VECT_NUM,  USBUART_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_INTR_MED_VECT_NUM, &USBUART_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USBUART.c **** 
 329:Generated_Source\PSoC5/USBUART.c **** #else
 330:Generated_Source\PSoC5/USBUART.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 218              		.loc 1 331 0
 219 00e6 1720     		movs	r0, #23
 220 00e8 0721     		movs	r1, #7
 221 00ea FFF7FEFF 		bl	CyIntSetPriority
 332:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 222              		.loc 1 332 0
 223 00ee 1720     		movs	r0, #23
 224 00f0 2449     		ldr	r1, .L6+40
 225 00f2 FFF7FEFF 		bl	CyIntSetVector
 333:Generated_Source\PSoC5/USBUART.c **** 
 334:Generated_Source\PSoC5/USBUART.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 226              		.loc 1 335 0
 227 00f6 1820     		movs	r0, #24
 228 00f8 0721     		movs	r1, #7
 229 00fa FFF7FEFF 		bl	CyIntSetPriority
 336:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 230              		.loc 1 336 0
 231 00fe 1820     		movs	r0, #24
 232 0100 2149     		ldr	r1, .L6+44
 233 0102 FFF7FEFF 		bl	CyIntSetVector
 337:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 11


 338:Generated_Source\PSoC5/USBUART.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_SOF_VECT_NUM,  USBUART_SOF_PRIOR);
 234              		.loc 1 340 0
 235 0106 1520     		movs	r0, #21
 236 0108 0721     		movs	r1, #7
 237 010a FFF7FEFF 		bl	CyIntSetPriority
 341:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM, &USBUART_SOF_ISR);
 238              		.loc 1 341 0
 239 010e 1520     		movs	r0, #21
 240 0110 1E49     		ldr	r1, .L6+48
 241 0112 FFF7FEFF 		bl	CyIntSetVector
 342:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USBUART.c **** 
 344:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_1_VECT_NUM,  USBUART_EP_1_PRIOR);
 242              		.loc 1 346 0
 243 0116 0220     		movs	r0, #2
 244 0118 0721     		movs	r1, #7
 245 011a FFF7FEFF 		bl	CyIntSetPriority
 347:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,  &USBUART_EP_1_ISR);
 246              		.loc 1 347 0
 247 011e 0220     		movs	r0, #2
 248 0120 1B49     		ldr	r1, .L6+52
 249 0122 FFF7FEFF 		bl	CyIntSetVector
 348:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USBUART.c **** 
 350:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_2_VECT_NUM,  USBUART_EP_2_PRIOR);
 250              		.loc 1 352 0
 251 0126 0320     		movs	r0, #3
 252 0128 0721     		movs	r1, #7
 253 012a FFF7FEFF 		bl	CyIntSetPriority
 353:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM, &USBUART_EP_2_ISR);
 254              		.loc 1 353 0
 255 012e 0320     		movs	r0, #3
 256 0130 1849     		ldr	r1, .L6+56
 257 0132 FFF7FEFF 		bl	CyIntSetVector
 354:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USBUART.c **** 
 356:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_3_VECT_NUM,  USBUART_EP_3_PRIOR);
 258              		.loc 1 358 0
 259 0136 0420     		movs	r0, #4
 260 0138 0721     		movs	r1, #7
 261 013a FFF7FEFF 		bl	CyIntSetPriority
 359:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM, &USBUART_EP_3_ISR);
 262              		.loc 1 359 0
 263 013e 0420     		movs	r0, #4
 264 0140 1549     		ldr	r1, .L6+60
 265 0142 FFF7FEFF 		bl	CyIntSetVector
 360:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USBUART.c **** 
 362:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 4 Interrupt. */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 12


 363:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_4_VECT_NUM,  USBUART_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM, &USBUART_EP_4_ISR);
 366:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USBUART.c **** 
 368:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_5_VECT_NUM,  USBUART_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM, &USBUART_EP_5_ISR);
 372:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USBUART.c **** 
 374:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_6_VECT_NUM,  USBUART_EP_6_PRIOR);
 377:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM, &USBUART_EP_6_ISR);
 378:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USBUART.c **** 
 380:Generated_Source\PSoC5/USBUART.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_7_VECT_NUM,  USBUART_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM, &USBUART_EP_7_ISR);
 384:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USBUART.c **** 
 386:Generated_Source\PSoC5/USBUART.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_EP_8_VECT_NUM,  USBUART_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM, &USBUART_EP_8_ISR);
 390:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USBUART.c **** 
 392:Generated_Source\PSoC5/USBUART.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority     (USBUART_ARB_VECT_NUM,  USBUART_ARB_PRIOR);
 395:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM, &USBUART_ARB_ISR);
 396:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USBUART.c **** 
 399:Generated_Source\PSoC5/USBUART.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority     (USBUART_DP_INTC_VECT_NUM,  USBUART_DP_INTC_PRIORITY);
 266              		.loc 1 401 0
 267 0146 0C20     		movs	r0, #12
 268 0148 0721     		movs	r1, #7
 269 014a FFF7FEFF 		bl	CyIntSetPriority
 402:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_DP_INTC_VECT_NUM, &USBUART_DP_ISR);
 270              		.loc 1 402 0
 271 014e 0C20     		movs	r0, #12
 272 0150 1249     		ldr	r1, .L6+64
 273 0152 FFF7FEFF 		bl	CyIntSetVector
 403:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USBUART.c **** 
 405:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USBUART.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitEpDma();
 408:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USBUART.c **** }
 274              		.loc 1 409 0
 275 0156 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 13


 276              		.cfi_def_cfa_offset 8
 277 0158 BD46     		mov	sp, r7
 278              		.cfi_def_cfa_register 13
 279              		@ sp needed
 280 015a 80BD     		pop	{r7, pc}
 281              	.L7:
 282              		.align	2
 283              	.L6:
 284 015c A5430040 		.word	1073759141
 285 0160 B5430040 		.word	1073759157
 286 0164 9D600040 		.word	1073766557
 287 0168 09600040 		.word	1073766409
 288 016c 10600040 		.word	1073766416
 289 0170 94430040 		.word	1073759124
 290 0174 12600040 		.word	1073766418
 291 0178 F8510040 		.word	1073762808
 292 017c 84600040 		.word	1073766532
 293 0180 85600040 		.word	1073766533
 294 0184 00000000 		.word	USBUART_BUS_RESET_ISR
 295 0188 00000000 		.word	USBUART_EP_0_ISR
 296 018c 00000000 		.word	USBUART_SOF_ISR
 297 0190 00000000 		.word	USBUART_EP_1_ISR
 298 0194 00000000 		.word	USBUART_EP_2_ISR
 299 0198 00000000 		.word	USBUART_EP_3_ISR
 300 019c 00000000 		.word	USBUART_DP_ISR
 301              		.cfi_endproc
 302              	.LFE1:
 303              		.size	USBUART_Init, .-USBUART_Init
 304              		.section	.text.USBUART_InitComponent,"ax",%progbits
 305              		.align	2
 306              		.global	USBUART_InitComponent
 307              		.thumb
 308              		.thumb_func
 309              		.type	USBUART_InitComponent, %function
 310              	USBUART_InitComponent:
 311              	.LFB2:
 410:Generated_Source\PSoC5/USBUART.c **** 
 411:Generated_Source\PSoC5/USBUART.c **** 
 412:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 414:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USBUART.c **** *
 416:Generated_Source\PSoC5/USBUART.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USBUART.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USBUART.c **** *
 419:Generated_Source\PSoC5/USBUART.c **** * \param device:
 420:Generated_Source\PSoC5/USBUART.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USBUART.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USBUART.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USBUART.c **** *   field.
 424:Generated_Source\PSoC5/USBUART.c **** *  \param mode:
 425:Generated_Source\PSoC5/USBUART.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USBUART.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USBUART.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USBUART.c **** *   following list.
 429:Generated_Source\PSoC5/USBUART.c **** *
 430:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_3V_OPERATION* - Disable voltage regulator and pass-
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 14


 431:Generated_Source\PSoC5/USBUART.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USBUART.c **** *
 433:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USBUART.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USBUART.c **** *
 436:Generated_Source\PSoC5/USBUART.c **** *       *USBUART_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USBUART.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USBUART.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USBUART.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USBUART.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USBUART.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USBUART.c **** *
 443:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 444:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_device
 445:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_transferState
 446:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 447:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 448:Generated_Source\PSoC5/USBUART.c **** *
 449:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USBUART.c **** *
 454:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USBUART.c **** *
 456:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 457:Generated_Source\PSoC5/USBUART.c **** *  No.
 458:Generated_Source\PSoC5/USBUART.c **** *
 459:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USBUART.c **** {
 312              		.loc 1 461 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316 0000 80B5     		push	{r7, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 82B0     		sub	sp, sp, #8
 321              		.cfi_def_cfa_offset 16
 322 0004 00AF     		add	r7, sp, #0
 323              		.cfi_def_cfa_register 7
 324 0006 0346     		mov	r3, r0
 325 0008 0A46     		mov	r2, r1
 326 000a FB71     		strb	r3, [r7, #7]
 327 000c 1346     		mov	r3, r2
 328 000e BB71     		strb	r3, [r7, #6]
 462:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USBUART.c ****     */
 466:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 468:Generated_Source\PSoC5/USBUART.c **** 
 469:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USBUART.c ****     {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 15


 471:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USBUART.c ****     }
 473:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USBUART.c **** 
 475:Generated_Source\PSoC5/USBUART.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 329              		.loc 1 476 0
 330 0010 2E4A     		ldr	r2, .L14
 331 0012 FB79     		ldrb	r3, [r7, #7]
 332 0014 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/USBUART.c **** 
 478:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 333              		.loc 1 479 0
 334 0016 2E4B     		ldr	r3, .L14+4
 335 0018 0022     		movs	r2, #0
 336 001a 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 337              		.loc 1 480 0
 338 001c 2D4B     		ldr	r3, .L14+8
 339 001e 0022     		movs	r2, #0
 340 0020 1A70     		strb	r2, [r3]
 481:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 341              		.loc 1 481 0
 342 0022 2D4B     		ldr	r3, .L14+12
 343 0024 0022     		movs	r2, #0
 344 0026 1A70     		strb	r2, [r3]
 482:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 345              		.loc 1 482 0
 346 0028 2C4B     		ldr	r3, .L14+16
 347 002a 0022     		movs	r2, #0
 348 002c 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 349              		.loc 1 483 0
 350 002e 2C4B     		ldr	r3, .L14+20
 351 0030 0022     		movs	r2, #0
 352 0032 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 353              		.loc 1 484 0
 354 0034 2B4B     		ldr	r3, .L14+24
 355 0036 0022     		movs	r2, #0
 356 0038 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 357              		.loc 1 485 0
 358 003a 2B4B     		ldr	r3, .L14+28
 359 003c 0022     		movs	r2, #0
 360 003e 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC5/USBUART.c **** 
 487:Generated_Source\PSoC5/USBUART.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USBUART.c **** #else
 493:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 361              		.loc 1 493 0
 362 0040 2A4B     		ldr	r3, .L14+32
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 16


 363 0042 4FF40002 		mov	r2, #8388608
 364 0046 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 365              		.loc 1 494 0
 366 0048 284B     		ldr	r3, .L14+32
 367 004a 4FF08072 		mov	r2, #16777216
 368 004e 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USBUART.c **** 
 496:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 369              		.loc 1 497 0
 370 0050 264B     		ldr	r3, .L14+32
 371 0052 4FF40012 		mov	r2, #2097152
 372 0056 1A60     		str	r2, [r3]
 498:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USBUART.c **** 
 500:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 373              		.loc 1 501 0
 374 0058 244B     		ldr	r3, .L14+32
 375 005a 0422     		movs	r2, #4
 376 005c 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USBUART.c **** 
 504:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 377              		.loc 1 505 0
 378 005e 234B     		ldr	r3, .L14+32
 379 0060 0822     		movs	r2, #8
 380 0062 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USBUART.c **** 
 508:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 381              		.loc 1 509 0
 382 0064 214B     		ldr	r3, .L14+32
 383 0066 1022     		movs	r2, #16
 384 0068 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USBUART.c **** 
 516:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USBUART.c **** 
 520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USBUART.c **** 
 528:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 17


 529:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USBUART.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_INT_EN_REG = USBUART_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USBUART.c **** 
 537:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USBUART.c **** #endif   /* (USBUART_EP_MANAGEMENT_DMA && USBUART_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USBUART.c **** 
 542:Generated_Source\PSoC5/USBUART.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USBUART.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USBUART.c ****     USBUART_ARB_CFG_REG = USBUART_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USBUART.c **** 
 547:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USBUART.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USBUART.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USBUART.c **** 
 551:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 552:Generated_Source\PSoC5/USBUART.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USBUART.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USBUART_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USBUART.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USBUART.c **** 
 557:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USBUART.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USBUART.c ****         #else
 562:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USBUART.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USBUART.c **** 
 572:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 385              		.loc 1 573 0
 386 006a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 387 006c 002B     		cmp	r3, #0
 388 006e 02D0     		beq	.L10
 389 0070 012B     		cmp	r3, #1
 390 0072 09D0     		beq	.L11
 391 0074 11E0     		b	.L13
 392              	.L10:
 574:Generated_Source\PSoC5/USBUART.c ****     {
 575:Generated_Source\PSoC5/USBUART.c ****     case USBUART_3V_OPERATION:
 576:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 18


 393              		.loc 1 577 0
 394 0076 1E4A     		ldr	r2, .L14+36
 395 0078 1D4B     		ldr	r3, .L14+36
 396 007a 1B78     		ldrb	r3, [r3]
 397 007c DBB2     		uxtb	r3, r3
 398 007e 23F00103 		bic	r3, r3, #1
 399 0082 DBB2     		uxtb	r3, r3
 400 0084 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USBUART.c ****         break;
 401              		.loc 1 578 0
 402 0086 11E0     		b	.L12
 403              	.L11:
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     case USBUART_5V_OPERATION:
 581:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 404              		.loc 1 582 0
 405 0088 194A     		ldr	r2, .L14+36
 406 008a 194B     		ldr	r3, .L14+36
 407 008c 1B78     		ldrb	r3, [r3]
 408 008e DBB2     		uxtb	r3, r3
 409 0090 43F00103 		orr	r3, r3, #1
 410 0094 DBB2     		uxtb	r3, r3
 411 0096 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USBUART.c ****         break;
 412              		.loc 1 583 0
 413 0098 08E0     		b	.L12
 414              	.L13:
 584:Generated_Source\PSoC5/USBUART.c **** 
 585:Generated_Source\PSoC5/USBUART.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_VDDD_MV < USBUART_3500MV)
 587:Generated_Source\PSoC5/USBUART.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG &= (uint8) ~USBUART_CR1_REG_ENABLE;
 589:Generated_Source\PSoC5/USBUART.c ****     #else
 590:Generated_Source\PSoC5/USBUART.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USBUART.c ****         USBUART_CR1_REG |= (uint8)  USBUART_CR1_REG_ENABLE;
 415              		.loc 1 591 0
 416 009a 154A     		ldr	r2, .L14+36
 417 009c 144B     		ldr	r3, .L14+36
 418 009e 1B78     		ldrb	r3, [r3]
 419 00a0 DBB2     		uxtb	r3, r3
 420 00a2 43F00103 		orr	r3, r3, #1
 421 00a6 DBB2     		uxtb	r3, r3
 422 00a8 1370     		strb	r3, [r2]
 592:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_VDDD_MV < USBUART_3500MV) */
 593:Generated_Source\PSoC5/USBUART.c ****         break;
 423              		.loc 1 593 0
 424 00aa 00BF     		nop
 425              	.L12:
 594:Generated_Source\PSoC5/USBUART.c ****     }
 595:Generated_Source\PSoC5/USBUART.c **** 
 596:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG &= (uint32) ~USBUART_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USBUART.c **** 
 600:Generated_Source\PSoC5/USBUART.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CNT_REG = USBUART_CLEAR_REG;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 19


 602:Generated_Source\PSoC5/USBUART.c **** 
 603:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USBUART.c **** 
 606:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USBUART.c ****         if (NULL != USBUART_GetBOSPtr())
 608:Generated_Source\PSoC5/USBUART.c ****         {
 609:Generated_Source\PSoC5/USBUART.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USBUART.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USBUART.c ****             */
 612:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG = (USBUART_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USBUART.c ****                                              USBUART_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USBUART.c ****         }
 615:Generated_Source\PSoC5/USBUART.c ****         else
 616:Generated_Source\PSoC5/USBUART.c ****         {
 617:Generated_Source\PSoC5/USBUART.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USBUART.c ****             USBUART_LPM_CTRL_REG &= (uint32) ~USBUART_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USBUART.c ****         }
 620:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USBUART.c **** 
 622:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USBUART.c **** 
 625:Generated_Source\PSoC5/USBUART.c **** #else
 626:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 426              		.loc 1 627 0
 427 00ac 114B     		ldr	r3, .L14+40
 428 00ae 0322     		movs	r2, #3
 429 00b0 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USBUART.c **** 
 629:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 430              		.loc 1 630 0
 431 00b2 114B     		ldr	r3, .L14+44
 432 00b4 8022     		movs	r2, #128
 433 00b6 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(USBUART_WAIT_CR0_REG_STABILITY);
 434              		.loc 1 631 0
 435 00b8 0120     		movs	r0, #1
 436 00ba FFF7FEFF 		bl	CyDelayCycles
 632:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USBUART.c **** 
 634:Generated_Source\PSoC5/USBUART.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG = USBUART_USBIO_CR1_USBPUEN;
 437              		.loc 1 635 0
 438 00be 0F4B     		ldr	r3, .L14+48
 439 00c0 0422     		movs	r2, #4
 440 00c2 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC5/USBUART.c **** }
 441              		.loc 1 636 0
 442 00c4 0837     		adds	r7, r7, #8
 443              		.cfi_def_cfa_offset 8
 444 00c6 BD46     		mov	sp, r7
 445              		.cfi_def_cfa_register 13
 446              		@ sp needed
 447 00c8 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 20


 448              	.L15:
 449 00ca 00BF     		.align	2
 450              	.L14:
 451 00cc 00000000 		.word	USBUART_device
 452 00d0 00000000 		.word	USBUART_transferState
 453 00d4 00000000 		.word	USBUART_configurationChanged
 454 00d8 00000000 		.word	USBUART_configuration
 455 00dc 00000000 		.word	USBUART_interfaceNumber
 456 00e0 00000000 		.word	USBUART_deviceAddress
 457 00e4 00000000 		.word	USBUART_deviceStatus
 458 00e8 00000000 		.word	USBUART_lastPacketSize
 459 00ec 00E100E0 		.word	-536813312
 460 00f0 09600040 		.word	1073766409
 461 00f4 28600040 		.word	1073766440
 462 00f8 08600040 		.word	1073766408
 463 00fc 12600040 		.word	1073766418
 464              		.cfi_endproc
 465              	.LFE2:
 466              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 467              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 468              		.align	2
 469              		.global	USBUART_ReInitComponent
 470              		.thumb
 471              		.thumb_func
 472              		.type	USBUART_ReInitComponent, %function
 473              	USBUART_ReInitComponent:
 474              	.LFB3:
 637:Generated_Source\PSoC5/USBUART.c **** 
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 641:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USBUART.c **** *
 643:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USBUART.c **** *
 646:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 647:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USBUART.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USBUART.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USBUART.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USBUART.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USBUART.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USBUART.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 21


 667:Generated_Source\PSoC5/USBUART.c **** * \reentrant
 668:Generated_Source\PSoC5/USBUART.c **** *  No.
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USBUART.c **** {
 475              		.loc 1 672 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 0
 478              		@ frame_needed = 1, uses_anonymous_args = 0
 479              		@ link register save eliminated.
 480 0000 80B4     		push	{r7}
 481              		.cfi_def_cfa_offset 4
 482              		.cfi_offset 7, -4
 483 0002 00AF     		add	r7, sp, #0
 484              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USBUART.c ****     */
 676:Generated_Source\PSoC5/USBUART.c **** #if defined(USBUART_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USBUART.c ****     uint8 i;
 678:Generated_Source\PSoC5/USBUART.c **** 
 679:Generated_Source\PSoC5/USBUART.c ****     for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USBUART.c ****     {
 681:Generated_Source\PSoC5/USBUART.c ****         USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USBUART.c ****     }
 683:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USBUART.c **** 
 685:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState   = USBUART_TRANS_STATE_IDLE;
 485              		.loc 1 686 0
 486 0004 0F4B     		ldr	r3, .L17
 487 0006 0022     		movs	r2, #0
 488 0008 1A70     		strb	r2, [r3]
 687:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 489              		.loc 1 687 0
 490 000a 0F4B     		ldr	r3, .L17+4
 491 000c 0022     		movs	r2, #0
 492 000e 1A70     		strb	r2, [r3]
 688:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 493              		.loc 1 688 0
 494 0010 0E4B     		ldr	r3, .L17+8
 495 0012 0022     		movs	r2, #0
 496 0014 1A70     		strb	r2, [r3]
 689:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 497              		.loc 1 689 0
 498 0016 0E4B     		ldr	r3, .L17+12
 499 0018 0022     		movs	r2, #0
 500 001a 1A70     		strb	r2, [r3]
 690:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
 501              		.loc 1 690 0
 502 001c 0D4B     		ldr	r3, .L17+16
 503 001e 0022     		movs	r2, #0
 504 0020 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 505              		.loc 1 691 0
 506 0022 0D4B     		ldr	r3, .L17+20
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 22


 507 0024 0022     		movs	r2, #0
 508 0026 1A70     		strb	r2, [r3]
 692:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize  = 0u;
 509              		.loc 1 692 0
 510 0028 0C4B     		ldr	r3, .L17+24
 511 002a 0022     		movs	r2, #0
 512 002c 1A70     		strb	r2, [r3]
 693:Generated_Source\PSoC5/USBUART.c **** 
 694:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USBUART.c **** #else
 698:Generated_Source\PSoC5/USBUART.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USBUART.c ****     USBUART_EP0_CR_REG = USBUART_MODE_STALL_IN_OUT;
 513              		.loc 1 699 0
 514 002e 0C4B     		ldr	r3, .L17+28
 515 0030 0322     		movs	r2, #3
 516 0032 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USBUART.c **** 
 702:Generated_Source\PSoC5/USBUART.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG = USBUART_DEFUALT_CR0;
 517              		.loc 1 703 0
 518 0034 0B4B     		ldr	r3, .L17+32
 519 0036 8022     		movs	r2, #128
 520 0038 1A70     		strb	r2, [r3]
 704:Generated_Source\PSoC5/USBUART.c **** }
 521              		.loc 1 704 0
 522 003a BD46     		mov	sp, r7
 523              		.cfi_def_cfa_register 13
 524              		@ sp needed
 525 003c 5DF8047B 		ldr	r7, [sp], #4
 526              		.cfi_restore 7
 527              		.cfi_def_cfa_offset 0
 528 0040 7047     		bx	lr
 529              	.L18:
 530 0042 00BF     		.align	2
 531              	.L17:
 532 0044 00000000 		.word	USBUART_transferState
 533 0048 00000000 		.word	USBUART_configurationChanged
 534 004c 00000000 		.word	USBUART_configuration
 535 0050 00000000 		.word	USBUART_interfaceNumber
 536 0054 00000000 		.word	USBUART_deviceAddress
 537 0058 00000000 		.word	USBUART_deviceStatus
 538 005c 00000000 		.word	USBUART_lastPacketSize
 539 0060 28600040 		.word	1073766440
 540 0064 08600040 		.word	1073766408
 541              		.cfi_endproc
 542              	.LFE3:
 543              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 544              		.section	.text.USBUART_Stop,"ax",%progbits
 545              		.align	2
 546              		.global	USBUART_Stop
 547              		.thumb
 548              		.thumb_func
 549              		.type	USBUART_Stop, %function
 550              	USBUART_Stop:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 23


 551              	.LFB4:
 705:Generated_Source\PSoC5/USBUART.c **** 
 706:Generated_Source\PSoC5/USBUART.c **** 
 707:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 709:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USBUART.c **** *
 711:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USBUART.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USBUART.c **** *
 714:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 715:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configuration
 716:Generated_Source\PSoC5/USBUART.c **** *
 717:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USBUART.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USBUART.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USBUART.c **** *
 722:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_deviceStatus
 723:Generated_Source\PSoC5/USBUART.c **** *
 724:Generated_Source\PSoC5/USBUART.c **** *   \ref USBUART_configurationChanged
 725:Generated_Source\PSoC5/USBUART.c **** *
 726:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 730:Generated_Source\PSoC5/USBUART.c **** {
 552              		.loc 1 730 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 8
 555              		@ frame_needed = 1, uses_anonymous_args = 0
 556 0000 80B5     		push	{r7, lr}
 557              		.cfi_def_cfa_offset 8
 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 560 0002 82B0     		sub	sp, sp, #8
 561              		.cfi_def_cfa_offset 16
 562 0004 00AF     		add	r7, sp, #0
 563              		.cfi_def_cfa_register 7
 731:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USBUART.c **** 
 733:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USBUART.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USBUART.c ****     USBUART_Stop_DMA(USBUART_MAX_EP);
 736:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USBUART.c **** 
 738:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 564              		.loc 1 738 0
 565 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 566 000a 0346     		mov	r3, r0
 567 000c FB71     		strb	r3, [r7, #7]
 739:Generated_Source\PSoC5/USBUART.c **** 
 740:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8) ~USBUART_CR0_ENABLE;
 568              		.loc 1 741 0
 569 000e 324A     		ldr	r2, .L20
 570 0010 314B     		ldr	r3, .L20
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 24


 571 0012 1B78     		ldrb	r3, [r3]
 572 0014 DBB2     		uxtb	r3, r3
 573 0016 03F07F03 		and	r3, r3, #127
 574 001a DBB2     		uxtb	r3, r3
 575 001c 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USBUART.c **** 
 743:Generated_Source\PSoC5/USBUART.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8) ~ USBUART_USBIO_CR1_USBPUEN;
 576              		.loc 1 744 0
 577 001e 2F4A     		ldr	r2, .L20+4
 578 0020 2E4B     		ldr	r3, .L20+4
 579 0022 1B78     		ldrb	r3, [r3]
 580 0024 DBB2     		uxtb	r3, r3
 581 0026 23F00403 		bic	r3, r3, #4
 582 002a DBB2     		uxtb	r3, r3
 583 002c 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USBUART.c **** 
 746:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USBUART.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USBUART.c ****     USBUART_POWER_CTRL_REG &= (uint32) ~USBUART_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USBUART.c **** #else
 750:Generated_Source\PSoC5/USBUART.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG  &= (uint8) ~USBUART_PM_ACT_EN_FSUSB;
 584              		.loc 1 751 0
 585 002e 2C4A     		ldr	r2, .L20+8
 586 0030 2B4B     		ldr	r3, .L20+8
 587 0032 1B78     		ldrb	r3, [r3]
 588 0034 DBB2     		uxtb	r3, r3
 589 0036 23F00103 		bic	r3, r3, #1
 590 003a DBB2     		uxtb	r3, r3
 591 003c 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8) ~USBUART_PM_STBY_EN_FSUSB;
 592              		.loc 1 752 0
 593 003e 294A     		ldr	r2, .L20+12
 594 0040 284B     		ldr	r3, .L20+12
 595 0042 1B78     		ldrb	r3, [r3]
 596 0044 DBB2     		uxtb	r3, r3
 597 0046 23F00103 		bic	r3, r3, #1
 598 004a DBB2     		uxtb	r3, r3
 599 004c 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USBUART.c **** 
 754:Generated_Source\PSoC5/USBUART.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USBUART.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG |= (uint8) USBUART_DM_MASK;
 600              		.loc 1 756 0
 601 004e 264A     		ldr	r2, .L20+16
 602 0050 254B     		ldr	r3, .L20+16
 603 0052 1B78     		ldrb	r3, [r3]
 604 0054 DBB2     		uxtb	r3, r3
 605 0056 63F07F03 		orn	r3, r3, #127
 606 005a DBB2     		uxtb	r3, r3
 607 005c 1370     		strb	r3, [r2]
 757:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG |= (uint8) USBUART_DP_MASK;
 608              		.loc 1 757 0
 609 005e 224A     		ldr	r2, .L20+16
 610 0060 214B     		ldr	r3, .L20+16
 611 0062 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 25


 612 0064 DBB2     		uxtb	r3, r3
 613 0066 43F04003 		orr	r3, r3, #64
 614 006a DBB2     		uxtb	r3, r3
 615 006c 1370     		strb	r3, [r2]
 758:Generated_Source\PSoC5/USBUART.c **** 
 759:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USBUART.c **** 
 761:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 616              		.loc 1 761 0
 617 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 618 0070 1846     		mov	r0, r3
 619 0072 FFF7FEFF 		bl	CyExitCriticalSection
 762:Generated_Source\PSoC5/USBUART.c **** 
 763:Generated_Source\PSoC5/USBUART.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USBUART.c **** #else
 769:Generated_Source\PSoC5/USBUART.c **** 
 770:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 620              		.loc 1 770 0
 621 0076 1D4B     		ldr	r3, .L20+20
 622 0078 4FF40002 		mov	r2, #8388608
 623 007c 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 624              		.loc 1 771 0
 625 007e 1B4B     		ldr	r3, .L20+20
 626 0080 4FF08072 		mov	r2, #16777216
 627 0084 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USBUART.c **** 
 773:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 628              		.loc 1 774 0
 629 0086 194B     		ldr	r3, .L20+20
 630 0088 4FF40012 		mov	r2, #2097152
 631 008c 1A60     		str	r2, [r3]
 775:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 632              		.loc 1 778 0
 633 008e 174B     		ldr	r3, .L20+20
 634 0090 0422     		movs	r2, #4
 635 0092 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 636              		.loc 1 782 0
 637 0094 154B     		ldr	r3, .L20+20
 638 0096 0822     		movs	r2, #8
 639 0098 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USBUART.c **** 
 785:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 26


 640              		.loc 1 786 0
 641 009a 144B     		ldr	r3, .L20+20
 642 009c 1022     		movs	r2, #16
 643 009e 1A60     		str	r2, [r3]
 787:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USBUART.c **** 
 789:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USBUART.c **** 
 793:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USBUART.c **** 
 797:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USBUART.c **** 
 801:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USBUART.c **** 
 805:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USBUART.c **** 
 809:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USBUART.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USBUART.c ****         (void) USBUART_Dp_ClearInterrupt();
 644              		.loc 1 811 0
 645 00a0 FFF7FEFF 		bl	USBUART_Dp_ClearInterrupt
 812:Generated_Source\PSoC5/USBUART.c ****         CyIntClearPending(USBUART_DP_INTC_VECT_NUM);
 646              		.loc 1 812 0
 647 00a4 124B     		ldr	r3, .L20+24
 648 00a6 4FF48052 		mov	r2, #4096
 649 00aa 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USBUART.c **** 
 815:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USBUART.c **** 
 817:Generated_Source\PSoC5/USBUART.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 650              		.loc 1 818 0
 651 00ac 114B     		ldr	r3, .L20+28
 652 00ae 0022     		movs	r2, #0
 653 00b0 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration   = 0u;
 654              		.loc 1 819 0
 655 00b2 114B     		ldr	r3, .L20+32
 656 00b4 0022     		movs	r2, #0
 657 00b6 1A70     		strb	r2, [r3]
 820:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 658              		.loc 1 820 0
 659 00b8 104B     		ldr	r3, .L20+36
 660 00ba 0022     		movs	r2, #0
 661 00bc 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress   = 0u;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 27


 662              		.loc 1 821 0
 663 00be 104B     		ldr	r3, .L20+40
 664 00c0 0022     		movs	r2, #0
 665 00c2 1A70     		strb	r2, [r3]
 822:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus    = 0u;
 666              		.loc 1 822 0
 667 00c4 0F4B     		ldr	r3, .L20+44
 668 00c6 0022     		movs	r2, #0
 669 00c8 1A70     		strb	r2, [r3]
 823:Generated_Source\PSoC5/USBUART.c **** 
 824:Generated_Source\PSoC5/USBUART.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 670              		.loc 1 825 0
 671 00ca 0F4B     		ldr	r3, .L20+48
 672 00cc 0022     		movs	r2, #0
 673 00ce 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/USBUART.c **** }
 674              		.loc 1 826 0
 675 00d0 0837     		adds	r7, r7, #8
 676              		.cfi_def_cfa_offset 8
 677 00d2 BD46     		mov	sp, r7
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 00d4 80BD     		pop	{r7, pc}
 681              	.L21:
 682 00d6 00BF     		.align	2
 683              	.L20:
 684 00d8 08600040 		.word	1073766408
 685 00dc 12600040 		.word	1073766418
 686 00e0 A5430040 		.word	1073759141
 687 00e4 B5430040 		.word	1073759157
 688 00e8 F8510040 		.word	1073762808
 689 00ec 80E100E0 		.word	-536813184
 690 00f0 80E200E0 		.word	-536812928
 691 00f4 00000000 		.word	USBUART_configurationChanged
 692 00f8 00000000 		.word	USBUART_configuration
 693 00fc 00000000 		.word	USBUART_interfaceNumber
 694 0100 00000000 		.word	USBUART_deviceAddress
 695 0104 00000000 		.word	USBUART_deviceStatus
 696 0108 00000000 		.word	USBUART_initVar
 697              		.cfi_endproc
 698              	.LFE4:
 699              		.size	USBUART_Stop, .-USBUART_Stop
 700              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 701              		.align	2
 702              		.global	USBUART_CheckActivity
 703              		.thumb
 704              		.thumb_func
 705              		.type	USBUART_CheckActivity, %function
 706              	USBUART_CheckActivity:
 707              	.LFB5:
 827:Generated_Source\PSoC5/USBUART.c **** 
 828:Generated_Source\PSoC5/USBUART.c **** 
 829:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 831:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 28


 833:Generated_Source\PSoC5/USBUART.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USBUART.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USBUART.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USBUART.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USBUART.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USBUART.c **** *
 839:Generated_Source\PSoC5/USBUART.c **** *
 840:Generated_Source\PSoC5/USBUART.c **** * \return
 841:Generated_Source\PSoC5/USBUART.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USBUART.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USBUART.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USBUART.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USBUART.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USBUART.c **** *
 847:Generated_Source\PSoC5/USBUART.c **** *
 848:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 850:Generated_Source\PSoC5/USBUART.c **** {
 708              		.loc 1 850 0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 8
 711              		@ frame_needed = 1, uses_anonymous_args = 0
 712              		@ link register save eliminated.
 713 0000 80B4     		push	{r7}
 714              		.cfi_def_cfa_offset 4
 715              		.cfi_offset 7, -4
 716 0002 83B0     		sub	sp, sp, #12
 717              		.cfi_def_cfa_offset 16
 718 0004 00AF     		add	r7, sp, #0
 719              		.cfi_def_cfa_register 7
 851:Generated_Source\PSoC5/USBUART.c ****     uint8 cr1Reg = USBUART_CR1_REG;
 720              		.loc 1 851 0
 721 0006 0B4B     		ldr	r3, .L26
 722 0008 1B78     		ldrb	r3, [r3]
 723 000a FB71     		strb	r3, [r7, #7]
 852:Generated_Source\PSoC5/USBUART.c **** 
 853:Generated_Source\PSoC5/USBUART.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = (cr1Reg & (uint8) ~USBUART_CR1_BUS_ACTIVITY);
 724              		.loc 1 854 0
 725 000c 094A     		ldr	r2, .L26
 726 000e FB79     		ldrb	r3, [r7, #7]
 727 0010 23F00403 		bic	r3, r3, #4
 728 0014 DBB2     		uxtb	r3, r3
 729 0016 1370     		strb	r3, [r2]
 855:Generated_Source\PSoC5/USBUART.c **** 
 856:Generated_Source\PSoC5/USBUART.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USBUART.c ****     return ((0u != (cr1Reg & USBUART_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 730              		.loc 1 857 0
 731 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 732 001a 03F00403 		and	r3, r3, #4
 733 001e 002B     		cmp	r3, #0
 734 0020 01D0     		beq	.L23
 735              		.loc 1 857 0 is_stmt 0 discriminator 1
 736 0022 0123     		movs	r3, #1
 737 0024 00E0     		b	.L24
 738              	.L23:
 739              		.loc 1 857 0 discriminator 2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 29


 740 0026 0023     		movs	r3, #0
 741              	.L24:
 858:Generated_Source\PSoC5/USBUART.c **** }
 742              		.loc 1 858 0 is_stmt 1 discriminator 4
 743 0028 1846     		mov	r0, r3
 744 002a 0C37     		adds	r7, r7, #12
 745              		.cfi_def_cfa_offset 4
 746 002c BD46     		mov	sp, r7
 747              		.cfi_def_cfa_register 13
 748              		@ sp needed
 749 002e 5DF8047B 		ldr	r7, [sp], #4
 750              		.cfi_restore 7
 751              		.cfi_def_cfa_offset 0
 752 0032 7047     		bx	lr
 753              	.L27:
 754              		.align	2
 755              	.L26:
 756 0034 09600040 		.word	1073766409
 757              		.cfi_endproc
 758              	.LFE5:
 759              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 760              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 761              		.align	2
 762              		.global	USBUART_GetConfiguration
 763              		.thumb
 764              		.thumb_func
 765              		.type	USBUART_GetConfiguration, %function
 766              	USBUART_GetConfiguration:
 767              	.LFB6:
 859:Generated_Source\PSoC5/USBUART.c **** 
 860:Generated_Source\PSoC5/USBUART.c **** 
 861:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 863:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USBUART.c **** *
 865:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USBUART.c **** *
 867:Generated_Source\PSoC5/USBUART.c **** * \return
 868:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USBUART.c **** *  is not configured
 870:Generated_Source\PSoC5/USBUART.c **** *
 871:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USBUART.c **** {
 768              		.loc 1 873 0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 0
 771              		@ frame_needed = 1, uses_anonymous_args = 0
 772              		@ link register save eliminated.
 773 0000 80B4     		push	{r7}
 774              		.cfi_def_cfa_offset 4
 775              		.cfi_offset 7, -4
 776 0002 00AF     		add	r7, sp, #0
 777              		.cfi_def_cfa_register 7
 874:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_configuration);
 778              		.loc 1 874 0
 779 0004 034B     		ldr	r3, .L30
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 30


 780 0006 1B78     		ldrb	r3, [r3]
 781 0008 DBB2     		uxtb	r3, r3
 875:Generated_Source\PSoC5/USBUART.c **** }
 782              		.loc 1 875 0
 783 000a 1846     		mov	r0, r3
 784 000c BD46     		mov	sp, r7
 785              		.cfi_def_cfa_register 13
 786              		@ sp needed
 787 000e 5DF8047B 		ldr	r7, [sp], #4
 788              		.cfi_restore 7
 789              		.cfi_def_cfa_offset 0
 790 0012 7047     		bx	lr
 791              	.L31:
 792              		.align	2
 793              	.L30:
 794 0014 00000000 		.word	USBUART_configuration
 795              		.cfi_endproc
 796              	.LFE6:
 797              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 798              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 799              		.align	2
 800              		.global	USBUART_IsConfigurationChanged
 801              		.thumb
 802              		.thumb_func
 803              		.type	USBUART_IsConfigurationChanged, %function
 804              	USBUART_IsConfigurationChanged:
 805              	.LFB7:
 876:Generated_Source\PSoC5/USBUART.c **** 
 877:Generated_Source\PSoC5/USBUART.c **** 
 878:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 880:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USBUART.c **** *
 882:Generated_Source\PSoC5/USBUART.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USBUART.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USBUART.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USBUART.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USBUART.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USBUART.c **** *
 888:Generated_Source\PSoC5/USBUART.c **** * \return
 889:Generated_Source\PSoC5/USBUART.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USBUART.c **** *  returned.
 891:Generated_Source\PSoC5/USBUART.c **** *
 892:Generated_Source\PSoC5/USBUART.c **** * \globalvars
 893:Generated_Source\PSoC5/USBUART.c **** *
 894:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USBUART.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USBUART.c **** *
 897:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USBUART.c **** {
 806              		.loc 1 899 0
 807              		.cfi_startproc
 808              		@ args = 0, pretend = 0, frame = 8
 809              		@ frame_needed = 1, uses_anonymous_args = 0
 810              		@ link register save eliminated.
 811 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 31


 812              		.cfi_def_cfa_offset 4
 813              		.cfi_offset 7, -4
 814 0002 83B0     		sub	sp, sp, #12
 815              		.cfi_def_cfa_offset 16
 816 0004 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 900:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 818              		.loc 1 900 0
 819 0006 0023     		movs	r3, #0
 820 0008 FB71     		strb	r3, [r7, #7]
 901:Generated_Source\PSoC5/USBUART.c **** 
 902:Generated_Source\PSoC5/USBUART.c ****     if (USBUART_configurationChanged != 0u)
 821              		.loc 1 902 0
 822 000a 094B     		ldr	r3, .L35
 823 000c 1B78     		ldrb	r3, [r3]
 824 000e DBB2     		uxtb	r3, r3
 825 0010 002B     		cmp	r3, #0
 826 0012 05D0     		beq	.L33
 903:Generated_Source\PSoC5/USBUART.c ****     {
 904:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
 827              		.loc 1 904 0
 828 0014 064B     		ldr	r3, .L35
 829 0016 1B78     		ldrb	r3, [r3]
 830 0018 FB71     		strb	r3, [r7, #7]
 905:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 831              		.loc 1 905 0
 832 001a 054B     		ldr	r3, .L35
 833 001c 0022     		movs	r2, #0
 834 001e 1A70     		strb	r2, [r3]
 835              	.L33:
 906:Generated_Source\PSoC5/USBUART.c ****     }
 907:Generated_Source\PSoC5/USBUART.c **** 
 908:Generated_Source\PSoC5/USBUART.c ****     return (res);
 836              		.loc 1 908 0
 837 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 909:Generated_Source\PSoC5/USBUART.c **** }
 838              		.loc 1 909 0
 839 0022 1846     		mov	r0, r3
 840 0024 0C37     		adds	r7, r7, #12
 841              		.cfi_def_cfa_offset 4
 842 0026 BD46     		mov	sp, r7
 843              		.cfi_def_cfa_register 13
 844              		@ sp needed
 845 0028 5DF8047B 		ldr	r7, [sp], #4
 846              		.cfi_restore 7
 847              		.cfi_def_cfa_offset 0
 848 002c 7047     		bx	lr
 849              	.L36:
 850 002e 00BF     		.align	2
 851              	.L35:
 852 0030 00000000 		.word	USBUART_configurationChanged
 853              		.cfi_endproc
 854              	.LFE7:
 855              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 856              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 857              		.align	2
 858              		.global	USBUART_GetInterfaceSetting
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 32


 859              		.thumb
 860              		.thumb_func
 861              		.type	USBUART_GetInterfaceSetting, %function
 862              	USBUART_GetInterfaceSetting:
 863              	.LFB8:
 910:Generated_Source\PSoC5/USBUART.c **** 
 911:Generated_Source\PSoC5/USBUART.c **** 
 912:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 914:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USBUART.c **** *
 916:Generated_Source\PSoC5/USBUART.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USBUART.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USBUART.c **** *  interface.
 919:Generated_Source\PSoC5/USBUART.c **** *
 920:Generated_Source\PSoC5/USBUART.c **** *  \param
 921:Generated_Source\PSoC5/USBUART.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USBUART.c **** *
 923:Generated_Source\PSoC5/USBUART.c **** * \return
 924:Generated_Source\PSoC5/USBUART.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USBUART.c **** *
 926:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USBUART.c ****                                                     
 929:Generated_Source\PSoC5/USBUART.c **** {
 864              		.loc 1 929 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 8
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              		.cfi_def_cfa_offset 4
 871              		.cfi_offset 7, -4
 872 0002 83B0     		sub	sp, sp, #12
 873              		.cfi_def_cfa_offset 16
 874 0004 00AF     		add	r7, sp, #0
 875              		.cfi_def_cfa_register 7
 876 0006 0346     		mov	r3, r0
 877 0008 FB71     		strb	r3, [r7, #7]
 930:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_interfaceSetting[interfaceNumber]);
 878              		.loc 1 930 0
 879 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 880 000c 044A     		ldr	r2, .L39
 881 000e D35C     		ldrb	r3, [r2, r3]
 882 0010 DBB2     		uxtb	r3, r3
 931:Generated_Source\PSoC5/USBUART.c **** }
 883              		.loc 1 931 0
 884 0012 1846     		mov	r0, r3
 885 0014 0C37     		adds	r7, r7, #12
 886              		.cfi_def_cfa_offset 4
 887 0016 BD46     		mov	sp, r7
 888              		.cfi_def_cfa_register 13
 889              		@ sp needed
 890 0018 5DF8047B 		ldr	r7, [sp], #4
 891              		.cfi_restore 7
 892              		.cfi_def_cfa_offset 0
 893 001c 7047     		bx	lr
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 33


 894              	.L40:
 895 001e 00BF     		.align	2
 896              	.L39:
 897 0020 00000000 		.word	USBUART_interfaceSetting
 898              		.cfi_endproc
 899              	.LFE8:
 900              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 901              		.section	.text.USBUART_GetEPState,"ax",%progbits
 902              		.align	2
 903              		.global	USBUART_GetEPState
 904              		.thumb
 905              		.thumb_func
 906              		.type	USBUART_GetEPState, %function
 907              	USBUART_GetEPState:
 908              	.LFB9:
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 936:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USBUART.c **** *
 938:Generated_Source\PSoC5/USBUART.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USBUART.c **** *
 940:Generated_Source\PSoC5/USBUART.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USBUART.c **** *
 942:Generated_Source\PSoC5/USBUART.c **** * \return
 943:Generated_Source\PSoC5/USBUART.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USBUART.c **** *  their associated values are given in the following table. Use these constants
 945:Generated_Source\PSoC5/USBUART.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USBUART.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USBUART.c **** *
 948:Generated_Source\PSoC5/USBUART.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USBUART.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USBUART.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USBUART.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USBUART.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USBUART.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USBUART.c **** *
 958:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USBUART.c **** {
 909              		.loc 1 960 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 8
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913              		@ link register save eliminated.
 914 0000 80B4     		push	{r7}
 915              		.cfi_def_cfa_offset 4
 916              		.cfi_offset 7, -4
 917 0002 83B0     		sub	sp, sp, #12
 918              		.cfi_def_cfa_offset 16
 919 0004 00AF     		add	r7, sp, #0
 920              		.cfi_def_cfa_register 7
 921 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 34


 922 0008 FB71     		strb	r3, [r7, #7]
 961:Generated_Source\PSoC5/USBUART.c ****     return (USBUART_EP[epNumber].apiEpState);
 923              		.loc 1 961 0
 924 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 925 000c 0649     		ldr	r1, .L43
 926 000e 1346     		mov	r3, r2
 927 0010 5B00     		lsls	r3, r3, #1
 928 0012 1344     		add	r3, r3, r2
 929 0014 9B00     		lsls	r3, r3, #2
 930 0016 0B44     		add	r3, r3, r1
 931 0018 5B78     		ldrb	r3, [r3, #1]
 932 001a DBB2     		uxtb	r3, r3
 962:Generated_Source\PSoC5/USBUART.c **** }
 933              		.loc 1 962 0
 934 001c 1846     		mov	r0, r3
 935 001e 0C37     		adds	r7, r7, #12
 936              		.cfi_def_cfa_offset 4
 937 0020 BD46     		mov	sp, r7
 938              		.cfi_def_cfa_register 13
 939              		@ sp needed
 940 0022 5DF8047B 		ldr	r7, [sp], #4
 941              		.cfi_restore 7
 942              		.cfi_def_cfa_offset 0
 943 0026 7047     		bx	lr
 944              	.L44:
 945              		.align	2
 946              	.L43:
 947 0028 00000000 		.word	USBUART_EP
 948              		.cfi_endproc
 949              	.LFE9:
 950              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 951              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 952              		.align	2
 953              		.global	USBUART_GetEPCount
 954              		.thumb
 955              		.thumb_func
 956              		.type	USBUART_GetEPCount, %function
 957              	USBUART_GetEPCount:
 958              	.LFB10:
 963:Generated_Source\PSoC5/USBUART.c **** 
 964:Generated_Source\PSoC5/USBUART.c **** 
 965:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 967:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USBUART.c **** *
 969:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USBUART.c **** *
 974:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USBUART.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USBUART.c **** *
 977:Generated_Source\PSoC5/USBUART.c **** * \return
 978:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 35


 981:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USBUART.c **** {
 959              		.loc 1 983 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 16
 962              		@ frame_needed = 1, uses_anonymous_args = 0
 963              		@ link register save eliminated.
 964 0000 80B4     		push	{r7}
 965              		.cfi_def_cfa_offset 4
 966              		.cfi_offset 7, -4
 967 0002 85B0     		sub	sp, sp, #20
 968              		.cfi_def_cfa_offset 24
 969 0004 00AF     		add	r7, sp, #0
 970              		.cfi_def_cfa_register 7
 971 0006 0346     		mov	r3, r0
 972 0008 FB71     		strb	r3, [r7, #7]
 984:Generated_Source\PSoC5/USBUART.c ****     uint16 cntr = 0u;
 973              		.loc 1 984 0
 974 000a 0023     		movs	r3, #0
 975 000c FB81     		strh	r3, [r7, #14]	@ movhi
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 976              		.loc 1 986 0
 977 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 978 0010 002B     		cmp	r3, #0
 979 0012 1BD0     		beq	.L46
 980              		.loc 1 986 0 is_stmt 0 discriminator 1
 981 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 982 0016 082B     		cmp	r3, #8
 983 0018 18D8     		bhi	.L46
 987:Generated_Source\PSoC5/USBUART.c ****     {
 988:Generated_Source\PSoC5/USBUART.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USBUART_EPX_CNT0_MASK;
 984              		.loc 1 989 0 is_stmt 1
 985 001a 104A     		ldr	r2, .L48
 986 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 987 001e 1B01     		lsls	r3, r3, #4
 988 0020 1344     		add	r3, r3, r2
 989 0022 1B78     		ldrb	r3, [r3]
 990 0024 DBB2     		uxtb	r3, r3
 991 0026 9BB2     		uxth	r3, r3
 992 0028 03F00F03 		and	r3, r3, #15
 993 002c FB81     		strh	r3, [r7, #14]	@ movhi
 990:Generated_Source\PSoC5/USBUART.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 994              		.loc 1 990 0
 995 002e FB89     		ldrh	r3, [r7, #14]	@ movhi
 996 0030 1B02     		lsls	r3, r3, #8
 997 0032 9AB2     		uxth	r2, r3
 998 0034 0949     		ldr	r1, .L48
 999 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1000 0038 1B01     		lsls	r3, r3, #4
 1001 003a 0B44     		add	r3, r3, r1
 1002 003c 5B78     		ldrb	r3, [r3, #1]
 1003 003e DBB2     		uxtb	r3, r3
 1004 0040 9BB2     		uxth	r3, r3
 1005 0042 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 36


 1006 0044 FB81     		strh	r3, [r7, #14]	@ movhi
 991:Generated_Source\PSoC5/USBUART.c ****         cntr -= USBUART_EPX_CNTX_CRC_COUNT;
 1007              		.loc 1 991 0
 1008 0046 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1009 0048 023B     		subs	r3, r3, #2
 1010 004a FB81     		strh	r3, [r7, #14]	@ movhi
 1011              	.L46:
 992:Generated_Source\PSoC5/USBUART.c ****     }
 993:Generated_Source\PSoC5/USBUART.c **** 
 994:Generated_Source\PSoC5/USBUART.c ****     return (cntr);
 1012              		.loc 1 994 0
 1013 004c FB89     		ldrh	r3, [r7, #14]
 995:Generated_Source\PSoC5/USBUART.c **** }
 1014              		.loc 1 995 0
 1015 004e 1846     		mov	r0, r3
 1016 0050 1437     		adds	r7, r7, #20
 1017              		.cfi_def_cfa_offset 4
 1018 0052 BD46     		mov	sp, r7
 1019              		.cfi_def_cfa_register 13
 1020              		@ sp needed
 1021 0054 5DF8047B 		ldr	r7, [sp], #4
 1022              		.cfi_restore 7
 1023              		.cfi_def_cfa_offset 0
 1024 0058 7047     		bx	lr
 1025              	.L49:
 1026 005a 00BF     		.align	2
 1027              	.L48:
 1028 005c FC5F0040 		.word	1073766396
 1029              		.cfi_endproc
 1030              	.LFE10:
 1031              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 1032              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 1033              		.align	2
 1034              		.global	USBUART_LoadInEP
 1035              		.thumb
 1036              		.thumb_func
 1037              		.type	USBUART_LoadInEP, %function
 1038              	USBUART_LoadInEP:
 1039              	.LFB11:
 996:Generated_Source\PSoC5/USBUART.c **** 
 997:Generated_Source\PSoC5/USBUART.c **** 
 998:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEpDma
1002:Generated_Source\PSoC5/USBUART.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USBUART.c ****     *
1004:Generated_Source\PSoC5/USBUART.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USBUART.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USBUART.c ****     *
1007:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USBUART.c ****     static void USBUART_InitEpDma(void)
1009:Generated_Source\PSoC5/USBUART.c ****     {
1010:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep1_dma_CHANNEL] = USBUART_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 37


1014:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep2_dma_CHANNEL] = USBUART_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep3_dma_CHANNEL] = USBUART_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USBUART.c **** 
1022:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep4_dma_CHANNEL] = USBUART_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USBUART.c **** 
1026:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep5_dma_CHANNEL] = USBUART_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USBUART.c **** 
1030:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep6_dma_CHANNEL] = USBUART_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USBUART.c **** 
1034:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep7_dma_CHANNEL] = USBUART_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USBUART.c **** 
1038:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USBUART.c ****         CYDMA_CH_CTL_BASE.ctl[USBUART_ep8_dma_CHANNEL] = USBUART_ep8_dma_CHANNEL_CFG;
1040:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USBUART.c **** 
1042:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USBUART.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep1_dma_SetInterruptCallback(&USBUART_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USBUART.c **** 
1048:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep2_dma_SetInterruptCallback(&USBUART_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USBUART.c **** 
1052:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep3_dma_SetInterruptCallback(&USBUART_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep4_dma_SetInterruptCallback(&USBUART_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USBUART.c **** 
1060:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep5_dma_SetInterruptCallback(&USBUART_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USBUART.c **** 
1064:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep6_dma_SetInterruptCallback(&USBUART_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USBUART.c **** 
1068:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep7_dma_SetInterruptCallback(&USBUART_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA7_ACTIVE) */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 38


1071:Generated_Source\PSoC5/USBUART.c **** 
1072:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USBUART.c ****             (void) USBUART_ep8_dma_SetInterruptCallback(&USBUART_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USBUART.c ****     }
1077:Generated_Source\PSoC5/USBUART.c **** #else
1078:Generated_Source\PSoC5/USBUART.c **** 
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
1082:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USBUART.c ****     *
1084:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USBUART.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USBUART.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USBUART.c ****     *
1089:Generated_Source\PSoC5/USBUART.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USBUART.c ****     *
1091:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USBUART.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USBUART.c ****     *
1095:Generated_Source\PSoC5/USBUART.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USBUART.c ****     *
1097:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USBUART.c ****                                                                     
1100:Generated_Source\PSoC5/USBUART.c ****     {
1101:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
1102:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USBUART.c **** 
1104:Generated_Source\PSoC5/USBUART.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USBUART.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USBUART.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USBUART.c ****         pData = pData;
1108:Generated_Source\PSoC5/USBUART.c ****     #else
1109:Generated_Source\PSoC5/USBUART.c ****         if ((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USBUART.c ****         {
1111:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USBUART.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USBUART.c ****         }
1115:Generated_Source\PSoC5/USBUART.c ****         else
1116:Generated_Source\PSoC5/USBUART.c ****         {
1117:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USBUART.c ****         }
1121:Generated_Source\PSoC5/USBUART.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USBUART.c **** 
1123:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USBUART.c ****         {
1125:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP1:
1127:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 39


1128:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1129:Generated_Source\PSoC5/USBUART.c ****             break;
1130:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USBUART.c **** 
1132:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP2:
1134:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1136:Generated_Source\PSoC5/USBUART.c ****             break;
1137:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USBUART.c **** 
1139:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
1141:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1143:Generated_Source\PSoC5/USBUART.c ****             break;
1144:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USBUART.c **** 
1146:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
1148:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1150:Generated_Source\PSoC5/USBUART.c ****             break;
1151:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USBUART.c **** 
1153:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA5_ACTIVE)
1154:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
1155:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1157:Generated_Source\PSoC5/USBUART.c ****             break;
1158:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USBUART.c **** 
1160:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP6:
1162:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USBUART.c ****                                                                                     USBUART_DMA_REQ
1164:Generated_Source\PSoC5/USBUART.c ****             break;
1165:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USBUART.c **** 
1167:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP7:
1169:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1171:Generated_Source\PSoC5/USBUART.c ****             break;
1172:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USBUART.c **** 
1174:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USBUART.c ****         case USBUART_EP8:
1176:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(USBUART_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USBUART.c ****                                                                                         USBUART_DMA
1178:Generated_Source\PSoC5/USBUART.c ****             break;
1179:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USBUART.c **** 
1181:Generated_Source\PSoC5/USBUART.c ****         default:
1182:Generated_Source\PSoC5/USBUART.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USBUART.c ****             break;
1184:Generated_Source\PSoC5/USBUART.c ****         }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 40


1185:Generated_Source\PSoC5/USBUART.c **** 
1186:Generated_Source\PSoC5/USBUART.c ****         if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1187:Generated_Source\PSoC5/USBUART.c ****         {
1188:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USBUART.c **** 
1190:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USBUART.c ****         }
1194:Generated_Source\PSoC5/USBUART.c ****     }
1195:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
1199:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USBUART.c ****     *  
1201:Generated_Source\PSoC5/USBUART.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USBUART.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USBUART.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USBUART.c ****     *  to trigger DMA re-configuration when USBUART_LoadInEP() or 
1205:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USBUART.c ****     *  
1207:Generated_Source\PSoC5/USBUART.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USBUART.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USBUART.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_MAX_EP argument.
1211:Generated_Source\PSoC5/USBUART.c ****     *
1212:Generated_Source\PSoC5/USBUART.c ****     * \reentrant
1213:Generated_Source\PSoC5/USBUART.c ****     *  No.
1214:Generated_Source\PSoC5/USBUART.c ****     *
1215:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USBUART.c ****     {
1218:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
1219:Generated_Source\PSoC5/USBUART.c **** 
1220:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         do
1223:Generated_Source\PSoC5/USBUART.c ****         {
1224:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USBUART.c ****             if (0u != USBUART_DmaChan[i])
1226:Generated_Source\PSoC5/USBUART.c ****             {
1227:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(USBUART_DmaChan[i]);
1228:Generated_Source\PSoC5/USBUART.c ****             }
1229:Generated_Source\PSoC5/USBUART.c ****         #else
1230:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USBUART.c ****             {
1232:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
1233:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
1234:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USBUART.c ****             }
1236:Generated_Source\PSoC5/USBUART.c **** 
1237:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USBUART.c ****                 {
1240:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 41


1242:Generated_Source\PSoC5/USBUART.c ****                 }
1243:Generated_Source\PSoC5/USBUART.c ****             #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USBUART.c **** 
1245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USBUART.c ****             i++;
1247:Generated_Source\PSoC5/USBUART.c ****         }
1248:Generated_Source\PSoC5/USBUART.c ****         while ((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
1249:Generated_Source\PSoC5/USBUART.c ****     }
1250:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USBUART.c **** 
1252:Generated_Source\PSoC5/USBUART.c **** 
1253:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
1257:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USBUART.c ****     *
1259:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1260:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USBUART.c ****     *
1263:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1264:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USBUART.c ****     *
1268:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USBUART.c ****     {
1271:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USBUART.c **** 
1273:Generated_Source\PSoC5/USBUART.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USBUART.c ****         {
1275:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USBUART.c ****         }
1286:Generated_Source\PSoC5/USBUART.c ****         else
1287:Generated_Source\PSoC5/USBUART.c ****         {
1288:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USBUART.c ****                                    (USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USBUART.c ****         }
1298:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 42


1299:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USBUART.c ****     }
1302:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USBUART.c **** 
1305:Generated_Source\PSoC5/USBUART.c **** 
1306:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
1308:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USBUART.c **** *
1310:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USBUART.c **** *
1314:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1317:Generated_Source\PSoC5/USBUART.c **** *
1318:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USBUART.c **** *
1322:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1325:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USBUART.c **** *
1328:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
1332:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USBUART.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USBUART.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USBUART.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USBUART.c **** *
1337:Generated_Source\PSoC5/USBUART.c **** *
1338:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1339:Generated_Source\PSoC5/USBUART.c **** *  No.
1340:Generated_Source\PSoC5/USBUART.c **** *
1341:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USBUART.c ****                                                                         
1344:Generated_Source\PSoC5/USBUART.c **** {
 1040              		.loc 1 1344 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 16
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 1045 0000 B0B4     		push	{r4, r5, r7}
 1046              		.cfi_def_cfa_offset 12
 1047              		.cfi_offset 4, -12
 1048              		.cfi_offset 5, -8
 1049              		.cfi_offset 7, -4
 1050 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 43


 1051              		.cfi_def_cfa_offset 32
 1052 0004 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 1054 0006 0346     		mov	r3, r0
 1055 0008 3960     		str	r1, [r7]
 1056 000a FB71     		strb	r3, [r7, #7]
 1057 000c 1346     		mov	r3, r2	@ movhi
 1058 000e BB80     		strh	r3, [r7, #4]	@ movhi
1345:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1059              		.loc 1 1345 0
 1060 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1061 0012 002B     		cmp	r3, #0
 1062 0014 66D0     		beq	.L50
 1063              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1064 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1065 0018 082B     		cmp	r3, #8
 1066 001a 63D8     		bhi	.L50
1346:Generated_Source\PSoC5/USBUART.c ****     {
1347:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 1067              		.loc 1 1349 0 is_stmt 1
 1068 001c B988     		ldrh	r1, [r7, #4]
 1069 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1070 0020 3248     		ldr	r0, .L56
 1071 0022 1346     		mov	r3, r2
 1072 0024 5B00     		lsls	r3, r3, #1
 1073 0026 1344     		add	r3, r3, r2
 1074 0028 9B00     		lsls	r3, r3, #2
 1075 002a 0344     		add	r3, r3, r0
 1076 002c DB88     		ldrh	r3, [r3, #6]	@ movhi
 1077 002e 9BB2     		uxth	r3, r3
 1078 0030 C3F50073 		rsb	r3, r3, #512
 1079 0034 9942     		cmp	r1, r3
 1080 0036 0BD9     		bls	.L52
1350:Generated_Source\PSoC5/USBUART.c ****         {
1351:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 1081              		.loc 1 1351 0
 1082 0038 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1083 003a 2C49     		ldr	r1, .L56
 1084 003c 1346     		mov	r3, r2
 1085 003e 5B00     		lsls	r3, r3, #1
 1086 0040 1344     		add	r3, r3, r2
 1087 0042 9B00     		lsls	r3, r3, #2
 1088 0044 0B44     		add	r3, r3, r1
 1089 0046 DB88     		ldrh	r3, [r3, #6]	@ movhi
 1090 0048 9BB2     		uxth	r3, r3
 1091 004a C3F50073 		rsb	r3, r3, #512
 1092 004e BB80     		strh	r3, [r7, #4]	@ movhi
 1093              	.L52:
1352:Generated_Source\PSoC5/USBUART.c ****         }
1353:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USBUART.c **** 
1355:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USBUART_EP[epNumber].epT
 1094              		.loc 1 1356 0
 1095 0050 274C     		ldr	r4, .L56+4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 44


 1096 0052 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1097 0054 BB88     		ldrh	r3, [r7, #4]
 1098 0056 1B0A     		lsrs	r3, r3, #8
 1099 0058 9BB2     		uxth	r3, r3
 1100 005a D8B2     		uxtb	r0, r3
 1101 005c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1102 005e 234D     		ldr	r5, .L56
 1103 0060 1346     		mov	r3, r2
 1104 0062 5B00     		lsls	r3, r3, #1
 1105 0064 1344     		add	r3, r3, r2
 1106 0066 9B00     		lsls	r3, r3, #2
 1107 0068 2B44     		add	r3, r3, r5
 1108 006a DB78     		ldrb	r3, [r3, #3]
 1109 006c DBB2     		uxtb	r3, r3
 1110 006e 0343     		orrs	r3, r3, r0
 1111 0070 DAB2     		uxtb	r2, r3
 1112 0072 0B01     		lsls	r3, r1, #4
 1113 0074 2344     		add	r3, r3, r4
 1114 0076 1A70     		strb	r2, [r3]
1357:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 1115              		.loc 1 1357 0
 1116 0078 1D4A     		ldr	r2, .L56+4
 1117 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1118 007c B988     		ldrh	r1, [r7, #4]	@ movhi
 1119 007e C9B2     		uxtb	r1, r1
 1120 0080 1B01     		lsls	r3, r3, #4
 1121 0082 1344     		add	r3, r3, r2
 1122 0084 0A46     		mov	r2, r1
 1123 0086 5A70     		strb	r2, [r3, #1]
1358:Generated_Source\PSoC5/USBUART.c **** 
1359:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
 1124              		.loc 1 1360 0
 1125 0088 3B68     		ldr	r3, [r7]
 1126 008a 002B     		cmp	r3, #0
 1127 008c 13D0     		beq	.L53
 1128              	.LBB2:
1361:Generated_Source\PSoC5/USBUART.c ****         {
1362:Generated_Source\PSoC5/USBUART.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1364:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
 1129              		.loc 1 1364 0
 1130 008e 0023     		movs	r3, #0
 1131 0090 FB81     		strh	r3, [r7, #14]	@ movhi
 1132 0092 0CE0     		b	.L54
 1133              	.L55:
1365:Generated_Source\PSoC5/USBUART.c ****             {
1366:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 1134              		.loc 1 1366 0 discriminator 3
 1135 0094 1748     		ldr	r0, .L56+8
 1136 0096 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1137 0098 FA89     		ldrh	r2, [r7, #14]
 1138 009a 3968     		ldr	r1, [r7]
 1139 009c 0A44     		add	r2, r2, r1
 1140 009e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1141 00a0 1B01     		lsls	r3, r3, #4
 1142 00a2 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 45


 1143 00a4 0833     		adds	r3, r3, #8
 1144 00a6 1A70     		strb	r2, [r3]
1364:Generated_Source\PSoC5/USBUART.c ****             {
 1145              		.loc 1 1364 0 discriminator 3
 1146 00a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1147 00aa 0133     		adds	r3, r3, #1
 1148 00ac FB81     		strh	r3, [r7, #14]	@ movhi
 1149              	.L54:
1364:Generated_Source\PSoC5/USBUART.c ****             {
 1150              		.loc 1 1364 0 is_stmt 0 discriminator 1
 1151 00ae FA89     		ldrh	r2, [r7, #14]
 1152 00b0 BB88     		ldrh	r3, [r7, #4]
 1153 00b2 9A42     		cmp	r2, r3
 1154 00b4 EED3     		bcc	.L55
 1155              	.L53:
 1156              	.LBE2:
1367:Generated_Source\PSoC5/USBUART.c ****             }
1368:Generated_Source\PSoC5/USBUART.c ****         }
1369:Generated_Source\PSoC5/USBUART.c **** 
1370:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1157              		.loc 1 1371 0 is_stmt 1
 1158 00b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1159 00b8 0C49     		ldr	r1, .L56
 1160 00ba 1346     		mov	r3, r2
 1161 00bc 5B00     		lsls	r3, r3, #1
 1162 00be 1344     		add	r3, r3, r2
 1163 00c0 9B00     		lsls	r3, r3, #2
 1164 00c2 0B44     		add	r3, r3, r1
 1165 00c4 0022     		movs	r2, #0
 1166 00c6 5A70     		strb	r2, [r3, #1]
1372:Generated_Source\PSoC5/USBUART.c **** 
1373:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1167              		.loc 1 1374 0
 1168 00c8 0948     		ldr	r0, .L56+4
 1169 00ca F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1170 00cc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1171 00ce 074C     		ldr	r4, .L56
 1172 00d0 1346     		mov	r3, r2
 1173 00d2 5B00     		lsls	r3, r3, #1
 1174 00d4 1344     		add	r3, r3, r2
 1175 00d6 9B00     		lsls	r3, r3, #2
 1176 00d8 2344     		add	r3, r3, r4
 1177 00da 5B79     		ldrb	r3, [r3, #5]
 1178 00dc DAB2     		uxtb	r2, r3
 1179 00de 0B01     		lsls	r3, r1, #4
 1180 00e0 0344     		add	r3, r3, r0
 1181 00e2 9A70     		strb	r2, [r3, #2]
 1182              	.L50:
1375:Generated_Source\PSoC5/USBUART.c **** 
1376:Generated_Source\PSoC5/USBUART.c ****     #else
1377:Generated_Source\PSoC5/USBUART.c **** 
1378:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USBUART.c ****             {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 46


1382:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USBUART.c ****             }
1384:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USBUART.c **** 
1386:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USBUART.c **** 
1390:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USBUART.c ****             {
1392:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USBUART.c **** 
1395:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USBUART.c **** 
1398:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1401:Generated_Source\PSoC5/USBUART.c **** 
1402:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USBUART.c ****                 --length;
1404:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1405:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USBUART.c **** 
1407:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1409:Generated_Source\PSoC5/USBUART.c **** 
1410:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USBUART.c ****             #else
1413:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, 
1416:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData), LO16((uint3
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USBUART.c **** 
1423:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USBUART.c **** 
1427:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USBUART.c ****             }
1429:Generated_Source\PSoC5/USBUART.c ****             else
1430:Generated_Source\PSoC5/USBUART.c ****             {
1431:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USBUART.c ****             }
1434:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USBUART.c **** 
1436:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USBUART.c ****             {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 47


1439:Generated_Source\PSoC5/USBUART.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USBUART.c **** 
1445:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USBUART.c **** 
1448:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_
1450:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_
1451:Generated_Source\PSoC5/USBUART.c **** 
1452:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1454:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USBUART.c **** 
1456:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1458:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USBUART.c **** 
1460:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USBUART.c **** 
1463:Generated_Source\PSoC5/USBUART.c **** 
1464:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USBUART.c **** 
1467:Generated_Source\PSoC5/USBUART.c ****             #else
1468:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USBUART.c **** 
1470:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USBUART.c **** 
1474:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USBUART.c ****                         (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : leng
1477:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1480:Generated_Source\PSoC5/USBUART.c **** 
1481:Generated_Source\PSoC5/USBUART.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USBUART.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USBUART.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USBUART.c ****                     */
1485:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USBUART.c **** 
1489:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber], LO16((uint32) &clearInDat
1491:Generated_Source\PSoC5/USBUART.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USBUART.c ****                 #else
1493:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USBUART.c ****                                                    USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_S
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 48


1496:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1498:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USBUART.c **** 
1500:Generated_Source\PSoC5/USBUART.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USBUART.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USBUART.c ****             }
1507:Generated_Source\PSoC5/USBUART.c ****             else
1508:Generated_Source\PSoC5/USBUART.c ****             {
1509:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USBUART.c **** 
1512:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USBUART.c ****                 {
1514:Generated_Source\PSoC5/USBUART.c ****                 #if (CY_PSOC4)
1515:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USBUART.c **** 
1518:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1520:Generated_Source\PSoC5/USBUART.c **** 
1521:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1523:Generated_Source\PSoC5/USBUART.c **** 
1524:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1526:Generated_Source\PSoC5/USBUART.c **** 
1527:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1529:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DmaEpLastBurstEl
1530:Generated_Source\PSoC5/USBUART.c ****                                                                           (USBUART_DMA_BYTES_PER_BU
1531:Generated_Source\PSoC5/USBUART.c **** 
1532:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1534:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
1535:Generated_Source\PSoC5/USBUART.c **** 
1536:Generated_Source\PSoC5/USBUART.c **** 
1537:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
1539:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
1540:Generated_Source\PSoC5/USBUART.c **** 
1541:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USBUART.c **** 
1544:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
1546:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
1547:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
1548:Generated_Source\PSoC5/USBUART.c **** 
1549:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 49


1553:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1555:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USBUART.c **** 
1557:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USBUART.c ****                     {
1560:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USBUART.c ****                     }                   
1562:Generated_Source\PSoC5/USBUART.c **** 
1563:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
1565:Generated_Source\PSoC5/USBUART.c **** 
1566:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USBUART.c **** 
1569:Generated_Source\PSoC5/USBUART.c ****                 #elif (USBUART_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1572:Generated_Source\PSoC5/USBUART.c **** 
1573:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32)  USBUART_inData
1580:Generated_Source\PSoC5/USBUART.c ****                                                                                LO16((uint32) &USBUA
1581:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USBUART.c **** 
1588:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USBUART.c **** 
1593:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USBUART.c ****                 }
1595:Generated_Source\PSoC5/USBUART.c ****                 else
1596:Generated_Source\PSoC5/USBUART.c ****                 {
1597:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USBUART.c ****                 }
1600:Generated_Source\PSoC5/USBUART.c ****             }
1601:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USBUART.c ****     }
1604:Generated_Source\PSoC5/USBUART.c **** }
 1183              		.loc 1 1604 0
 1184 00e4 1437     		adds	r7, r7, #20
 1185              		.cfi_def_cfa_offset 12
 1186 00e6 BD46     		mov	sp, r7
 1187              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 50


 1188              		@ sp needed
 1189 00e8 B0BC     		pop	{r4, r5, r7}
 1190              		.cfi_restore 7
 1191              		.cfi_restore 5
 1192              		.cfi_restore 4
 1193              		.cfi_def_cfa_offset 0
 1194 00ea 7047     		bx	lr
 1195              	.L57:
 1196              		.align	2
 1197              	.L56:
 1198 00ec 00000000 		.word	USBUART_EP
 1199 00f0 FC5F0040 		.word	1073766396
 1200 00f4 70600040 		.word	1073766512
 1201              		.cfi_endproc
 1202              	.LFE11:
 1203              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 1204              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1205              		.align	2
 1206              		.global	USBUART_ReadOutEP
 1207              		.thumb
 1208              		.thumb_func
 1209              		.type	USBUART_ReadOutEP, %function
 1210              	USBUART_ReadOutEP:
 1211              	.LFB12:
1605:Generated_Source\PSoC5/USBUART.c **** 
1606:Generated_Source\PSoC5/USBUART.c **** 
1607:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1609:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USBUART.c **** *
1611:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USBUART.c **** *
1615:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USBUART.c **** *
1621:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USBUART.c **** *
1627:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USBUART.c **** *
1629:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USBUART.c **** *
1633:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USBUART.c **** *
1637:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 51


1638:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USBUART.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USBUART.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USBUART.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USBUART.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USBUART.c **** *
1646:Generated_Source\PSoC5/USBUART.c **** * \return
1647:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USBUART.c **** *
1649:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1650:Generated_Source\PSoC5/USBUART.c **** *  No.
1651:Generated_Source\PSoC5/USBUART.c **** *
1652:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USBUART.c ****                                                                         
1655:Generated_Source\PSoC5/USBUART.c **** {
 1212              		.loc 1 1655 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 16
 1215              		@ frame_needed = 1, uses_anonymous_args = 0
 1216 0000 80B5     		push	{r7, lr}
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 7, -8
 1219              		.cfi_offset 14, -4
 1220 0002 84B0     		sub	sp, sp, #16
 1221              		.cfi_def_cfa_offset 24
 1222 0004 00AF     		add	r7, sp, #0
 1223              		.cfi_def_cfa_register 7
 1224 0006 0346     		mov	r3, r0
 1225 0008 3960     		str	r1, [r7]
 1226 000a FB71     		strb	r3, [r7, #7]
 1227 000c 1346     		mov	r3, r2	@ movhi
 1228 000e BB80     		strh	r3, [r7, #4]	@ movhi
1656:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1229              		.loc 1 1656 0
 1230 0010 3B68     		ldr	r3, [r7]
 1231 0012 002B     		cmp	r3, #0
 1232 0014 30D0     		beq	.L59
 1233              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1234 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1235 0018 002B     		cmp	r3, #0
 1236 001a 2DD0     		beq	.L59
 1237              		.loc 1 1656 0 discriminator 2
 1238 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1239 001e 082B     		cmp	r3, #8
 1240 0020 2AD8     		bhi	.L59
1657:Generated_Source\PSoC5/USBUART.c ****     {
1658:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
 1241              		.loc 1 1660 0 is_stmt 1
 1242 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1243 0024 1846     		mov	r0, r3
 1244 0026 FFF7FEFF 		bl	USBUART_GetEPCount
 1245 002a 0346     		mov	r3, r0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 52


 1246 002c 1A46     		mov	r2, r3
 1247 002e BB88     		ldrh	r3, [r7, #4]
 1248 0030 9342     		cmp	r3, r2
 1249 0032 05D9     		bls	.L60
 1250              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1251 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1252 0036 1846     		mov	r0, r3
 1253 0038 FFF7FEFF 		bl	USBUART_GetEPCount
 1254 003c 0346     		mov	r3, r0
 1255 003e 00E0     		b	.L61
 1256              	.L60:
 1257              		.loc 1 1660 0 discriminator 2
 1258 0040 BB88     		ldrh	r3, [r7, #4]
 1259              	.L61:
 1260              		.loc 1 1660 0 discriminator 4
 1261 0042 BB80     		strh	r3, [r7, #4]	@ movhi
 1262              	.LBB3:
1661:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1662:Generated_Source\PSoC5/USBUART.c **** 
1663:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USBUART.c ****         {
1665:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1667:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; ++i)
 1263              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1264 0044 0023     		movs	r3, #0
 1265 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 1266 0048 0DE0     		b	.L62
 1267              	.L63:
1668:Generated_Source\PSoC5/USBUART.c ****             {
1669:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = (uint8) USBUART_ARB_EP_BASE.arbEp[epNumber].rwDr;
 1268              		.loc 1 1669 0 discriminator 3
 1269 004a FB89     		ldrh	r3, [r7, #14]
 1270 004c 3A68     		ldr	r2, [r7]
 1271 004e 1344     		add	r3, r3, r2
 1272 0050 0D49     		ldr	r1, .L66
 1273 0052 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1274 0054 1201     		lsls	r2, r2, #4
 1275 0056 0A44     		add	r2, r2, r1
 1276 0058 0832     		adds	r2, r2, #8
 1277 005a 1278     		ldrb	r2, [r2]
 1278 005c D2B2     		uxtb	r2, r2
 1279 005e 1A70     		strb	r2, [r3]
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1280              		.loc 1 1667 0 discriminator 3
 1281 0060 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1282 0062 0133     		adds	r3, r3, #1
 1283 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 1284              	.L62:
1667:Generated_Source\PSoC5/USBUART.c ****             {
 1285              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1286 0066 FA89     		ldrh	r2, [r7, #14]
 1287 0068 BB88     		ldrh	r3, [r7, #4]
 1288 006a 9A42     		cmp	r2, r3
 1289 006c EDD3     		bcc	.L63
 1290              	.LBE3:
1670:Generated_Source\PSoC5/USBUART.c ****             }
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 53


1671:Generated_Source\PSoC5/USBUART.c ****         }
1672:Generated_Source\PSoC5/USBUART.c **** 
1673:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
 1291              		.loc 1 1674 0 is_stmt 1
 1292 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1293 0070 1846     		mov	r0, r3
 1294 0072 FFF7FEFF 		bl	USBUART_EnableOutEP
 1295 0076 01E0     		b	.L64
 1296              	.L59:
1675:Generated_Source\PSoC5/USBUART.c ****     #else
1676:Generated_Source\PSoC5/USBUART.c **** 
1677:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USBUART.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USBUART.c ****             if (DMA_INVALID_TD == USBUART_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USBUART.c ****             {
1681:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USBUART.c ****             }
1683:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USBUART.c **** 
1685:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USBUART.c ****         {
1688:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USBUART.c **** 
1690:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USBUART.c **** 
1693:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1695:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USBUART.c **** 
1697:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
1699:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USBUART.c **** 
1701:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1703:Generated_Source\PSoC5/USBUART.c **** 
1704:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USBUART.c ****         }
1707:Generated_Source\PSoC5/USBUART.c ****         #else
1708:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1711:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1712:Generated_Source\PSoC5/USBUART.c **** 
1713:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USBUART.c **** 
1718:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USBUART_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USBUART_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 54


1722:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USBUART.c ****             */
1725:Generated_Source\PSoC5/USBUART.c **** 
1726:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USBUART.c **** 
1728:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USBUART.c ****         {
1731:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USBUART.c **** 
1734:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USBUART.c **** 
1737:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USBUART.c **** 
1740:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1742:Generated_Source\PSoC5/USBUART.c **** 
1743:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DmaEpLastBurstEl[epNumbe
1746:Generated_Source\PSoC5/USBUART.c ****                                                                   (USBUART_DMA_BYTES_PER_BURST - 1u
1747:Generated_Source\PSoC5/USBUART.c **** 
1748:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1750:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
1751:Generated_Source\PSoC5/USBUART.c **** 
1752:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
1754:Generated_Source\PSoC5/USBUART.c **** 
1755:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
1757:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
1758:Generated_Source\PSoC5/USBUART.c **** 
1759:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USBUART.c **** 
1763:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
1765:Generated_Source\PSoC5/USBUART.c **** 
1766:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USBUART.c **** 
1769:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP_BASE
1771:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP_BASE
1772:Generated_Source\PSoC5/USBUART.c **** 
1773:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
1775:Generated_Source\PSoC5/USBUART.c **** 
1776:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
1778:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 55


1779:Generated_Source\PSoC5/USBUART.c **** 
1780:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
1782:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USBUART.c **** 
1784:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USBUART.c **** 
1787:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1789:Generated_Source\PSoC5/USBUART.c **** 
1790:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USBUART.c ****             {
1792:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
1793:Generated_Source\PSoC5/USBUART.c ****             }
1794:Generated_Source\PSoC5/USBUART.c **** 
1795:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
1797:Generated_Source\PSoC5/USBUART.c ****         }
1798:Generated_Source\PSoC5/USBUART.c ****         #else
1799:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,  USBUART_DmaTd[epNumber
1801:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber], LO16((uint32) &USBUART_ARB_EP_BASE.ar
1802:Generated_Source\PSoC5/USBUART.c **** 
1803:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USBUART.c **** 
1806:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USBUART.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USBUART.c **** 
1811:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USBUART.c ****             */
1814:Generated_Source\PSoC5/USBUART.c **** 
1815:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USBUART.c ****     }
1818:Generated_Source\PSoC5/USBUART.c ****     else
1819:Generated_Source\PSoC5/USBUART.c ****     {
1820:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
 1297              		.loc 1 1820 0
 1298 0078 0023     		movs	r3, #0
 1299 007a BB80     		strh	r3, [r7, #4]	@ movhi
 1300              	.L64:
1821:Generated_Source\PSoC5/USBUART.c ****     }
1822:Generated_Source\PSoC5/USBUART.c **** 
1823:Generated_Source\PSoC5/USBUART.c ****     return (length);
 1301              		.loc 1 1823 0
 1302 007c BB88     		ldrh	r3, [r7, #4]
1824:Generated_Source\PSoC5/USBUART.c **** }
 1303              		.loc 1 1824 0
 1304 007e 1846     		mov	r0, r3
 1305 0080 1037     		adds	r7, r7, #16
 1306              		.cfi_def_cfa_offset 8
 1307 0082 BD46     		mov	sp, r7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 56


 1308              		.cfi_def_cfa_register 13
 1309              		@ sp needed
 1310 0084 80BD     		pop	{r7, pc}
 1311              	.L67:
 1312 0086 00BF     		.align	2
 1313              	.L66:
 1314 0088 70600040 		.word	1073766512
 1315              		.cfi_endproc
 1316              	.LFE12:
 1317              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1318              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1319              		.align	2
 1320              		.global	USBUART_EnableOutEP
 1321              		.thumb
 1322              		.thumb_func
 1323              		.type	USBUART_EnableOutEP, %function
 1324              	USBUART_EnableOutEP:
 1325              	.LFB13:
1825:Generated_Source\PSoC5/USBUART.c **** 
1826:Generated_Source\PSoC5/USBUART.c **** 
1827:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP16
1830:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USBUART.c **** *
1832:Generated_Source\PSoC5/USBUART.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USBUART.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USBUART.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USBUART.c **** *
1836:Generated_Source\PSoC5/USBUART.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USBUART.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USBUART.c **** *  data transfer.
1839:Generated_Source\PSoC5/USBUART.c **** *
1840:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USBUART.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USBUART.c **** *
1844:Generated_Source\PSoC5/USBUART.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USBUART.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USBUART.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USBUART.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USBUART.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USBUART.c **** *
1850:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USBUART.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USBUART.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USBUART.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USBUART.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USBUART.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USBUART.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USBUART.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USBUART.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USBUART.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USBUART.c **** *
1861:Generated_Source\PSoC5/USBUART.c **** * \reentrant
1862:Generated_Source\PSoC5/USBUART.c **** *  No.
1863:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 57


1864:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USBUART.c **** {
1867:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USBUART.c **** 
1870:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
1871:Generated_Source\PSoC5/USBUART.c ****     {
1872:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USBUART.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USBUART.c ****         if (length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USBUART.c ****         {
1876:Generated_Source\PSoC5/USBUART.c ****             length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USBUART.c ****         }
1878:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USBUART.c **** 
1880:Generated_Source\PSoC5/USBUART.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USBUART_EP[epNumber].ep
1882:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USBUART.c **** 
1884:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USBUART.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USBUART.c **** 
1887:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USBUART.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USBUART.c ****         {
1890:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USBUART.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USBUART.c **** 
1893:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
1895:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USBUART.c ****             {
1897:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USBUART.c ****             }
1899:Generated_Source\PSoC5/USBUART.c ****         }
1900:Generated_Source\PSoC5/USBUART.c **** 
1901:Generated_Source\PSoC5/USBUART.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USBUART.c **** 
1904:Generated_Source\PSoC5/USBUART.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USBUART.c **** 
1907:Generated_Source\PSoC5/USBUART.c ****     #else
1908:Generated_Source\PSoC5/USBUART.c **** 
1909:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USBUART.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USBUART.c **** 
1913:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USBUART.c ****             {
1915:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USBUART.c **** 
1917:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USBUART.c **** 
1920:Generated_Source\PSoC5/USBUART.c ****                 /* Configure source and destination. */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 58


1921:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1923:Generated_Source\PSoC5/USBUART.c **** 
1924:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USBUART.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1927:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USBUART.c **** 
1929:Generated_Source\PSoC5/USBUART.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
1931:Generated_Source\PSoC5/USBUART.c **** 
1932:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USBUART.c **** 
1935:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ
1937:Generated_Source\PSoC5/USBUART.c ****                 USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ
1938:Generated_Source\PSoC5/USBUART.c **** 
1939:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USBUART.c ****             }
1941:Generated_Source\PSoC5/USBUART.c ****             else
1942:Generated_Source\PSoC5/USBUART.c ****             {
1943:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USBUART.c ****                 USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USBUART.c ****             }
1946:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USBUART.c **** 
1948:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USBUART.c ****             {
1951:Generated_Source\PSoC5/USBUART.c ****                 uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USBUART.c **** 
1953:Generated_Source\PSoC5/USBUART.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USBUART.c **** 
1956:Generated_Source\PSoC5/USBUART.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USBUART.c **** 
1959:Generated_Source\PSoC5/USBUART.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP1
1961:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP1
1962:Generated_Source\PSoC5/USBUART.c **** 
1963:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CF
1965:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USBUART.c **** 
1967:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CF
1969:Generated_Source\PSoC5/USBUART.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USBUART.c **** 
1971:Generated_Source\PSoC5/USBUART.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USBUART.c **** 
1974:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USBUART.c ****             }
1977:Generated_Source\PSoC5/USBUART.c ****             else
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 59


1978:Generated_Source\PSoC5/USBUART.c ****             {
1979:Generated_Source\PSoC5/USBUART.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USBUART.c **** 
1982:Generated_Source\PSoC5/USBUART.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USBUART.c ****                 {
1984:Generated_Source\PSoC5/USBUART.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USBUART.c ****                     uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USBUART.c **** 
1987:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = (uint8) (length / USBUART_DMA_BYTES_PER_BURST
1989:Generated_Source\PSoC5/USBUART.c **** 
1990:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (length % USBUART_DMA_BYTES_PER_BU
1992:Generated_Source\PSoC5/USBUART.c **** 
1993:Generated_Source\PSoC5/USBUART.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
1995:Generated_Source\PSoC5/USBUART.c **** 
1996:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber])
1998:Generated_Source\PSoC5/USBUART.c ****                                                                           ((USBUART_DmaEpLastBurstE
1999:Generated_Source\PSoC5/USBUART.c ****                                                                            (USBUART_DMA_HALFWORDS_P
2000:Generated_Source\PSoC5/USBUART.c **** 
2001:Generated_Source\PSoC5/USBUART.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2003:Generated_Source\PSoC5/USBUART.c ****                     lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurst
2004:Generated_Source\PSoC5/USBUART.c **** 
2005:Generated_Source\PSoC5/USBUART.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] &
2007:Generated_Source\PSoC5/USBUART.c ****                                                                             USBUART_DMA_DESCR0_MASK
2008:Generated_Source\PSoC5/USBUART.c **** 
2009:Generated_Source\PSoC5/USBUART.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USBUART.c **** 
2012:Generated_Source\PSoC5/USBUART.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) US
2014:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) US
2015:Generated_Source\PSoC5/USBUART.c ****                                                                                                    
2016:Generated_Source\PSoC5/USBUART.c **** 
2017:Generated_Source\PSoC5/USBUART.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetNumDataElements(channelNum, USBUART_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USBUART.c **** 
2021:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2023:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USBUART.c **** 
2025:Generated_Source\PSoC5/USBUART.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USBUART.c ****                     if (USBUART_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USBUART.c ****                     {
2028:Generated_Source\PSoC5/USBUART.c ****                         USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2029:Generated_Source\PSoC5/USBUART.c ****                     }
2030:Generated_Source\PSoC5/USBUART.c **** 
2031:Generated_Source\PSoC5/USBUART.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstC
2033:Generated_Source\PSoC5/USBUART.c **** 
2034:Generated_Source\PSoC5/USBUART.c ****                     /* Enable DMA channel: configuration complete. */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 60


2035:Generated_Source\PSoC5/USBUART.c ****                     USBUART_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USBUART.c **** 
2037:Generated_Source\PSoC5/USBUART.c ****                 #if !defined (USBUART_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USBUART.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USBUART.c ****                     USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |= USBUART_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USBUART.c ****                 #endif  /* (USBUART_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USBUART.c **** 
2042:Generated_Source\PSoC5/USBUART.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USBUART.c ****                 }
2044:Generated_Source\PSoC5/USBUART.c ****                 else
2045:Generated_Source\PSoC5/USBUART.c ****                 {
2046:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USBUART.c ****                     USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USBUART.c ****                 }
2049:Generated_Source\PSoC5/USBUART.c ****             }
2050:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USBUART.c ****     }
2053:Generated_Source\PSoC5/USBUART.c **** }
2054:Generated_Source\PSoC5/USBUART.c **** 
2055:Generated_Source\PSoC5/USBUART.c **** 
2056:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP16
2058:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USBUART.c **** *
2060:Generated_Source\PSoC5/USBUART.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USBUART.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USBUART.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USBUART.c **** *
2064:Generated_Source\PSoC5/USBUART.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USBUART.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USBUART.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USBUART.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USBUART.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USBUART.c **** *
2070:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USBUART.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USBUART.c **** *   transfer after calling the USBUART_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USBUART.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USBUART.c **** *
2076:Generated_Source\PSoC5/USBUART.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USBUART.c **** *
2078:Generated_Source\PSoC5/USBUART.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USBUART.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USBUART.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USBUART.c **** *
2082:Generated_Source\PSoC5/USBUART.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USBUART.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USBUART.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USBUART.c **** *
2086:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USBUART.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USBUART.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USBUART.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USBUART.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USBUART.c **** *         a hard fault condition can occur.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 61


2092:Generated_Source\PSoC5/USBUART.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USBUART.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USBUART.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USBUART.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USBUART.c **** *
2097:Generated_Source\PSoC5/USBUART.c **** * \return
2098:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USBUART.c **** *
2100:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2101:Generated_Source\PSoC5/USBUART.c **** *  No.
2102:Generated_Source\PSoC5/USBUART.c **** *
2103:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USBUART.c **** {
2106:Generated_Source\PSoC5/USBUART.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USBUART.c **** 
2108:Generated_Source\PSoC5/USBUART.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USBUART.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
2110:Generated_Source\PSoC5/USBUART.c **** 
2111:Generated_Source\PSoC5/USBUART.c ****     if ((pData != NULL) && (epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
2112:Generated_Source\PSoC5/USBUART.c ****     {
2113:Generated_Source\PSoC5/USBUART.c ****     #if (!USBUART_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USBUART.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USBUART.c ****         length = (length > USBUART_GetEPCount(epNumber)) ? USBUART_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USBUART.c ****     #endif /* (!USBUART_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USBUART.c **** 
2118:Generated_Source\PSoC5/USBUART.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USBUART.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USBUART.c **** 
2121:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USBUART.c ****         {
2123:Generated_Source\PSoC5/USBUART.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USBUART.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USBUART.c **** 
2126:Generated_Source\PSoC5/USBUART.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USBUART.c ****             uint16 i;
2128:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USBUART.c ****             {
2130:Generated_Source\PSoC5/USBUART.c ****                 dataBuf[i] = (uint16) USBUART_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USBUART.c ****             }
2132:Generated_Source\PSoC5/USBUART.c ****         }
2133:Generated_Source\PSoC5/USBUART.c **** 
2134:Generated_Source\PSoC5/USBUART.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USBUART.c ****         USBUART_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USBUART.c ****     #else
2137:Generated_Source\PSoC5/USBUART.c **** 
2138:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USBUART.c ****         {
2140:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USBUART.c **** 
2142:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USBUART.c **** 
2145:Generated_Source\PSoC5/USBUART.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2147:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 62


2149:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG | 
2151:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USBUART.c **** 
2153:Generated_Source\PSoC5/USBUART.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2155:Generated_Source\PSoC5/USBUART.c **** 
2156:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USBUART.c **** 
2159:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USBUART_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USBUART_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USBUART.c **** 
2163:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USBUART.c ****             */
2166:Generated_Source\PSoC5/USBUART.c ****         }
2167:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USBUART.c **** 
2169:Generated_Source\PSoC5/USBUART.c ****         #if (USBUART_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USBUART.c ****         {
2171:Generated_Source\PSoC5/USBUART.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USBUART.c ****             uint32 channelNum = (uint32) USBUART_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USBUART.c **** 
2174:Generated_Source\PSoC5/USBUART.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USBUART_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USBUART.c **** 
2177:Generated_Source\PSoC5/USBUART.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USBUART_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USBUART.c **** 
2180:Generated_Source\PSoC5/USBUART.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] += (0u != USBUART_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
2182:Generated_Source\PSoC5/USBUART.c **** 
2183:Generated_Source\PSoC5/USBUART.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] = (0u != USBUART_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USBUART.c ****                                                                   ((USBUART_DmaEpLastBurstEl[epNumb
2186:Generated_Source\PSoC5/USBUART.c ****                                                                    (USBUART_DMA_HALFWORDS_PER_BURST
2187:Generated_Source\PSoC5/USBUART.c **** 
2188:Generated_Source\PSoC5/USBUART.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USBUART.c ****             lengthDescr0 = (1u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2190:Generated_Source\PSoC5/USBUART.c ****             lengthDescr1 = (2u == USBUART_DmaEpBurstCnt[epNumber]) ? USBUART_DmaEpLastBurstEl[epNum
2191:Generated_Source\PSoC5/USBUART.c **** 
2192:Generated_Source\PSoC5/USBUART.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (0u != (USBUART_DmaEpBurstCnt[epNumber] & 0x1u)) 
2194:Generated_Source\PSoC5/USBUART.c ****                                                                     USBUART_DMA_DESCR0_MASK : USBUA
2195:Generated_Source\PSoC5/USBUART.c **** 
2196:Generated_Source\PSoC5/USBUART.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= (USBUART_DmaEpBurstCnt[epNumber] > 2u) ? USBUART_
2198:Generated_Source\PSoC5/USBUART.c **** 
2199:Generated_Source\PSoC5/USBUART.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpLastBurstEl[epNumber] |= USBUART_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USBUART.c **** 
2202:Generated_Source\PSoC5/USBUART.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCntBackup[epNumber]   = USBUART_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 63


2206:Generated_Source\PSoC5/USBUART.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaEpBurstCnt[epNumber] = USBUART_DMA_GET_BURST_CNT(USBUART_DmaEpBurstCnt[epNum
2208:Generated_Source\PSoC5/USBUART.c **** 
2209:Generated_Source\PSoC5/USBUART.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USBUART.c **** 
2212:Generated_Source\PSoC5/USBUART.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR0, (void*) &USBUART_ARB_EP16_BA
2214:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetSrcAddress(channelNum, USBUART_DMA_DESCR1, (void*) &USBUART_ARB_EP16_BA
2215:Generated_Source\PSoC5/USBUART.c **** 
2216:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetDstAddress(channelNum, USBUART_DMA_DESCR1, (void*) ((uint32) pData + US
2218:Generated_Source\PSoC5/USBUART.c **** 
2219:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR0, USBUART_DMA_COMMON_CFG  |
2221:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USBUART.c **** 
2223:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA descriptor 1. */
2224:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetConfiguration(channelNum, USBUART_DMA_DESCR1, USBUART_DMA_COMMON_CFG  |
2225:Generated_Source\PSoC5/USBUART.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USBUART.c **** 
2227:Generated_Source\PSoC5/USBUART.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USBUART.c **** 
2230:Generated_Source\PSoC5/USBUART.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR0);
2232:Generated_Source\PSoC5/USBUART.c ****             
2233:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USBUART.c ****             {
2235:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CyDmaValidateDescriptor(channelNum, USBUART_DMA_DESCR1);
2236:Generated_Source\PSoC5/USBUART.c ****             }
2237:Generated_Source\PSoC5/USBUART.c **** 
2238:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USBUART.c ****             USBUART_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USBUART.c **** 
2241:Generated_Source\PSoC5/USBUART.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USBUART.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USBUART.c ****             */
2244:Generated_Source\PSoC5/USBUART.c ****         }
2245:Generated_Source\PSoC5/USBUART.c ****         #endif /* (USBUART_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USBUART.c ****     }
2248:Generated_Source\PSoC5/USBUART.c ****     else
2249:Generated_Source\PSoC5/USBUART.c ****     {
2250:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
2251:Generated_Source\PSoC5/USBUART.c ****     }
2252:Generated_Source\PSoC5/USBUART.c **** 
2253:Generated_Source\PSoC5/USBUART.c ****     return (length);
2254:Generated_Source\PSoC5/USBUART.c **** }
2255:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USBUART.c **** 
2257:Generated_Source\PSoC5/USBUART.c **** 
2258:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
2260:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USBUART.c **** *
2262:Generated_Source\PSoC5/USBUART.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 64


2263:Generated_Source\PSoC5/USBUART.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USBUART.c **** *
2265:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USBUART.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USBUART.c **** *
2268:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2269:Generated_Source\PSoC5/USBUART.c **** *
2270:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USBUART.c **** *
2272:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2273:Generated_Source\PSoC5/USBUART.c **** *  No.
2274:Generated_Source\PSoC5/USBUART.c **** *
2275:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USBUART.c **** {
 1326              		.loc 1 2277 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 8
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330              		@ link register save eliminated.
 1331 0000 90B4     		push	{r4, r7}
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 4, -8
 1334              		.cfi_offset 7, -4
 1335 0002 82B0     		sub	sp, sp, #8
 1336              		.cfi_def_cfa_offset 16
 1337 0004 00AF     		add	r7, sp, #0
 1338              		.cfi_def_cfa_register 7
 1339 0006 0346     		mov	r3, r0
 1340 0008 FB71     		strb	r3, [r7, #7]
2278:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1341              		.loc 1 2278 0
 1342 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1343 000c 002B     		cmp	r3, #0
 1344 000e 19D0     		beq	.L68
 1345              		.loc 1 2278 0 is_stmt 0 discriminator 1
 1346 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1347 0012 082B     		cmp	r3, #8
 1348 0014 16D8     		bhi	.L68
2279:Generated_Source\PSoC5/USBUART.c ****     {
2280:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1349              		.loc 1 2280 0 is_stmt 1
 1350 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1351 0018 0C49     		ldr	r1, .L70
 1352 001a 1346     		mov	r3, r2
 1353 001c 5B00     		lsls	r3, r3, #1
 1354 001e 1344     		add	r3, r3, r2
 1355 0020 9B00     		lsls	r3, r3, #2
 1356 0022 0B44     		add	r3, r3, r1
 1357 0024 0022     		movs	r2, #0
 1358 0026 5A70     		strb	r2, [r3, #1]
2281:Generated_Source\PSoC5/USBUART.c **** 
2282:Generated_Source\PSoC5/USBUART.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_EP[epNumber].epMode;
 1359              		.loc 1 2283 0
 1360 0028 0948     		ldr	r0, .L70+4
 1361 002a F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 65


 1362 002c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1363 002e 074C     		ldr	r4, .L70
 1364 0030 1346     		mov	r3, r2
 1365 0032 5B00     		lsls	r3, r3, #1
 1366 0034 1344     		add	r3, r3, r2
 1367 0036 9B00     		lsls	r3, r3, #2
 1368 0038 2344     		add	r3, r3, r4
 1369 003a 5B79     		ldrb	r3, [r3, #5]
 1370 003c DAB2     		uxtb	r2, r3
 1371 003e 0B01     		lsls	r3, r1, #4
 1372 0040 0344     		add	r3, r3, r0
 1373 0042 9A70     		strb	r2, [r3, #2]
 1374              	.L68:
2284:Generated_Source\PSoC5/USBUART.c ****         
2285:Generated_Source\PSoC5/USBUART.c ****     }
2286:Generated_Source\PSoC5/USBUART.c **** }
 1375              		.loc 1 2286 0
 1376 0044 0837     		adds	r7, r7, #8
 1377              		.cfi_def_cfa_offset 8
 1378 0046 BD46     		mov	sp, r7
 1379              		.cfi_def_cfa_register 13
 1380              		@ sp needed
 1381 0048 90BC     		pop	{r4, r7}
 1382              		.cfi_restore 7
 1383              		.cfi_restore 4
 1384              		.cfi_def_cfa_offset 0
 1385 004a 7047     		bx	lr
 1386              	.L71:
 1387              		.align	2
 1388              	.L70:
 1389 004c 00000000 		.word	USBUART_EP
 1390 0050 FC5F0040 		.word	1073766396
 1391              		.cfi_endproc
 1392              	.LFE13:
 1393              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1394              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1395              		.align	2
 1396              		.global	USBUART_DisableOutEP
 1397              		.thumb
 1398              		.thumb_func
 1399              		.type	USBUART_DisableOutEP, %function
 1400              	USBUART_DisableOutEP:
 1401              	.LFB14:
2287:Generated_Source\PSoC5/USBUART.c **** 
2288:Generated_Source\PSoC5/USBUART.c **** 
2289:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
2291:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USBUART.c **** *
2293:Generated_Source\PSoC5/USBUART.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USBUART.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USBUART.c **** *
2296:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USBUART.c **** *
2299:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 66


2301:Generated_Source\PSoC5/USBUART.c **** {
 1402              		.loc 1 2301 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 8
 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406              		@ link register save eliminated.
 1407 0000 80B4     		push	{r7}
 1408              		.cfi_def_cfa_offset 4
 1409              		.cfi_offset 7, -4
 1410 0002 83B0     		sub	sp, sp, #12
 1411              		.cfi_def_cfa_offset 16
 1412 0004 00AF     		add	r7, sp, #0
 1413              		.cfi_def_cfa_register 7
 1414 0006 0346     		mov	r3, r0
 1415 0008 FB71     		strb	r3, [r7, #7]
2302:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1416              		.loc 1 2302 0
 1417 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1418 000c 002B     		cmp	r3, #0
 1419 000e 08D0     		beq	.L72
 1420              		.loc 1 2302 0 is_stmt 0 discriminator 1
 1421 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1422 0012 082B     		cmp	r3, #8
 1423 0014 05D8     		bhi	.L72
2303:Generated_Source\PSoC5/USBUART.c ****     {
2304:Generated_Source\PSoC5/USBUART.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USBUART.c ****         USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 = USBUART_MODE_NAK_OUT;
 1424              		.loc 1 2305 0 is_stmt 1
 1425 0016 054A     		ldr	r2, .L74
 1426 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1427 001a 1B01     		lsls	r3, r3, #4
 1428 001c 1344     		add	r3, r3, r2
 1429 001e 0822     		movs	r2, #8
 1430 0020 9A70     		strb	r2, [r3, #2]
 1431              	.L72:
2306:Generated_Source\PSoC5/USBUART.c ****     }
2307:Generated_Source\PSoC5/USBUART.c **** }
 1432              		.loc 1 2307 0
 1433 0022 0C37     		adds	r7, r7, #12
 1434              		.cfi_def_cfa_offset 4
 1435 0024 BD46     		mov	sp, r7
 1436              		.cfi_def_cfa_register 13
 1437              		@ sp needed
 1438 0026 5DF8047B 		ldr	r7, [sp], #4
 1439              		.cfi_restore 7
 1440              		.cfi_def_cfa_offset 0
 1441 002a 7047     		bx	lr
 1442              	.L75:
 1443              		.align	2
 1444              	.L74:
 1445 002c FC5F0040 		.word	1073766396
 1446              		.cfi_endproc
 1447              	.LFE14:
 1448              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1449              		.section	.text.USBUART_Force,"ax",%progbits
 1450              		.align	2
 1451              		.global	USBUART_Force
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 67


 1452              		.thumb
 1453              		.thumb_func
 1454              		.type	USBUART_Force, %function
 1455              	USBUART_Force:
 1456              	.LFB15:
2308:Generated_Source\PSoC5/USBUART.c **** 
2309:Generated_Source\PSoC5/USBUART.c **** 
2310:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
2312:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USBUART.c **** *
2314:Generated_Source\PSoC5/USBUART.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
2315:Generated_Source\PSoC5/USBUART.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USBUART.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USBUART.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USBUART.c **** *
2319:Generated_Source\PSoC5/USBUART.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USBUART.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USBUART.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USBUART.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USBUART.c **** *
2328:Generated_Source\PSoC5/USBUART.c **** *
2329:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USBUART.c **** {
 1457              		.loc 1 2331 0
 1458              		.cfi_startproc
 1459              		@ args = 0, pretend = 0, frame = 8
 1460              		@ frame_needed = 1, uses_anonymous_args = 0
 1461              		@ link register save eliminated.
 1462 0000 80B4     		push	{r7}
 1463              		.cfi_def_cfa_offset 4
 1464              		.cfi_offset 7, -4
 1465 0002 83B0     		sub	sp, sp, #12
 1466              		.cfi_def_cfa_offset 16
 1467 0004 00AF     		add	r7, sp, #0
 1468              		.cfi_def_cfa_register 7
 1469 0006 0346     		mov	r3, r0
 1470 0008 FB71     		strb	r3, [r7, #7]
2332:Generated_Source\PSoC5/USBUART.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USBUART.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USBUART.c ****     */
2335:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG = bState;
 1471              		.loc 1 2335 0
 1472 000a 044A     		ldr	r2, .L77
 1473 000c FB79     		ldrb	r3, [r7, #7]
 1474 000e 1370     		strb	r3, [r2]
2336:Generated_Source\PSoC5/USBUART.c **** }
 1475              		.loc 1 2336 0
 1476 0010 0C37     		adds	r7, r7, #12
 1477              		.cfi_def_cfa_offset 4
 1478 0012 BD46     		mov	sp, r7
 1479              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 68


 1480              		@ sp needed
 1481 0014 5DF8047B 		ldr	r7, [sp], #4
 1482              		.cfi_restore 7
 1483              		.cfi_def_cfa_offset 0
 1484 0018 7047     		bx	lr
 1485              	.L78:
 1486 001a 00BF     		.align	2
 1487              	.L77:
 1488 001c 10600040 		.word	1073766416
 1489              		.cfi_endproc
 1490              	.LFE15:
 1491              		.size	USBUART_Force, .-USBUART_Force
 1492              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1493              		.align	2
 1494              		.global	USBUART_GetEPAckState
 1495              		.thumb
 1496              		.thumb_func
 1497              		.type	USBUART_GetEPAckState, %function
 1498              	USBUART_GetEPAckState:
 1499              	.LFB16:
2337:Generated_Source\PSoC5/USBUART.c **** 
2338:Generated_Source\PSoC5/USBUART.c **** 
2339:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
2341:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USBUART.c **** *
2343:Generated_Source\PSoC5/USBUART.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USBUART.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USBUART.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USBUART.c **** *
2347:Generated_Source\PSoC5/USBUART.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USBUART.c **** *
2350:Generated_Source\PSoC5/USBUART.c **** *  \return
2351:Generated_Source\PSoC5/USBUART.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USBUART.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USBUART.c **** *
2354:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USBUART.c **** {
 1500              		.loc 1 2356 0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 16
 1503              		@ frame_needed = 1, uses_anonymous_args = 0
 1504              		@ link register save eliminated.
 1505 0000 80B4     		push	{r7}
 1506              		.cfi_def_cfa_offset 4
 1507              		.cfi_offset 7, -4
 1508 0002 85B0     		sub	sp, sp, #20
 1509              		.cfi_def_cfa_offset 24
 1510 0004 00AF     		add	r7, sp, #0
 1511              		.cfi_def_cfa_register 7
 1512 0006 0346     		mov	r3, r0
 1513 0008 FB71     		strb	r3, [r7, #7]
2357:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1514              		.loc 1 2357 0
 1515 000a 0023     		movs	r3, #0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 69


 1516 000c FB73     		strb	r3, [r7, #15]
2358:Generated_Source\PSoC5/USBUART.c **** 
2359:Generated_Source\PSoC5/USBUART.c ****     if ((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1517              		.loc 1 2359 0
 1518 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1519 0010 002B     		cmp	r3, #0
 1520 0012 0BD0     		beq	.L80
 1521              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1522 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1523 0016 082B     		cmp	r3, #8
 1524 0018 08D8     		bhi	.L80
2360:Generated_Source\PSoC5/USBUART.c ****     {
2361:Generated_Source\PSoC5/USBUART.c ****         cr = USBUART_SIE_EP_BASE.sieEp[epNumber].epCr0 & USBUART_MODE_ACKD;
 1525              		.loc 1 2361 0 is_stmt 1
 1526 001a 084A     		ldr	r2, .L82
 1527 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1528 001e 1B01     		lsls	r3, r3, #4
 1529 0020 1344     		add	r3, r3, r2
 1530 0022 9B78     		ldrb	r3, [r3, #2]
 1531 0024 DBB2     		uxtb	r3, r3
 1532 0026 03F01003 		and	r3, r3, #16
 1533 002a FB73     		strb	r3, [r7, #15]
 1534              	.L80:
2362:Generated_Source\PSoC5/USBUART.c ****     }
2363:Generated_Source\PSoC5/USBUART.c **** 
2364:Generated_Source\PSoC5/USBUART.c ****     return ((uint8) cr);
 1535              		.loc 1 2364 0
 1536 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2365:Generated_Source\PSoC5/USBUART.c **** }
 1537              		.loc 1 2365 0
 1538 002e 1846     		mov	r0, r3
 1539 0030 1437     		adds	r7, r7, #20
 1540              		.cfi_def_cfa_offset 4
 1541 0032 BD46     		mov	sp, r7
 1542              		.cfi_def_cfa_register 13
 1543              		@ sp needed
 1544 0034 5DF8047B 		ldr	r7, [sp], #4
 1545              		.cfi_restore 7
 1546              		.cfi_def_cfa_offset 0
 1547 0038 7047     		bx	lr
 1548              	.L83:
 1549 003a 00BF     		.align	2
 1550              	.L82:
 1551 003c FC5F0040 		.word	1073766396
 1552              		.cfi_endproc
 1553              	.LFE16:
 1554              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1555              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1556              		.align	2
 1557              		.global	USBUART_SetPowerStatus
 1558              		.thumb
 1559              		.thumb_func
 1560              		.type	USBUART_SetPowerStatus, %function
 1561              	USBUART_SetPowerStatus:
 1562              	.LFB17:
2366:Generated_Source\PSoC5/USBUART.c **** 
2367:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 70


2368:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
2370:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USBUART.c **** *
2372:Generated_Source\PSoC5/USBUART.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USBUART.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USBUART.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USBUART.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USBUART.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USBUART.c **** *  function any time your device changes from self powered to bus powered or
2378:Generated_Source\PSoC5/USBUART.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USBUART.c **** *
2380:Generated_Source\PSoC5/USBUART.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USBUART.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USBUART.c **** *        given here:
2383:Generated_Source\PSoC5/USBUART.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USBUART.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USBUART.c **** *  USBUART_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USBUART.c **** *
2388:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2389:Generated_Source\PSoC5/USBUART.c **** *
2390:Generated_Source\PSoC5/USBUART.c **** *  \ref USBUART_deviceStatus - set power status
2391:Generated_Source\PSoC5/USBUART.c **** *
2392:Generated_Source\PSoC5/USBUART.c **** * \reentrant
2393:Generated_Source\PSoC5/USBUART.c **** *  No.
2394:Generated_Source\PSoC5/USBUART.c **** *
2395:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USBUART.c **** {
 1563              		.loc 1 2397 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 8
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567              		@ link register save eliminated.
 1568 0000 80B4     		push	{r7}
 1569              		.cfi_def_cfa_offset 4
 1570              		.cfi_offset 7, -4
 1571 0002 83B0     		sub	sp, sp, #12
 1572              		.cfi_def_cfa_offset 16
 1573 0004 00AF     		add	r7, sp, #0
 1574              		.cfi_def_cfa_register 7
 1575 0006 0346     		mov	r3, r0
 1576 0008 FB71     		strb	r3, [r7, #7]
2398:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1577              		.loc 1 2398 0
 1578 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1579 000c 002B     		cmp	r3, #0
 1580 000e 08D0     		beq	.L85
2399:Generated_Source\PSoC5/USBUART.c ****     {
2400:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |= (uint8)  USBUART_DEVICE_STATUS_SELF_POWERED;
 1581              		.loc 1 2400 0
 1582 0010 0A4B     		ldr	r3, .L87
 1583 0012 1B78     		ldrb	r3, [r3]
 1584 0014 DBB2     		uxtb	r3, r3
 1585 0016 43F00103 		orr	r3, r3, #1
 1586 001a DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 71


 1587 001c 074B     		ldr	r3, .L87
 1588 001e 1A70     		strb	r2, [r3]
 1589 0020 07E0     		b	.L84
 1590              	.L85:
2401:Generated_Source\PSoC5/USBUART.c ****     }
2402:Generated_Source\PSoC5/USBUART.c ****     else
2403:Generated_Source\PSoC5/USBUART.c ****     {
2404:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &= (uint8) ~USBUART_DEVICE_STATUS_SELF_POWERED;
 1591              		.loc 1 2404 0
 1592 0022 064B     		ldr	r3, .L87
 1593 0024 1B78     		ldrb	r3, [r3]
 1594 0026 DBB2     		uxtb	r3, r3
 1595 0028 23F00103 		bic	r3, r3, #1
 1596 002c DAB2     		uxtb	r2, r3
 1597 002e 034B     		ldr	r3, .L87
 1598 0030 1A70     		strb	r2, [r3]
 1599              	.L84:
2405:Generated_Source\PSoC5/USBUART.c ****     }
2406:Generated_Source\PSoC5/USBUART.c **** }
 1600              		.loc 1 2406 0
 1601 0032 0C37     		adds	r7, r7, #12
 1602              		.cfi_def_cfa_offset 4
 1603 0034 BD46     		mov	sp, r7
 1604              		.cfi_def_cfa_register 13
 1605              		@ sp needed
 1606 0036 5DF8047B 		ldr	r7, [sp], #4
 1607              		.cfi_restore 7
 1608              		.cfi_def_cfa_offset 0
 1609 003a 7047     		bx	lr
 1610              	.L88:
 1611              		.align	2
 1612              	.L87:
 1613 003c 00000000 		.word	USBUART_deviceStatus
 1614              		.cfi_endproc
 1615              	.LFE17:
 1616              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1617              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1618              		.align	2
 1619              		.global	USBUART_RWUEnabled
 1620              		.thumb
 1621              		.thumb_func
 1622              		.type	USBUART_RWUEnabled, %function
 1623              	USBUART_RWUEnabled:
 1624              	.LFB18:
2407:Generated_Source\PSoC5/USBUART.c **** 
2408:Generated_Source\PSoC5/USBUART.c **** 
2409:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USBUART.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
2412:Generated_Source\PSoC5/USBUART.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USBUART.c ****     *
2414:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USBUART.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USBUART.c ****     *
2417:Generated_Source\PSoC5/USBUART.c ****     * \return
2418:Generated_Source\PSoC5/USBUART.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USBUART.c ****     *  Return Value | Description
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 72


2420:Generated_Source\PSoC5/USBUART.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USBUART.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USBUART.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USBUART.c ****     *
2424:Generated_Source\PSoC5/USBUART.c ****     *
2425:Generated_Source\PSoC5/USBUART.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
2427:Generated_Source\PSoC5/USBUART.c ****     {
2428:Generated_Source\PSoC5/USBUART.c ****         return ((0u != (USBUART_VBUS_STATUS_REG & USBUART_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
2429:Generated_Source\PSoC5/USBUART.c ****     }
2430:Generated_Source\PSoC5/USBUART.c **** #endif /* (USBUART_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USBUART.c **** 
2432:Generated_Source\PSoC5/USBUART.c **** 
2433:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
2435:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USBUART.c **** *
2437:Generated_Source\PSoC5/USBUART.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USBUART.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USBUART.c **** *  function to determine if remote wakeup was enabled by the host. When the
2440:Generated_Source\PSoC5/USBUART.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USBUART.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USBUART.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USBUART.c **** *  wakeup.
2444:Generated_Source\PSoC5/USBUART.c **** *
2445:Generated_Source\PSoC5/USBUART.c **** *
2446:Generated_Source\PSoC5/USBUART.c **** * \return
2447:Generated_Source\PSoC5/USBUART.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USBUART.c **** *
2449:Generated_Source\PSoC5/USBUART.c **** * \globalvars
2450:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USBUART.c **** *
2452:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USBUART.c **** {
 1625              		.loc 1 2454 0
 1626              		.cfi_startproc
 1627              		@ args = 0, pretend = 0, frame = 8
 1628              		@ frame_needed = 1, uses_anonymous_args = 0
 1629              		@ link register save eliminated.
 1630 0000 80B4     		push	{r7}
 1631              		.cfi_def_cfa_offset 4
 1632              		.cfi_offset 7, -4
 1633 0002 83B0     		sub	sp, sp, #12
 1634              		.cfi_def_cfa_offset 16
 1635 0004 00AF     		add	r7, sp, #0
 1636              		.cfi_def_cfa_register 7
2455:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
 1637              		.loc 1 2455 0
 1638 0006 0023     		movs	r3, #0
 1639 0008 FB71     		strb	r3, [r7, #7]
2456:Generated_Source\PSoC5/USBUART.c **** 
2457:Generated_Source\PSoC5/USBUART.c ****     if (0u != (USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP))
 1640              		.loc 1 2457 0
 1641 000a 084B     		ldr	r3, .L92
 1642 000c 1B78     		ldrb	r3, [r3]
 1643 000e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 73


 1644 0010 03F00203 		and	r3, r3, #2
 1645 0014 002B     		cmp	r3, #0
 1646 0016 01D0     		beq	.L90
2458:Generated_Source\PSoC5/USBUART.c ****     {
2459:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
 1647              		.loc 1 2459 0
 1648 0018 0123     		movs	r3, #1
 1649 001a FB71     		strb	r3, [r7, #7]
 1650              	.L90:
2460:Generated_Source\PSoC5/USBUART.c ****     }
2461:Generated_Source\PSoC5/USBUART.c **** 
2462:Generated_Source\PSoC5/USBUART.c ****     return (result);
 1651              		.loc 1 2462 0
 1652 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2463:Generated_Source\PSoC5/USBUART.c **** }
 1653              		.loc 1 2463 0
 1654 001e 1846     		mov	r0, r3
 1655 0020 0C37     		adds	r7, r7, #12
 1656              		.cfi_def_cfa_offset 4
 1657 0022 BD46     		mov	sp, r7
 1658              		.cfi_def_cfa_register 13
 1659              		@ sp needed
 1660 0024 5DF8047B 		ldr	r7, [sp], #4
 1661              		.cfi_restore 7
 1662              		.cfi_def_cfa_offset 0
 1663 0028 7047     		bx	lr
 1664              	.L93:
 1665 002a 00BF     		.align	2
 1666              	.L92:
 1667 002c 00000000 		.word	USBUART_deviceStatus
 1668              		.cfi_endproc
 1669              	.LFE18:
 1670              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1671              		.section	.text.USBUART_GetDeviceAddress,"ax",%progbits
 1672              		.align	2
 1673              		.global	USBUART_GetDeviceAddress
 1674              		.thumb
 1675              		.thumb_func
 1676              		.type	USBUART_GetDeviceAddress, %function
 1677              	USBUART_GetDeviceAddress:
 1678              	.LFB19:
2464:Generated_Source\PSoC5/USBUART.c **** 
2465:Generated_Source\PSoC5/USBUART.c **** 
2466:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetDeviceAddress
2468:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USBUART.c **** *
2470:Generated_Source\PSoC5/USBUART.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USBUART.c **** *
2472:Generated_Source\PSoC5/USBUART.c **** * \return
2473:Generated_Source\PSoC5/USBUART.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USBUART.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USBUART.c **** *
2476:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USBUART.c **** {
 1679              		.loc 1 2478 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 74


 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 0
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683              		@ link register save eliminated.
 1684 0000 80B4     		push	{r7}
 1685              		.cfi_def_cfa_offset 4
 1686              		.cfi_offset 7, -4
 1687 0002 00AF     		add	r7, sp, #0
 1688              		.cfi_def_cfa_register 7
2479:Generated_Source\PSoC5/USBUART.c ****     return (uint8)(USBUART_CR0_REG & USBUART_CR0_DEVICE_ADDRESS_MASK);
 1689              		.loc 1 2479 0
 1690 0004 054B     		ldr	r3, .L96
 1691 0006 1B78     		ldrb	r3, [r3]
 1692 0008 DBB2     		uxtb	r3, r3
 1693 000a 03F07F03 		and	r3, r3, #127
 1694 000e DBB2     		uxtb	r3, r3
2480:Generated_Source\PSoC5/USBUART.c **** }
 1695              		.loc 1 2480 0
 1696 0010 1846     		mov	r0, r3
 1697 0012 BD46     		mov	sp, r7
 1698              		.cfi_def_cfa_register 13
 1699              		@ sp needed
 1700 0014 5DF8047B 		ldr	r7, [sp], #4
 1701              		.cfi_restore 7
 1702              		.cfi_def_cfa_offset 0
 1703 0018 7047     		bx	lr
 1704              	.L97:
 1705 001a 00BF     		.align	2
 1706              	.L96:
 1707 001c 08600040 		.word	1073766408
 1708              		.cfi_endproc
 1709              	.LFE19:
 1710              		.size	USBUART_GetDeviceAddress, .-USBUART_GetDeviceAddress
 1711              		.section	.text.USBUART_EnableSofInt,"ax",%progbits
 1712              		.align	2
 1713              		.global	USBUART_EnableSofInt
 1714              		.thumb
 1715              		.thumb_func
 1716              		.type	USBUART_EnableSofInt, %function
 1717              	USBUART_EnableSofInt:
 1718              	.LFB20:
2481:Generated_Source\PSoC5/USBUART.c **** 
2482:Generated_Source\PSoC5/USBUART.c **** 
2483:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableSofInt
2485:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USBUART.c **** *
2487:Generated_Source\PSoC5/USBUART.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USBUART.c **** *
2490:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USBUART.c **** {
 1719              		.loc 1 2492 0
 1720              		.cfi_startproc
 1721              		@ args = 0, pretend = 0, frame = 0
 1722              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 75


 1723              		@ link register save eliminated.
 1724 0000 80B4     		push	{r7}
 1725              		.cfi_def_cfa_offset 4
 1726              		.cfi_offset 7, -4
 1727 0002 00AF     		add	r7, sp, #0
 1728              		.cfi_def_cfa_register 7
2493:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG |= (uint32) USBUART_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USBUART.c **** #else
2497:Generated_Source\PSoC5/USBUART.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_SOF_VECT_NUM);
 1729              		.loc 1 2499 0
 1730 0004 034B     		ldr	r3, .L99
 1731 0006 4FF40012 		mov	r2, #2097152
 1732 000a 1A60     		str	r2, [r3]
2500:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USBUART.c **** }
 1733              		.loc 1 2502 0
 1734 000c BD46     		mov	sp, r7
 1735              		.cfi_def_cfa_register 13
 1736              		@ sp needed
 1737 000e 5DF8047B 		ldr	r7, [sp], #4
 1738              		.cfi_restore 7
 1739              		.cfi_def_cfa_offset 0
 1740 0012 7047     		bx	lr
 1741              	.L100:
 1742              		.align	2
 1743              	.L99:
 1744 0014 00E100E0 		.word	-536813312
 1745              		.cfi_endproc
 1746              	.LFE20:
 1747              		.size	USBUART_EnableSofInt, .-USBUART_EnableSofInt
 1748              		.section	.text.USBUART_DisableSofInt,"ax",%progbits
 1749              		.align	2
 1750              		.global	USBUART_DisableSofInt
 1751              		.thumb
 1752              		.thumb_func
 1753              		.type	USBUART_DisableSofInt, %function
 1754              	USBUART_DisableSofInt:
 1755              	.LFB21:
2503:Generated_Source\PSoC5/USBUART.c **** 
2504:Generated_Source\PSoC5/USBUART.c **** 
2505:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableSofInt
2507:Generated_Source\PSoC5/USBUART.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USBUART.c **** *
2509:Generated_Source\PSoC5/USBUART.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USBUART.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USBUART.c **** *
2512:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USBUART.c **** {
 1756              		.loc 1 2514 0
 1757              		.cfi_startproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 76


 1758              		@ args = 0, pretend = 0, frame = 0
 1759              		@ frame_needed = 1, uses_anonymous_args = 0
 1760              		@ link register save eliminated.
 1761 0000 80B4     		push	{r7}
 1762              		.cfi_def_cfa_offset 4
 1763              		.cfi_offset 7, -4
 1764 0002 00AF     		add	r7, sp, #0
 1765              		.cfi_def_cfa_register 7
2515:Generated_Source\PSoC5/USBUART.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USBUART.c ****     USBUART_INTR_SIE_MASK_REG &= (uint32) ~USBUART_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USBUART.c **** #else
2519:Generated_Source\PSoC5/USBUART.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USBUART.c ****     #if (USBUART_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_SOF_VECT_NUM);
 1766              		.loc 1 2521 0
 1767 0004 034B     		ldr	r3, .L102
 1768 0006 4FF40012 		mov	r2, #2097152
 1769 000a 1A60     		str	r2, [r3]
2522:Generated_Source\PSoC5/USBUART.c ****     #endif /* (USBUART_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC5/USBUART.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC5/USBUART.c **** }
 1770              		.loc 1 2524 0
 1771 000c BD46     		mov	sp, r7
 1772              		.cfi_def_cfa_register 13
 1773              		@ sp needed
 1774 000e 5DF8047B 		ldr	r7, [sp], #4
 1775              		.cfi_restore 7
 1776              		.cfi_def_cfa_offset 0
 1777 0012 7047     		bx	lr
 1778              	.L103:
 1779              		.align	2
 1780              	.L102:
 1781 0014 80E100E0 		.word	-536813184
 1782              		.cfi_endproc
 1783              	.LFE21:
 1784              		.size	USBUART_DisableSofInt, .-USBUART_DisableSofInt
 1785              		.text
 1786              	.Letext0:
 1787              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1788              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 1789              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 1790              		.section	.debug_info,"",%progbits
 1791              	.Ldebug_info0:
 1792 0000 07070000 		.4byte	0x707
 1793 0004 0400     		.2byte	0x4
 1794 0006 00000000 		.4byte	.Ldebug_abbrev0
 1795 000a 04       		.byte	0x4
 1796 000b 01       		.uleb128 0x1
 1797 000c 17030000 		.4byte	.LASF91
 1798 0010 01       		.byte	0x1
 1799 0011 9B020000 		.4byte	.LASF92
 1800 0015 1A040000 		.4byte	.LASF93
 1801 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1802 001d 00000000 		.4byte	0
 1803 0021 00000000 		.4byte	.Ldebug_line0
 1804 0025 02       		.uleb128 0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 77


 1805 0026 01       		.byte	0x1
 1806 0027 06       		.byte	0x6
 1807 0028 DB000000 		.4byte	.LASF0
 1808 002c 02       		.uleb128 0x2
 1809 002d 01       		.byte	0x1
 1810 002e 08       		.byte	0x8
 1811 002f 02040000 		.4byte	.LASF1
 1812 0033 02       		.uleb128 0x2
 1813 0034 02       		.byte	0x2
 1814 0035 05       		.byte	0x5
 1815 0036 10040000 		.4byte	.LASF2
 1816 003a 02       		.uleb128 0x2
 1817 003b 02       		.byte	0x2
 1818 003c 07       		.byte	0x7
 1819 003d 1E020000 		.4byte	.LASF3
 1820 0041 02       		.uleb128 0x2
 1821 0042 04       		.byte	0x4
 1822 0043 05       		.byte	0x5
 1823 0044 43010000 		.4byte	.LASF4
 1824 0048 02       		.uleb128 0x2
 1825 0049 04       		.byte	0x4
 1826 004a 07       		.byte	0x7
 1827 004b 0C020000 		.4byte	.LASF5
 1828 004f 02       		.uleb128 0x2
 1829 0050 08       		.byte	0x8
 1830 0051 05       		.byte	0x5
 1831 0052 CD000000 		.4byte	.LASF6
 1832 0056 02       		.uleb128 0x2
 1833 0057 08       		.byte	0x8
 1834 0058 07       		.byte	0x7
 1835 0059 77000000 		.4byte	.LASF7
 1836 005d 03       		.uleb128 0x3
 1837 005e 04       		.byte	0x4
 1838 005f 05       		.byte	0x5
 1839 0060 696E7400 		.ascii	"int\000"
 1840 0064 02       		.uleb128 0x2
 1841 0065 04       		.byte	0x4
 1842 0066 07       		.byte	0x7
 1843 0067 FF010000 		.4byte	.LASF8
 1844 006b 04       		.uleb128 0x4
 1845 006c 4C010000 		.4byte	.LASF9
 1846 0070 02       		.byte	0x2
 1847 0071 9201     		.2byte	0x192
 1848 0073 2C000000 		.4byte	0x2c
 1849 0077 04       		.uleb128 0x4
 1850 0078 00000000 		.4byte	.LASF10
 1851 007c 02       		.byte	0x2
 1852 007d 9301     		.2byte	0x193
 1853 007f 3A000000 		.4byte	0x3a
 1854 0083 04       		.uleb128 0x4
 1855 0084 CD010000 		.4byte	.LASF11
 1856 0088 02       		.byte	0x2
 1857 0089 9401     		.2byte	0x194
 1858 008b 48000000 		.4byte	0x48
 1859 008f 02       		.uleb128 0x2
 1860 0090 04       		.byte	0x4
 1861 0091 04       		.byte	0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 78


 1862 0092 C1030000 		.4byte	.LASF12
 1863 0096 02       		.uleb128 0x2
 1864 0097 08       		.byte	0x8
 1865 0098 04       		.byte	0x4
 1866 0099 60010000 		.4byte	.LASF13
 1867 009d 02       		.uleb128 0x2
 1868 009e 01       		.byte	0x1
 1869 009f 08       		.byte	0x8
 1870 00a0 C7040000 		.4byte	.LASF14
 1871 00a4 04       		.uleb128 0x4
 1872 00a5 E4030000 		.4byte	.LASF15
 1873 00a9 02       		.byte	0x2
 1874 00aa 3C02     		.2byte	0x23c
 1875 00ac B0000000 		.4byte	0xb0
 1876 00b0 05       		.uleb128 0x5
 1877 00b1 6B000000 		.4byte	0x6b
 1878 00b5 04       		.uleb128 0x4
 1879 00b6 7F020000 		.4byte	.LASF16
 1880 00ba 02       		.byte	0x2
 1881 00bb 3E02     		.2byte	0x23e
 1882 00bd C1000000 		.4byte	0xc1
 1883 00c1 05       		.uleb128 0x5
 1884 00c2 83000000 		.4byte	0x83
 1885 00c6 02       		.uleb128 0x2
 1886 00c7 04       		.byte	0x4
 1887 00c8 07       		.byte	0x7
 1888 00c9 F3020000 		.4byte	.LASF17
 1889 00cd 06       		.uleb128 0x6
 1890 00ce 0C       		.byte	0xc
 1891 00cf 03       		.byte	0x3
 1892 00d0 8E       		.byte	0x8e
 1893 00d1 42010000 		.4byte	0x142
 1894 00d5 07       		.uleb128 0x7
 1895 00d6 10030000 		.4byte	.LASF18
 1896 00da 03       		.byte	0x3
 1897 00db 90       		.byte	0x90
 1898 00dc 6B000000 		.4byte	0x6b
 1899 00e0 00       		.byte	0
 1900 00e1 07       		.uleb128 0x7
 1901 00e2 D9030000 		.4byte	.LASF19
 1902 00e6 03       		.byte	0x3
 1903 00e7 91       		.byte	0x91
 1904 00e8 6B000000 		.4byte	0x6b
 1905 00ec 01       		.byte	0x1
 1906 00ed 07       		.uleb128 0x7
 1907 00ee D2020000 		.4byte	.LASF20
 1908 00f2 03       		.byte	0x3
 1909 00f3 92       		.byte	0x92
 1910 00f4 6B000000 		.4byte	0x6b
 1911 00f8 02       		.byte	0x2
 1912 00f9 07       		.uleb128 0x7
 1913 00fa 52010000 		.4byte	.LASF21
 1914 00fe 03       		.byte	0x3
 1915 00ff 93       		.byte	0x93
 1916 0100 6B000000 		.4byte	0x6b
 1917 0104 03       		.byte	0x3
 1918 0105 07       		.uleb128 0x7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 79


 1919 0106 8E000000 		.4byte	.LASF22
 1920 010a 03       		.byte	0x3
 1921 010b 94       		.byte	0x94
 1922 010c 6B000000 		.4byte	0x6b
 1923 0110 04       		.byte	0x4
 1924 0111 07       		.uleb128 0x7
 1925 0112 DA010000 		.4byte	.LASF23
 1926 0116 03       		.byte	0x3
 1927 0117 95       		.byte	0x95
 1928 0118 6B000000 		.4byte	0x6b
 1929 011c 05       		.byte	0x5
 1930 011d 07       		.uleb128 0x7
 1931 011e F3040000 		.4byte	.LASF24
 1932 0122 03       		.byte	0x3
 1933 0123 96       		.byte	0x96
 1934 0124 77000000 		.4byte	0x77
 1935 0128 06       		.byte	0x6
 1936 0129 07       		.uleb128 0x7
 1937 012a D1040000 		.4byte	.LASF25
 1938 012e 03       		.byte	0x3
 1939 012f 97       		.byte	0x97
 1940 0130 77000000 		.4byte	0x77
 1941 0134 08       		.byte	0x8
 1942 0135 07       		.uleb128 0x7
 1943 0136 6E020000 		.4byte	.LASF26
 1944 013a 03       		.byte	0x3
 1945 013b 98       		.byte	0x98
 1946 013c 6B000000 		.4byte	0x6b
 1947 0140 0A       		.byte	0xa
 1948 0141 00       		.byte	0
 1949 0142 08       		.uleb128 0x8
 1950 0143 DC040000 		.4byte	.LASF27
 1951 0147 03       		.byte	0x3
 1952 0148 99       		.byte	0x99
 1953 0149 CD000000 		.4byte	0xcd
 1954 014d 06       		.uleb128 0x6
 1955 014e 10       		.byte	0x10
 1956 014f 03       		.byte	0x3
 1957 0150 D5       		.byte	0xd5
 1958 0151 86010000 		.4byte	0x186
 1959 0155 07       		.uleb128 0x7
 1960 0156 AD030000 		.4byte	.LASF28
 1961 015a 03       		.byte	0x3
 1962 015b D7       		.byte	0xd7
 1963 015c 6B000000 		.4byte	0x6b
 1964 0160 00       		.byte	0
 1965 0161 07       		.uleb128 0x7
 1966 0162 B4030000 		.4byte	.LASF29
 1967 0166 03       		.byte	0x3
 1968 0167 D8       		.byte	0xd8
 1969 0168 6B000000 		.4byte	0x6b
 1970 016c 01       		.byte	0x1
 1971 016d 07       		.uleb128 0x7
 1972 016e BB030000 		.4byte	.LASF30
 1973 0172 03       		.byte	0x3
 1974 0173 D9       		.byte	0xd9
 1975 0174 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 80


 1976 0178 02       		.byte	0x2
 1977 0179 09       		.uleb128 0x9
 1978 017a 67617000 		.ascii	"gap\000"
 1979 017e 03       		.byte	0x3
 1980 017f DA       		.byte	0xda
 1981 0180 86010000 		.4byte	0x186
 1982 0184 03       		.byte	0x3
 1983 0185 00       		.byte	0
 1984 0186 0A       		.uleb128 0xa
 1985 0187 6B000000 		.4byte	0x6b
 1986 018b 96010000 		.4byte	0x196
 1987 018f 0B       		.uleb128 0xb
 1988 0190 C6000000 		.4byte	0xc6
 1989 0194 0C       		.byte	0xc
 1990 0195 00       		.byte	0
 1991 0196 08       		.uleb128 0x8
 1992 0197 A3040000 		.4byte	.LASF31
 1993 019b 03       		.byte	0x3
 1994 019c DB       		.byte	0xdb
 1995 019d 4D010000 		.4byte	0x14d
 1996 01a1 06       		.uleb128 0x6
 1997 01a2 10       		.byte	0x10
 1998 01a3 03       		.byte	0x3
 1999 01a4 E7       		.byte	0xe7
 2000 01a5 22020000 		.4byte	0x222
 2001 01a9 07       		.uleb128 0x7
 2002 01aa 93000000 		.4byte	.LASF32
 2003 01ae 03       		.byte	0x3
 2004 01af E9       		.byte	0xe9
 2005 01b0 6B000000 		.4byte	0x6b
 2006 01b4 00       		.byte	0
 2007 01b5 07       		.uleb128 0x7
 2008 01b6 82050000 		.4byte	.LASF33
 2009 01ba 03       		.byte	0x3
 2010 01bb EA       		.byte	0xea
 2011 01bc 6B000000 		.4byte	0x6b
 2012 01c0 01       		.byte	0x1
 2013 01c1 07       		.uleb128 0x7
 2014 01c2 A0010000 		.4byte	.LASF34
 2015 01c6 03       		.byte	0x3
 2016 01c7 EB       		.byte	0xeb
 2017 01c8 6B000000 		.4byte	0x6b
 2018 01cc 02       		.byte	0x2
 2019 01cd 07       		.uleb128 0x7
 2020 01ce E1010000 		.4byte	.LASF35
 2021 01d2 03       		.byte	0x3
 2022 01d3 EC       		.byte	0xec
 2023 01d4 6B000000 		.4byte	0x6b
 2024 01d8 03       		.byte	0x3
 2025 01d9 07       		.uleb128 0x7
 2026 01da 5B010000 		.4byte	.LASF36
 2027 01de 03       		.byte	0x3
 2028 01df ED       		.byte	0xed
 2029 01e0 6B000000 		.4byte	0x6b
 2030 01e4 04       		.byte	0x4
 2031 01e5 07       		.uleb128 0x7
 2032 01e6 9B040000 		.4byte	.LASF37
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 81


 2033 01ea 03       		.byte	0x3
 2034 01eb EE       		.byte	0xee
 2035 01ec 6B000000 		.4byte	0x6b
 2036 01f0 05       		.byte	0x5
 2037 01f1 07       		.uleb128 0x7
 2038 01f2 81040000 		.4byte	.LASF38
 2039 01f6 03       		.byte	0x3
 2040 01f7 EF       		.byte	0xef
 2041 01f8 6B000000 		.4byte	0x6b
 2042 01fc 06       		.byte	0x6
 2043 01fd 07       		.uleb128 0x7
 2044 01fe A5030000 		.4byte	.LASF39
 2045 0202 03       		.byte	0x3
 2046 0203 F0       		.byte	0xf0
 2047 0204 6B000000 		.4byte	0x6b
 2048 0208 07       		.byte	0x7
 2049 0209 07       		.uleb128 0x7
 2050 020a 32050000 		.4byte	.LASF40
 2051 020e 03       		.byte	0x3
 2052 020f F1       		.byte	0xf1
 2053 0210 6B000000 		.4byte	0x6b
 2054 0214 08       		.byte	0x8
 2055 0215 09       		.uleb128 0x9
 2056 0216 67617000 		.ascii	"gap\000"
 2057 021a 03       		.byte	0x3
 2058 021b F2       		.byte	0xf2
 2059 021c 22020000 		.4byte	0x222
 2060 0220 09       		.byte	0x9
 2061 0221 00       		.byte	0
 2062 0222 0A       		.uleb128 0xa
 2063 0223 6B000000 		.4byte	0x6b
 2064 0227 32020000 		.4byte	0x232
 2065 022b 0B       		.uleb128 0xb
 2066 022c C6000000 		.4byte	0xc6
 2067 0230 06       		.byte	0x6
 2068 0231 00       		.byte	0
 2069 0232 08       		.uleb128 0x8
 2070 0233 BC020000 		.4byte	.LASF41
 2071 0237 03       		.byte	0x3
 2072 0238 F3       		.byte	0xf3
 2073 0239 A1010000 		.4byte	0x1a1
 2074 023d 0C       		.uleb128 0xc
 2075 023e 90       		.byte	0x90
 2076 023f 03       		.byte	0x3
 2077 0240 0F01     		.2byte	0x10f
 2078 0242 54020000 		.4byte	0x254
 2079 0246 0D       		.uleb128 0xd
 2080 0247 FC020000 		.4byte	.LASF42
 2081 024b 03       		.byte	0x3
 2082 024c 1101     		.2byte	0x111
 2083 024e 54020000 		.4byte	0x254
 2084 0252 00       		.byte	0
 2085 0253 00       		.byte	0
 2086 0254 0A       		.uleb128 0xa
 2087 0255 96010000 		.4byte	0x196
 2088 0259 64020000 		.4byte	0x264
 2089 025d 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 82


 2090 025e C6000000 		.4byte	0xc6
 2091 0262 08       		.byte	0x8
 2092 0263 00       		.byte	0
 2093 0264 04       		.uleb128 0x4
 2094 0265 16010000 		.4byte	.LASF43
 2095 0269 03       		.byte	0x3
 2096 026a 1201     		.2byte	0x112
 2097 026c 3D020000 		.4byte	0x23d
 2098 0270 0C       		.uleb128 0xc
 2099 0271 90       		.byte	0x90
 2100 0272 03       		.byte	0x3
 2101 0273 1501     		.2byte	0x115
 2102 0275 87020000 		.4byte	0x287
 2103 0279 0D       		.uleb128 0xd
 2104 027a 68020000 		.4byte	.LASF44
 2105 027e 03       		.byte	0x3
 2106 027f 1701     		.2byte	0x117
 2107 0281 87020000 		.4byte	0x287
 2108 0285 00       		.byte	0
 2109 0286 00       		.byte	0
 2110 0287 0A       		.uleb128 0xa
 2111 0288 32020000 		.4byte	0x232
 2112 028c 97020000 		.4byte	0x297
 2113 0290 0B       		.uleb128 0xb
 2114 0291 C6000000 		.4byte	0xc6
 2115 0295 08       		.byte	0x8
 2116 0296 00       		.byte	0
 2117 0297 04       		.uleb128 0x4
 2118 0298 DC020000 		.4byte	.LASF45
 2119 029c 03       		.byte	0x3
 2120 029d 1801     		.2byte	0x118
 2121 029f 70020000 		.4byte	0x270
 2122 02a3 0E       		.uleb128 0xe
 2123 02a4 31020000 		.4byte	.LASF48
 2124 02a8 01       		.byte	0x1
 2125 02a9 BA       		.byte	0xba
 2126 02aa 00000000 		.4byte	.LFB0
 2127 02ae 38000000 		.4byte	.LFE0-.LFB0
 2128 02b2 01       		.uleb128 0x1
 2129 02b3 9C       		.byte	0x9c
 2130 02b4 D5020000 		.4byte	0x2d5
 2131 02b8 0F       		.uleb128 0xf
 2132 02b9 AD000000 		.4byte	.LASF46
 2133 02bd 01       		.byte	0x1
 2134 02be BA       		.byte	0xba
 2135 02bf 6B000000 		.4byte	0x6b
 2136 02c3 02       		.uleb128 0x2
 2137 02c4 91       		.byte	0x91
 2138 02c5 77       		.sleb128 -9
 2139 02c6 0F       		.uleb128 0xf
 2140 02c7 CC040000 		.4byte	.LASF47
 2141 02cb 01       		.byte	0x1
 2142 02cc BA       		.byte	0xba
 2143 02cd 6B000000 		.4byte	0x6b
 2144 02d1 02       		.uleb128 0x2
 2145 02d2 91       		.byte	0x91
 2146 02d3 76       		.sleb128 -10
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 83


 2147 02d4 00       		.byte	0
 2148 02d5 0E       		.uleb128 0xe
 2149 02d6 5B020000 		.4byte	.LASF49
 2150 02da 01       		.byte	0x1
 2151 02db D3       		.byte	0xd3
 2152 02dc 00000000 		.4byte	.LFB1
 2153 02e0 A0010000 		.4byte	.LFE1-.LFB1
 2154 02e4 01       		.uleb128 0x1
 2155 02e5 9C       		.byte	0x9c
 2156 02e6 F9020000 		.4byte	0x2f9
 2157 02ea 10       		.uleb128 0x10
 2158 02eb 21050000 		.4byte	.LASF52
 2159 02ef 01       		.byte	0x1
 2160 02f0 FA       		.byte	0xfa
 2161 02f1 6B000000 		.4byte	0x6b
 2162 02f5 02       		.uleb128 0x2
 2163 02f6 91       		.byte	0x91
 2164 02f7 77       		.sleb128 -9
 2165 02f8 00       		.byte	0
 2166 02f9 11       		.uleb128 0x11
 2167 02fa 37050000 		.4byte	.LASF50
 2168 02fe 01       		.byte	0x1
 2169 02ff CC01     		.2byte	0x1cc
 2170 0301 00000000 		.4byte	.LFB2
 2171 0305 00010000 		.4byte	.LFE2-.LFB2
 2172 0309 01       		.uleb128 0x1
 2173 030a 9C       		.byte	0x9c
 2174 030b 2E030000 		.4byte	0x32e
 2175 030f 12       		.uleb128 0x12
 2176 0310 AD000000 		.4byte	.LASF46
 2177 0314 01       		.byte	0x1
 2178 0315 CC01     		.2byte	0x1cc
 2179 0317 6B000000 		.4byte	0x6b
 2180 031b 02       		.uleb128 0x2
 2181 031c 91       		.byte	0x91
 2182 031d 77       		.sleb128 -9
 2183 031e 12       		.uleb128 0x12
 2184 031f CC040000 		.4byte	.LASF47
 2185 0323 01       		.byte	0x1
 2186 0324 CC01     		.2byte	0x1cc
 2187 0326 6B000000 		.4byte	0x6b
 2188 032a 02       		.uleb128 0x2
 2189 032b 91       		.byte	0x91
 2190 032c 76       		.sleb128 -10
 2191 032d 00       		.byte	0
 2192 032e 13       		.uleb128 0x13
 2193 032f 8A050000 		.4byte	.LASF77
 2194 0333 01       		.byte	0x1
 2195 0334 9F02     		.2byte	0x29f
 2196 0336 00000000 		.4byte	.LFB3
 2197 033a 68000000 		.4byte	.LFE3-.LFB3
 2198 033e 01       		.uleb128 0x1
 2199 033f 9C       		.byte	0x9c
 2200 0340 11       		.uleb128 0x11
 2201 0341 2F000000 		.4byte	.LASF51
 2202 0345 01       		.byte	0x1
 2203 0346 D902     		.2byte	0x2d9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 84


 2204 0348 00000000 		.4byte	.LFB4
 2205 034c 0C010000 		.4byte	.LFE4-.LFB4
 2206 0350 01       		.uleb128 0x1
 2207 0351 9C       		.byte	0x9c
 2208 0352 66030000 		.4byte	0x366
 2209 0356 14       		.uleb128 0x14
 2210 0357 21050000 		.4byte	.LASF52
 2211 035b 01       		.byte	0x1
 2212 035c DB02     		.2byte	0x2db
 2213 035e 6B000000 		.4byte	0x6b
 2214 0362 02       		.uleb128 0x2
 2215 0363 91       		.byte	0x91
 2216 0364 77       		.sleb128 -9
 2217 0365 00       		.byte	0
 2218 0366 15       		.uleb128 0x15
 2219 0367 2D010000 		.4byte	.LASF54
 2220 036b 01       		.byte	0x1
 2221 036c 5103     		.2byte	0x351
 2222 036e 6B000000 		.4byte	0x6b
 2223 0372 00000000 		.4byte	.LFB5
 2224 0376 38000000 		.4byte	.LFE5-.LFB5
 2225 037a 01       		.uleb128 0x1
 2226 037b 9C       		.byte	0x9c
 2227 037c 90030000 		.4byte	0x390
 2228 0380 14       		.uleb128 0x14
 2229 0381 78020000 		.4byte	.LASF53
 2230 0385 01       		.byte	0x1
 2231 0386 5303     		.2byte	0x353
 2232 0388 6B000000 		.4byte	0x6b
 2233 038c 02       		.uleb128 0x2
 2234 038d 91       		.byte	0x91
 2235 038e 77       		.sleb128 -9
 2236 038f 00       		.byte	0
 2237 0390 16       		.uleb128 0x16
 2238 0391 B4000000 		.4byte	.LASF75
 2239 0395 01       		.byte	0x1
 2240 0396 6803     		.2byte	0x368
 2241 0398 6B000000 		.4byte	0x6b
 2242 039c 00000000 		.4byte	.LFB6
 2243 03a0 18000000 		.4byte	.LFE6-.LFB6
 2244 03a4 01       		.uleb128 0x1
 2245 03a5 9C       		.byte	0x9c
 2246 03a6 15       		.uleb128 0x15
 2247 03a7 63050000 		.4byte	.LASF55
 2248 03ab 01       		.byte	0x1
 2249 03ac 8203     		.2byte	0x382
 2250 03ae 6B000000 		.4byte	0x6b
 2251 03b2 00000000 		.4byte	.LFB7
 2252 03b6 34000000 		.4byte	.LFE7-.LFB7
 2253 03ba 01       		.uleb128 0x1
 2254 03bb 9C       		.byte	0x9c
 2255 03bc D0030000 		.4byte	0x3d0
 2256 03c0 17       		.uleb128 0x17
 2257 03c1 72657300 		.ascii	"res\000"
 2258 03c5 01       		.byte	0x1
 2259 03c6 8403     		.2byte	0x384
 2260 03c8 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 85


 2261 03cc 02       		.uleb128 0x2
 2262 03cd 91       		.byte	0x91
 2263 03ce 77       		.sleb128 -9
 2264 03cf 00       		.byte	0
 2265 03d0 15       		.uleb128 0x15
 2266 03d1 3F020000 		.4byte	.LASF56
 2267 03d5 01       		.byte	0x1
 2268 03d6 9F03     		.2byte	0x39f
 2269 03d8 6B000000 		.4byte	0x6b
 2270 03dc 00000000 		.4byte	.LFB8
 2271 03e0 24000000 		.4byte	.LFE8-.LFB8
 2272 03e4 01       		.uleb128 0x1
 2273 03e5 9C       		.byte	0x9c
 2274 03e6 FA030000 		.4byte	0x3fa
 2275 03ea 12       		.uleb128 0x12
 2276 03eb FE040000 		.4byte	.LASF57
 2277 03ef 01       		.byte	0x1
 2278 03f0 9F03     		.2byte	0x39f
 2279 03f2 6B000000 		.4byte	0x6b
 2280 03f6 02       		.uleb128 0x2
 2281 03f7 91       		.byte	0x91
 2282 03f8 77       		.sleb128 -9
 2283 03f9 00       		.byte	0
 2284 03fa 15       		.uleb128 0x15
 2285 03fb 6E040000 		.4byte	.LASF58
 2286 03ff 01       		.byte	0x1
 2287 0400 BF03     		.2byte	0x3bf
 2288 0402 6B000000 		.4byte	0x6b
 2289 0406 00000000 		.4byte	.LFB9
 2290 040a 2C000000 		.4byte	.LFE9-.LFB9
 2291 040e 01       		.uleb128 0x1
 2292 040f 9C       		.byte	0x9c
 2293 0410 24040000 		.4byte	0x424
 2294 0414 12       		.uleb128 0x12
 2295 0415 A4000000 		.4byte	.LASF59
 2296 0419 01       		.byte	0x1
 2297 041a BF03     		.2byte	0x3bf
 2298 041c 6B000000 		.4byte	0x6b
 2299 0420 02       		.uleb128 0x2
 2300 0421 91       		.byte	0x91
 2301 0422 77       		.sleb128 -9
 2302 0423 00       		.byte	0
 2303 0424 15       		.uleb128 0x15
 2304 0425 0E050000 		.4byte	.LASF60
 2305 0429 01       		.byte	0x1
 2306 042a D603     		.2byte	0x3d6
 2307 042c 77000000 		.4byte	0x77
 2308 0430 00000000 		.4byte	.LFB10
 2309 0434 60000000 		.4byte	.LFE10-.LFB10
 2310 0438 01       		.uleb128 0x1
 2311 0439 9C       		.byte	0x9c
 2312 043a 5D040000 		.4byte	0x45d
 2313 043e 12       		.uleb128 0x12
 2314 043f A4000000 		.4byte	.LASF59
 2315 0443 01       		.byte	0x1
 2316 0444 D603     		.2byte	0x3d6
 2317 0446 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 86


 2318 044a 02       		.uleb128 0x2
 2319 044b 91       		.byte	0x91
 2320 044c 6F       		.sleb128 -17
 2321 044d 14       		.uleb128 0x14
 2322 044e 11010000 		.4byte	.LASF61
 2323 0452 01       		.byte	0x1
 2324 0453 D803     		.2byte	0x3d8
 2325 0455 77000000 		.4byte	0x77
 2326 0459 02       		.uleb128 0x2
 2327 045a 91       		.byte	0x91
 2328 045b 76       		.sleb128 -10
 2329 045c 00       		.byte	0
 2330 045d 18       		.uleb128 0x18
 2331 045e 66000000 		.4byte	.LASF62
 2332 0462 01       		.byte	0x1
 2333 0463 3E05     		.2byte	0x53e
 2334 0465 00000000 		.4byte	.LFB11
 2335 0469 F8000000 		.4byte	.LFE11-.LFB11
 2336 046d 01       		.uleb128 0x1
 2337 046e 9C       		.byte	0x9c
 2338 046f B8040000 		.4byte	0x4b8
 2339 0473 12       		.uleb128 0x12
 2340 0474 A4000000 		.4byte	.LASF59
 2341 0478 01       		.byte	0x1
 2342 0479 3E05     		.2byte	0x53e
 2343 047b 6B000000 		.4byte	0x6b
 2344 047f 02       		.uleb128 0x2
 2345 0480 91       		.byte	0x91
 2346 0481 67       		.sleb128 -25
 2347 0482 12       		.uleb128 0x12
 2348 0483 D4010000 		.4byte	.LASF63
 2349 0487 01       		.byte	0x1
 2350 0488 3E05     		.2byte	0x53e
 2351 048a B8040000 		.4byte	0x4b8
 2352 048e 02       		.uleb128 0x2
 2353 048f 91       		.byte	0x91
 2354 0490 60       		.sleb128 -32
 2355 0491 12       		.uleb128 0x12
 2356 0492 C0040000 		.4byte	.LASF64
 2357 0496 01       		.byte	0x1
 2358 0497 3E05     		.2byte	0x53e
 2359 0499 77000000 		.4byte	0x77
 2360 049d 02       		.uleb128 0x2
 2361 049e 91       		.byte	0x91
 2362 049f 64       		.sleb128 -28
 2363 04a0 19       		.uleb128 0x19
 2364 04a1 8E000000 		.4byte	.LBB2
 2365 04a5 28000000 		.4byte	.LBE2-.LBB2
 2366 04a9 17       		.uleb128 0x17
 2367 04aa 6900     		.ascii	"i\000"
 2368 04ac 01       		.byte	0x1
 2369 04ad 5305     		.2byte	0x553
 2370 04af 77000000 		.4byte	0x77
 2371 04b3 02       		.uleb128 0x2
 2372 04b4 91       		.byte	0x91
 2373 04b5 6E       		.sleb128 -18
 2374 04b6 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 87


 2375 04b7 00       		.byte	0
 2376 04b8 1A       		.uleb128 0x1a
 2377 04b9 04       		.byte	0x4
 2378 04ba BE040000 		.4byte	0x4be
 2379 04be 1B       		.uleb128 0x1b
 2380 04bf 6B000000 		.4byte	0x6b
 2381 04c3 1C       		.uleb128 0x1c
 2382 04c4 C7030000 		.4byte	.LASF65
 2383 04c8 01       		.byte	0x1
 2384 04c9 7506     		.2byte	0x675
 2385 04cb 77000000 		.4byte	0x77
 2386 04cf 00000000 		.4byte	.LFB12
 2387 04d3 8C000000 		.4byte	.LFE12-.LFB12
 2388 04d7 01       		.uleb128 0x1
 2389 04d8 9C       		.byte	0x9c
 2390 04d9 22050000 		.4byte	0x522
 2391 04dd 12       		.uleb128 0x12
 2392 04de A4000000 		.4byte	.LASF59
 2393 04e2 01       		.byte	0x1
 2394 04e3 7506     		.2byte	0x675
 2395 04e5 6B000000 		.4byte	0x6b
 2396 04e9 02       		.uleb128 0x2
 2397 04ea 91       		.byte	0x91
 2398 04eb 6F       		.sleb128 -17
 2399 04ec 12       		.uleb128 0x12
 2400 04ed D4010000 		.4byte	.LASF63
 2401 04f1 01       		.byte	0x1
 2402 04f2 7506     		.2byte	0x675
 2403 04f4 22050000 		.4byte	0x522
 2404 04f8 02       		.uleb128 0x2
 2405 04f9 91       		.byte	0x91
 2406 04fa 68       		.sleb128 -24
 2407 04fb 12       		.uleb128 0x12
 2408 04fc C0040000 		.4byte	.LASF64
 2409 0500 01       		.byte	0x1
 2410 0501 7506     		.2byte	0x675
 2411 0503 77000000 		.4byte	0x77
 2412 0507 02       		.uleb128 0x2
 2413 0508 91       		.byte	0x91
 2414 0509 6C       		.sleb128 -20
 2415 050a 19       		.uleb128 0x19
 2416 050b 44000000 		.4byte	.LBB3
 2417 050f 2A000000 		.4byte	.LBE3-.LBB3
 2418 0513 17       		.uleb128 0x17
 2419 0514 6900     		.ascii	"i\000"
 2420 0516 01       		.byte	0x1
 2421 0517 8206     		.2byte	0x682
 2422 0519 77000000 		.4byte	0x77
 2423 051d 02       		.uleb128 0x2
 2424 051e 91       		.byte	0x91
 2425 051f 76       		.sleb128 -10
 2426 0520 00       		.byte	0
 2427 0521 00       		.byte	0
 2428 0522 1A       		.uleb128 0x1a
 2429 0523 04       		.byte	0x4
 2430 0524 6B000000 		.4byte	0x6b
 2431 0528 18       		.uleb128 0x18
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 88


 2432 0529 E7000000 		.4byte	.LASF66
 2433 052d 01       		.byte	0x1
 2434 052e E408     		.2byte	0x8e4
 2435 0530 00000000 		.4byte	.LFB13
 2436 0534 54000000 		.4byte	.LFE13-.LFB13
 2437 0538 01       		.uleb128 0x1
 2438 0539 9C       		.byte	0x9c
 2439 053a 4E050000 		.4byte	0x54e
 2440 053e 12       		.uleb128 0x12
 2441 053f A4000000 		.4byte	.LASF59
 2442 0543 01       		.byte	0x1
 2443 0544 E408     		.2byte	0x8e4
 2444 0546 6B000000 		.4byte	0x6b
 2445 054a 02       		.uleb128 0x2
 2446 054b 91       		.byte	0x91
 2447 054c 77       		.sleb128 -9
 2448 054d 00       		.byte	0
 2449 054e 18       		.uleb128 0x18
 2450 054f 86040000 		.4byte	.LASF67
 2451 0553 01       		.byte	0x1
 2452 0554 FC08     		.2byte	0x8fc
 2453 0556 00000000 		.4byte	.LFB14
 2454 055a 30000000 		.4byte	.LFE14-.LFB14
 2455 055e 01       		.uleb128 0x1
 2456 055f 9C       		.byte	0x9c
 2457 0560 74050000 		.4byte	0x574
 2458 0564 12       		.uleb128 0x12
 2459 0565 A4000000 		.4byte	.LASF59
 2460 0569 01       		.byte	0x1
 2461 056a FC08     		.2byte	0x8fc
 2462 056c 6B000000 		.4byte	0x6b
 2463 0570 02       		.uleb128 0x2
 2464 0571 91       		.byte	0x91
 2465 0572 77       		.sleb128 -9
 2466 0573 00       		.byte	0
 2467 0574 18       		.uleb128 0x18
 2468 0575 02030000 		.4byte	.LASF68
 2469 0579 01       		.byte	0x1
 2470 057a 1A09     		.2byte	0x91a
 2471 057c 00000000 		.4byte	.LFB15
 2472 0580 20000000 		.4byte	.LFE15-.LFB15
 2473 0584 01       		.uleb128 0x1
 2474 0585 9C       		.byte	0x9c
 2475 0586 9A050000 		.4byte	0x59a
 2476 058a 12       		.uleb128 0x12
 2477 058b B9040000 		.4byte	.LASF69
 2478 058f 01       		.byte	0x1
 2479 0590 1A09     		.2byte	0x91a
 2480 0592 6B000000 		.4byte	0x6b
 2481 0596 02       		.uleb128 0x2
 2482 0597 91       		.byte	0x91
 2483 0598 77       		.sleb128 -9
 2484 0599 00       		.byte	0
 2485 059a 15       		.uleb128 0x15
 2486 059b FB000000 		.4byte	.LASF70
 2487 059f 01       		.byte	0x1
 2488 05a0 3309     		.2byte	0x933
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 89


 2489 05a2 6B000000 		.4byte	0x6b
 2490 05a6 00000000 		.4byte	.LFB16
 2491 05aa 40000000 		.4byte	.LFE16-.LFB16
 2492 05ae 01       		.uleb128 0x1
 2493 05af 9C       		.byte	0x9c
 2494 05b0 D2050000 		.4byte	0x5d2
 2495 05b4 12       		.uleb128 0x12
 2496 05b5 A4000000 		.4byte	.LASF59
 2497 05b9 01       		.byte	0x1
 2498 05ba 3309     		.2byte	0x933
 2499 05bc 6B000000 		.4byte	0x6b
 2500 05c0 02       		.uleb128 0x2
 2501 05c1 91       		.byte	0x91
 2502 05c2 6F       		.sleb128 -17
 2503 05c3 17       		.uleb128 0x17
 2504 05c4 637200   		.ascii	"cr\000"
 2505 05c7 01       		.byte	0x1
 2506 05c8 3509     		.2byte	0x935
 2507 05ca 6B000000 		.4byte	0x6b
 2508 05ce 02       		.uleb128 0x2
 2509 05cf 91       		.byte	0x91
 2510 05d0 77       		.sleb128 -9
 2511 05d1 00       		.byte	0
 2512 05d2 18       		.uleb128 0x18
 2513 05d3 89010000 		.4byte	.LASF71
 2514 05d7 01       		.byte	0x1
 2515 05d8 5C09     		.2byte	0x95c
 2516 05da 00000000 		.4byte	.LFB17
 2517 05de 40000000 		.4byte	.LFE17-.LFB17
 2518 05e2 01       		.uleb128 0x1
 2519 05e3 9C       		.byte	0x9c
 2520 05e4 F8050000 		.4byte	0x5f8
 2521 05e8 12       		.uleb128 0x12
 2522 05e9 67010000 		.4byte	.LASF72
 2523 05ed 01       		.byte	0x1
 2524 05ee 5C09     		.2byte	0x95c
 2525 05f0 6B000000 		.4byte	0x6b
 2526 05f4 02       		.uleb128 0x2
 2527 05f5 91       		.byte	0x91
 2528 05f6 77       		.sleb128 -9
 2529 05f7 00       		.byte	0
 2530 05f8 15       		.uleb128 0x15
 2531 05f9 3C000000 		.4byte	.LASF73
 2532 05fd 01       		.byte	0x1
 2533 05fe 9509     		.2byte	0x995
 2534 0600 6B000000 		.4byte	0x6b
 2535 0604 00000000 		.4byte	.LFB18
 2536 0608 30000000 		.4byte	.LFE18-.LFB18
 2537 060c 01       		.uleb128 0x1
 2538 060d 9C       		.byte	0x9c
 2539 060e 22060000 		.4byte	0x622
 2540 0612 14       		.uleb128 0x14
 2541 0613 EA050000 		.4byte	.LASF74
 2542 0617 01       		.byte	0x1
 2543 0618 9709     		.2byte	0x997
 2544 061a 6B000000 		.4byte	0x6b
 2545 061e 02       		.uleb128 0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 90


 2546 061f 91       		.byte	0x91
 2547 0620 77       		.sleb128 -9
 2548 0621 00       		.byte	0
 2549 0622 16       		.uleb128 0x16
 2550 0623 16000000 		.4byte	.LASF76
 2551 0627 01       		.byte	0x1
 2552 0628 AD09     		.2byte	0x9ad
 2553 062a 6B000000 		.4byte	0x6b
 2554 062e 00000000 		.4byte	.LFB19
 2555 0632 20000000 		.4byte	.LFE19-.LFB19
 2556 0636 01       		.uleb128 0x1
 2557 0637 9C       		.byte	0x9c
 2558 0638 13       		.uleb128 0x13
 2559 0639 B8050000 		.4byte	.LASF78
 2560 063d 01       		.byte	0x1
 2561 063e BB09     		.2byte	0x9bb
 2562 0640 00000000 		.4byte	.LFB20
 2563 0644 18000000 		.4byte	.LFE20-.LFB20
 2564 0648 01       		.uleb128 0x1
 2565 0649 9C       		.byte	0x9c
 2566 064a 13       		.uleb128 0x13
 2567 064b 73010000 		.4byte	.LASF79
 2568 064f 01       		.byte	0x1
 2569 0650 D109     		.2byte	0x9d1
 2570 0652 00000000 		.4byte	.LFB21
 2571 0656 18000000 		.4byte	.LFE21-.LFB21
 2572 065a 01       		.uleb128 0x1
 2573 065b 9C       		.byte	0x9c
 2574 065c 1D       		.uleb128 0x1d
 2575 065d A5010000 		.4byte	.LASF80
 2576 0661 01       		.byte	0x1
 2577 0662 28       		.byte	0x28
 2578 0663 6B000000 		.4byte	0x6b
 2579 0667 05       		.uleb128 0x5
 2580 0668 03       		.byte	0x3
 2581 0669 00000000 		.4byte	USBUART_initVar
 2582 066d 1E       		.uleb128 0x1e
 2583 066e 07000000 		.4byte	.LASF81
 2584 0672 03       		.byte	0x3
 2585 0673 D302     		.2byte	0x2d3
 2586 0675 B0000000 		.4byte	0xb0
 2587 0679 1E       		.uleb128 0x1e
 2588 067a A2050000 		.4byte	.LASF82
 2589 067e 03       		.byte	0x3
 2590 067f D402     		.2byte	0x2d4
 2591 0681 B0000000 		.4byte	0xb0
 2592 0685 1E       		.uleb128 0x1e
 2593 0686 4D050000 		.4byte	.LASF83
 2594 068a 03       		.byte	0x3
 2595 068b D502     		.2byte	0x2d5
 2596 068d B0000000 		.4byte	0xb0
 2597 0691 1E       		.uleb128 0x1e
 2598 0692 CD050000 		.4byte	.LASF84
 2599 0696 03       		.byte	0x3
 2600 0697 D602     		.2byte	0x2d6
 2601 0699 B0000000 		.4byte	0xb0
 2602 069d 1E       		.uleb128 0x1e
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 91


 2603 069e EA010000 		.4byte	.LASF85
 2604 06a2 03       		.byte	0x3
 2605 06a3 D702     		.2byte	0x2d7
 2606 06a5 B0000000 		.4byte	0xb0
 2607 06a9 1F       		.uleb128 0x1f
 2608 06aa B5010000 		.4byte	.LASF86
 2609 06ae 04       		.byte	0x4
 2610 06af 72       		.byte	0x72
 2611 06b0 B0000000 		.4byte	0xb0
 2612 06b4 0A       		.uleb128 0xa
 2613 06b5 6B000000 		.4byte	0x6b
 2614 06b9 C4060000 		.4byte	0x6c4
 2615 06bd 0B       		.uleb128 0xb
 2616 06be C6000000 		.4byte	0xc6
 2617 06c2 01       		.byte	0x1
 2618 06c3 00       		.byte	0
 2619 06c4 1F       		.uleb128 0x1f
 2620 06c5 E9030000 		.4byte	.LASF87
 2621 06c9 04       		.byte	0x4
 2622 06ca 73       		.byte	0x73
 2623 06cb CF060000 		.4byte	0x6cf
 2624 06cf 05       		.uleb128 0x5
 2625 06d0 B4060000 		.4byte	0x6b4
 2626 06d4 1F       		.uleb128 0x1f
 2627 06d5 85020000 		.4byte	.LASF88
 2628 06d9 04       		.byte	0x4
 2629 06da 75       		.byte	0x75
 2630 06db B0000000 		.4byte	0xb0
 2631 06df 0A       		.uleb128 0xa
 2632 06e0 42010000 		.4byte	0x142
 2633 06e4 EF060000 		.4byte	0x6ef
 2634 06e8 0B       		.uleb128 0xb
 2635 06e9 C6000000 		.4byte	0xc6
 2636 06ed 08       		.byte	0x8
 2637 06ee 00       		.byte	0
 2638 06ef 1F       		.uleb128 0x1f
 2639 06f0 99000000 		.4byte	.LASF89
 2640 06f4 04       		.byte	0x4
 2641 06f5 79       		.byte	0x79
 2642 06f6 FA060000 		.4byte	0x6fa
 2643 06fa 05       		.uleb128 0x5
 2644 06fb DF060000 		.4byte	0x6df
 2645 06ff 1F       		.uleb128 0x1f
 2646 0700 4F000000 		.4byte	.LASF90
 2647 0704 04       		.byte	0x4
 2648 0705 9B       		.byte	0x9b
 2649 0706 B0000000 		.4byte	0xb0
 2650 070a 00       		.byte	0
 2651              		.section	.debug_abbrev,"",%progbits
 2652              	.Ldebug_abbrev0:
 2653 0000 01       		.uleb128 0x1
 2654 0001 11       		.uleb128 0x11
 2655 0002 01       		.byte	0x1
 2656 0003 25       		.uleb128 0x25
 2657 0004 0E       		.uleb128 0xe
 2658 0005 13       		.uleb128 0x13
 2659 0006 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 92


 2660 0007 03       		.uleb128 0x3
 2661 0008 0E       		.uleb128 0xe
 2662 0009 1B       		.uleb128 0x1b
 2663 000a 0E       		.uleb128 0xe
 2664 000b 55       		.uleb128 0x55
 2665 000c 17       		.uleb128 0x17
 2666 000d 11       		.uleb128 0x11
 2667 000e 01       		.uleb128 0x1
 2668 000f 10       		.uleb128 0x10
 2669 0010 17       		.uleb128 0x17
 2670 0011 00       		.byte	0
 2671 0012 00       		.byte	0
 2672 0013 02       		.uleb128 0x2
 2673 0014 24       		.uleb128 0x24
 2674 0015 00       		.byte	0
 2675 0016 0B       		.uleb128 0xb
 2676 0017 0B       		.uleb128 0xb
 2677 0018 3E       		.uleb128 0x3e
 2678 0019 0B       		.uleb128 0xb
 2679 001a 03       		.uleb128 0x3
 2680 001b 0E       		.uleb128 0xe
 2681 001c 00       		.byte	0
 2682 001d 00       		.byte	0
 2683 001e 03       		.uleb128 0x3
 2684 001f 24       		.uleb128 0x24
 2685 0020 00       		.byte	0
 2686 0021 0B       		.uleb128 0xb
 2687 0022 0B       		.uleb128 0xb
 2688 0023 3E       		.uleb128 0x3e
 2689 0024 0B       		.uleb128 0xb
 2690 0025 03       		.uleb128 0x3
 2691 0026 08       		.uleb128 0x8
 2692 0027 00       		.byte	0
 2693 0028 00       		.byte	0
 2694 0029 04       		.uleb128 0x4
 2695 002a 16       		.uleb128 0x16
 2696 002b 00       		.byte	0
 2697 002c 03       		.uleb128 0x3
 2698 002d 0E       		.uleb128 0xe
 2699 002e 3A       		.uleb128 0x3a
 2700 002f 0B       		.uleb128 0xb
 2701 0030 3B       		.uleb128 0x3b
 2702 0031 05       		.uleb128 0x5
 2703 0032 49       		.uleb128 0x49
 2704 0033 13       		.uleb128 0x13
 2705 0034 00       		.byte	0
 2706 0035 00       		.byte	0
 2707 0036 05       		.uleb128 0x5
 2708 0037 35       		.uleb128 0x35
 2709 0038 00       		.byte	0
 2710 0039 49       		.uleb128 0x49
 2711 003a 13       		.uleb128 0x13
 2712 003b 00       		.byte	0
 2713 003c 00       		.byte	0
 2714 003d 06       		.uleb128 0x6
 2715 003e 13       		.uleb128 0x13
 2716 003f 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 93


 2717 0040 0B       		.uleb128 0xb
 2718 0041 0B       		.uleb128 0xb
 2719 0042 3A       		.uleb128 0x3a
 2720 0043 0B       		.uleb128 0xb
 2721 0044 3B       		.uleb128 0x3b
 2722 0045 0B       		.uleb128 0xb
 2723 0046 01       		.uleb128 0x1
 2724 0047 13       		.uleb128 0x13
 2725 0048 00       		.byte	0
 2726 0049 00       		.byte	0
 2727 004a 07       		.uleb128 0x7
 2728 004b 0D       		.uleb128 0xd
 2729 004c 00       		.byte	0
 2730 004d 03       		.uleb128 0x3
 2731 004e 0E       		.uleb128 0xe
 2732 004f 3A       		.uleb128 0x3a
 2733 0050 0B       		.uleb128 0xb
 2734 0051 3B       		.uleb128 0x3b
 2735 0052 0B       		.uleb128 0xb
 2736 0053 49       		.uleb128 0x49
 2737 0054 13       		.uleb128 0x13
 2738 0055 38       		.uleb128 0x38
 2739 0056 0B       		.uleb128 0xb
 2740 0057 00       		.byte	0
 2741 0058 00       		.byte	0
 2742 0059 08       		.uleb128 0x8
 2743 005a 16       		.uleb128 0x16
 2744 005b 00       		.byte	0
 2745 005c 03       		.uleb128 0x3
 2746 005d 0E       		.uleb128 0xe
 2747 005e 3A       		.uleb128 0x3a
 2748 005f 0B       		.uleb128 0xb
 2749 0060 3B       		.uleb128 0x3b
 2750 0061 0B       		.uleb128 0xb
 2751 0062 49       		.uleb128 0x49
 2752 0063 13       		.uleb128 0x13
 2753 0064 00       		.byte	0
 2754 0065 00       		.byte	0
 2755 0066 09       		.uleb128 0x9
 2756 0067 0D       		.uleb128 0xd
 2757 0068 00       		.byte	0
 2758 0069 03       		.uleb128 0x3
 2759 006a 08       		.uleb128 0x8
 2760 006b 3A       		.uleb128 0x3a
 2761 006c 0B       		.uleb128 0xb
 2762 006d 3B       		.uleb128 0x3b
 2763 006e 0B       		.uleb128 0xb
 2764 006f 49       		.uleb128 0x49
 2765 0070 13       		.uleb128 0x13
 2766 0071 38       		.uleb128 0x38
 2767 0072 0B       		.uleb128 0xb
 2768 0073 00       		.byte	0
 2769 0074 00       		.byte	0
 2770 0075 0A       		.uleb128 0xa
 2771 0076 01       		.uleb128 0x1
 2772 0077 01       		.byte	0x1
 2773 0078 49       		.uleb128 0x49
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 94


 2774 0079 13       		.uleb128 0x13
 2775 007a 01       		.uleb128 0x1
 2776 007b 13       		.uleb128 0x13
 2777 007c 00       		.byte	0
 2778 007d 00       		.byte	0
 2779 007e 0B       		.uleb128 0xb
 2780 007f 21       		.uleb128 0x21
 2781 0080 00       		.byte	0
 2782 0081 49       		.uleb128 0x49
 2783 0082 13       		.uleb128 0x13
 2784 0083 2F       		.uleb128 0x2f
 2785 0084 0B       		.uleb128 0xb
 2786 0085 00       		.byte	0
 2787 0086 00       		.byte	0
 2788 0087 0C       		.uleb128 0xc
 2789 0088 13       		.uleb128 0x13
 2790 0089 01       		.byte	0x1
 2791 008a 0B       		.uleb128 0xb
 2792 008b 0B       		.uleb128 0xb
 2793 008c 3A       		.uleb128 0x3a
 2794 008d 0B       		.uleb128 0xb
 2795 008e 3B       		.uleb128 0x3b
 2796 008f 05       		.uleb128 0x5
 2797 0090 01       		.uleb128 0x1
 2798 0091 13       		.uleb128 0x13
 2799 0092 00       		.byte	0
 2800 0093 00       		.byte	0
 2801 0094 0D       		.uleb128 0xd
 2802 0095 0D       		.uleb128 0xd
 2803 0096 00       		.byte	0
 2804 0097 03       		.uleb128 0x3
 2805 0098 0E       		.uleb128 0xe
 2806 0099 3A       		.uleb128 0x3a
 2807 009a 0B       		.uleb128 0xb
 2808 009b 3B       		.uleb128 0x3b
 2809 009c 05       		.uleb128 0x5
 2810 009d 49       		.uleb128 0x49
 2811 009e 13       		.uleb128 0x13
 2812 009f 38       		.uleb128 0x38
 2813 00a0 0B       		.uleb128 0xb
 2814 00a1 00       		.byte	0
 2815 00a2 00       		.byte	0
 2816 00a3 0E       		.uleb128 0xe
 2817 00a4 2E       		.uleb128 0x2e
 2818 00a5 01       		.byte	0x1
 2819 00a6 3F       		.uleb128 0x3f
 2820 00a7 19       		.uleb128 0x19
 2821 00a8 03       		.uleb128 0x3
 2822 00a9 0E       		.uleb128 0xe
 2823 00aa 3A       		.uleb128 0x3a
 2824 00ab 0B       		.uleb128 0xb
 2825 00ac 3B       		.uleb128 0x3b
 2826 00ad 0B       		.uleb128 0xb
 2827 00ae 27       		.uleb128 0x27
 2828 00af 19       		.uleb128 0x19
 2829 00b0 11       		.uleb128 0x11
 2830 00b1 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 95


 2831 00b2 12       		.uleb128 0x12
 2832 00b3 06       		.uleb128 0x6
 2833 00b4 40       		.uleb128 0x40
 2834 00b5 18       		.uleb128 0x18
 2835 00b6 9642     		.uleb128 0x2116
 2836 00b8 19       		.uleb128 0x19
 2837 00b9 01       		.uleb128 0x1
 2838 00ba 13       		.uleb128 0x13
 2839 00bb 00       		.byte	0
 2840 00bc 00       		.byte	0
 2841 00bd 0F       		.uleb128 0xf
 2842 00be 05       		.uleb128 0x5
 2843 00bf 00       		.byte	0
 2844 00c0 03       		.uleb128 0x3
 2845 00c1 0E       		.uleb128 0xe
 2846 00c2 3A       		.uleb128 0x3a
 2847 00c3 0B       		.uleb128 0xb
 2848 00c4 3B       		.uleb128 0x3b
 2849 00c5 0B       		.uleb128 0xb
 2850 00c6 49       		.uleb128 0x49
 2851 00c7 13       		.uleb128 0x13
 2852 00c8 02       		.uleb128 0x2
 2853 00c9 18       		.uleb128 0x18
 2854 00ca 00       		.byte	0
 2855 00cb 00       		.byte	0
 2856 00cc 10       		.uleb128 0x10
 2857 00cd 34       		.uleb128 0x34
 2858 00ce 00       		.byte	0
 2859 00cf 03       		.uleb128 0x3
 2860 00d0 0E       		.uleb128 0xe
 2861 00d1 3A       		.uleb128 0x3a
 2862 00d2 0B       		.uleb128 0xb
 2863 00d3 3B       		.uleb128 0x3b
 2864 00d4 0B       		.uleb128 0xb
 2865 00d5 49       		.uleb128 0x49
 2866 00d6 13       		.uleb128 0x13
 2867 00d7 02       		.uleb128 0x2
 2868 00d8 18       		.uleb128 0x18
 2869 00d9 00       		.byte	0
 2870 00da 00       		.byte	0
 2871 00db 11       		.uleb128 0x11
 2872 00dc 2E       		.uleb128 0x2e
 2873 00dd 01       		.byte	0x1
 2874 00de 3F       		.uleb128 0x3f
 2875 00df 19       		.uleb128 0x19
 2876 00e0 03       		.uleb128 0x3
 2877 00e1 0E       		.uleb128 0xe
 2878 00e2 3A       		.uleb128 0x3a
 2879 00e3 0B       		.uleb128 0xb
 2880 00e4 3B       		.uleb128 0x3b
 2881 00e5 05       		.uleb128 0x5
 2882 00e6 27       		.uleb128 0x27
 2883 00e7 19       		.uleb128 0x19
 2884 00e8 11       		.uleb128 0x11
 2885 00e9 01       		.uleb128 0x1
 2886 00ea 12       		.uleb128 0x12
 2887 00eb 06       		.uleb128 0x6
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 96


 2888 00ec 40       		.uleb128 0x40
 2889 00ed 18       		.uleb128 0x18
 2890 00ee 9642     		.uleb128 0x2116
 2891 00f0 19       		.uleb128 0x19
 2892 00f1 01       		.uleb128 0x1
 2893 00f2 13       		.uleb128 0x13
 2894 00f3 00       		.byte	0
 2895 00f4 00       		.byte	0
 2896 00f5 12       		.uleb128 0x12
 2897 00f6 05       		.uleb128 0x5
 2898 00f7 00       		.byte	0
 2899 00f8 03       		.uleb128 0x3
 2900 00f9 0E       		.uleb128 0xe
 2901 00fa 3A       		.uleb128 0x3a
 2902 00fb 0B       		.uleb128 0xb
 2903 00fc 3B       		.uleb128 0x3b
 2904 00fd 05       		.uleb128 0x5
 2905 00fe 49       		.uleb128 0x49
 2906 00ff 13       		.uleb128 0x13
 2907 0100 02       		.uleb128 0x2
 2908 0101 18       		.uleb128 0x18
 2909 0102 00       		.byte	0
 2910 0103 00       		.byte	0
 2911 0104 13       		.uleb128 0x13
 2912 0105 2E       		.uleb128 0x2e
 2913 0106 00       		.byte	0
 2914 0107 3F       		.uleb128 0x3f
 2915 0108 19       		.uleb128 0x19
 2916 0109 03       		.uleb128 0x3
 2917 010a 0E       		.uleb128 0xe
 2918 010b 3A       		.uleb128 0x3a
 2919 010c 0B       		.uleb128 0xb
 2920 010d 3B       		.uleb128 0x3b
 2921 010e 05       		.uleb128 0x5
 2922 010f 27       		.uleb128 0x27
 2923 0110 19       		.uleb128 0x19
 2924 0111 11       		.uleb128 0x11
 2925 0112 01       		.uleb128 0x1
 2926 0113 12       		.uleb128 0x12
 2927 0114 06       		.uleb128 0x6
 2928 0115 40       		.uleb128 0x40
 2929 0116 18       		.uleb128 0x18
 2930 0117 9742     		.uleb128 0x2117
 2931 0119 19       		.uleb128 0x19
 2932 011a 00       		.byte	0
 2933 011b 00       		.byte	0
 2934 011c 14       		.uleb128 0x14
 2935 011d 34       		.uleb128 0x34
 2936 011e 00       		.byte	0
 2937 011f 03       		.uleb128 0x3
 2938 0120 0E       		.uleb128 0xe
 2939 0121 3A       		.uleb128 0x3a
 2940 0122 0B       		.uleb128 0xb
 2941 0123 3B       		.uleb128 0x3b
 2942 0124 05       		.uleb128 0x5
 2943 0125 49       		.uleb128 0x49
 2944 0126 13       		.uleb128 0x13
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 97


 2945 0127 02       		.uleb128 0x2
 2946 0128 18       		.uleb128 0x18
 2947 0129 00       		.byte	0
 2948 012a 00       		.byte	0
 2949 012b 15       		.uleb128 0x15
 2950 012c 2E       		.uleb128 0x2e
 2951 012d 01       		.byte	0x1
 2952 012e 3F       		.uleb128 0x3f
 2953 012f 19       		.uleb128 0x19
 2954 0130 03       		.uleb128 0x3
 2955 0131 0E       		.uleb128 0xe
 2956 0132 3A       		.uleb128 0x3a
 2957 0133 0B       		.uleb128 0xb
 2958 0134 3B       		.uleb128 0x3b
 2959 0135 05       		.uleb128 0x5
 2960 0136 27       		.uleb128 0x27
 2961 0137 19       		.uleb128 0x19
 2962 0138 49       		.uleb128 0x49
 2963 0139 13       		.uleb128 0x13
 2964 013a 11       		.uleb128 0x11
 2965 013b 01       		.uleb128 0x1
 2966 013c 12       		.uleb128 0x12
 2967 013d 06       		.uleb128 0x6
 2968 013e 40       		.uleb128 0x40
 2969 013f 18       		.uleb128 0x18
 2970 0140 9742     		.uleb128 0x2117
 2971 0142 19       		.uleb128 0x19
 2972 0143 01       		.uleb128 0x1
 2973 0144 13       		.uleb128 0x13
 2974 0145 00       		.byte	0
 2975 0146 00       		.byte	0
 2976 0147 16       		.uleb128 0x16
 2977 0148 2E       		.uleb128 0x2e
 2978 0149 00       		.byte	0
 2979 014a 3F       		.uleb128 0x3f
 2980 014b 19       		.uleb128 0x19
 2981 014c 03       		.uleb128 0x3
 2982 014d 0E       		.uleb128 0xe
 2983 014e 3A       		.uleb128 0x3a
 2984 014f 0B       		.uleb128 0xb
 2985 0150 3B       		.uleb128 0x3b
 2986 0151 05       		.uleb128 0x5
 2987 0152 27       		.uleb128 0x27
 2988 0153 19       		.uleb128 0x19
 2989 0154 49       		.uleb128 0x49
 2990 0155 13       		.uleb128 0x13
 2991 0156 11       		.uleb128 0x11
 2992 0157 01       		.uleb128 0x1
 2993 0158 12       		.uleb128 0x12
 2994 0159 06       		.uleb128 0x6
 2995 015a 40       		.uleb128 0x40
 2996 015b 18       		.uleb128 0x18
 2997 015c 9742     		.uleb128 0x2117
 2998 015e 19       		.uleb128 0x19
 2999 015f 00       		.byte	0
 3000 0160 00       		.byte	0
 3001 0161 17       		.uleb128 0x17
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 98


 3002 0162 34       		.uleb128 0x34
 3003 0163 00       		.byte	0
 3004 0164 03       		.uleb128 0x3
 3005 0165 08       		.uleb128 0x8
 3006 0166 3A       		.uleb128 0x3a
 3007 0167 0B       		.uleb128 0xb
 3008 0168 3B       		.uleb128 0x3b
 3009 0169 05       		.uleb128 0x5
 3010 016a 49       		.uleb128 0x49
 3011 016b 13       		.uleb128 0x13
 3012 016c 02       		.uleb128 0x2
 3013 016d 18       		.uleb128 0x18
 3014 016e 00       		.byte	0
 3015 016f 00       		.byte	0
 3016 0170 18       		.uleb128 0x18
 3017 0171 2E       		.uleb128 0x2e
 3018 0172 01       		.byte	0x1
 3019 0173 3F       		.uleb128 0x3f
 3020 0174 19       		.uleb128 0x19
 3021 0175 03       		.uleb128 0x3
 3022 0176 0E       		.uleb128 0xe
 3023 0177 3A       		.uleb128 0x3a
 3024 0178 0B       		.uleb128 0xb
 3025 0179 3B       		.uleb128 0x3b
 3026 017a 05       		.uleb128 0x5
 3027 017b 27       		.uleb128 0x27
 3028 017c 19       		.uleb128 0x19
 3029 017d 11       		.uleb128 0x11
 3030 017e 01       		.uleb128 0x1
 3031 017f 12       		.uleb128 0x12
 3032 0180 06       		.uleb128 0x6
 3033 0181 40       		.uleb128 0x40
 3034 0182 18       		.uleb128 0x18
 3035 0183 9742     		.uleb128 0x2117
 3036 0185 19       		.uleb128 0x19
 3037 0186 01       		.uleb128 0x1
 3038 0187 13       		.uleb128 0x13
 3039 0188 00       		.byte	0
 3040 0189 00       		.byte	0
 3041 018a 19       		.uleb128 0x19
 3042 018b 0B       		.uleb128 0xb
 3043 018c 01       		.byte	0x1
 3044 018d 11       		.uleb128 0x11
 3045 018e 01       		.uleb128 0x1
 3046 018f 12       		.uleb128 0x12
 3047 0190 06       		.uleb128 0x6
 3048 0191 00       		.byte	0
 3049 0192 00       		.byte	0
 3050 0193 1A       		.uleb128 0x1a
 3051 0194 0F       		.uleb128 0xf
 3052 0195 00       		.byte	0
 3053 0196 0B       		.uleb128 0xb
 3054 0197 0B       		.uleb128 0xb
 3055 0198 49       		.uleb128 0x49
 3056 0199 13       		.uleb128 0x13
 3057 019a 00       		.byte	0
 3058 019b 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 99


 3059 019c 1B       		.uleb128 0x1b
 3060 019d 26       		.uleb128 0x26
 3061 019e 00       		.byte	0
 3062 019f 49       		.uleb128 0x49
 3063 01a0 13       		.uleb128 0x13
 3064 01a1 00       		.byte	0
 3065 01a2 00       		.byte	0
 3066 01a3 1C       		.uleb128 0x1c
 3067 01a4 2E       		.uleb128 0x2e
 3068 01a5 01       		.byte	0x1
 3069 01a6 3F       		.uleb128 0x3f
 3070 01a7 19       		.uleb128 0x19
 3071 01a8 03       		.uleb128 0x3
 3072 01a9 0E       		.uleb128 0xe
 3073 01aa 3A       		.uleb128 0x3a
 3074 01ab 0B       		.uleb128 0xb
 3075 01ac 3B       		.uleb128 0x3b
 3076 01ad 05       		.uleb128 0x5
 3077 01ae 27       		.uleb128 0x27
 3078 01af 19       		.uleb128 0x19
 3079 01b0 49       		.uleb128 0x49
 3080 01b1 13       		.uleb128 0x13
 3081 01b2 11       		.uleb128 0x11
 3082 01b3 01       		.uleb128 0x1
 3083 01b4 12       		.uleb128 0x12
 3084 01b5 06       		.uleb128 0x6
 3085 01b6 40       		.uleb128 0x40
 3086 01b7 18       		.uleb128 0x18
 3087 01b8 9642     		.uleb128 0x2116
 3088 01ba 19       		.uleb128 0x19
 3089 01bb 01       		.uleb128 0x1
 3090 01bc 13       		.uleb128 0x13
 3091 01bd 00       		.byte	0
 3092 01be 00       		.byte	0
 3093 01bf 1D       		.uleb128 0x1d
 3094 01c0 34       		.uleb128 0x34
 3095 01c1 00       		.byte	0
 3096 01c2 03       		.uleb128 0x3
 3097 01c3 0E       		.uleb128 0xe
 3098 01c4 3A       		.uleb128 0x3a
 3099 01c5 0B       		.uleb128 0xb
 3100 01c6 3B       		.uleb128 0x3b
 3101 01c7 0B       		.uleb128 0xb
 3102 01c8 49       		.uleb128 0x49
 3103 01c9 13       		.uleb128 0x13
 3104 01ca 3F       		.uleb128 0x3f
 3105 01cb 19       		.uleb128 0x19
 3106 01cc 02       		.uleb128 0x2
 3107 01cd 18       		.uleb128 0x18
 3108 01ce 00       		.byte	0
 3109 01cf 00       		.byte	0
 3110 01d0 1E       		.uleb128 0x1e
 3111 01d1 34       		.uleb128 0x34
 3112 01d2 00       		.byte	0
 3113 01d3 03       		.uleb128 0x3
 3114 01d4 0E       		.uleb128 0xe
 3115 01d5 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 100


 3116 01d6 0B       		.uleb128 0xb
 3117 01d7 3B       		.uleb128 0x3b
 3118 01d8 05       		.uleb128 0x5
 3119 01d9 49       		.uleb128 0x49
 3120 01da 13       		.uleb128 0x13
 3121 01db 3F       		.uleb128 0x3f
 3122 01dc 19       		.uleb128 0x19
 3123 01dd 3C       		.uleb128 0x3c
 3124 01de 19       		.uleb128 0x19
 3125 01df 00       		.byte	0
 3126 01e0 00       		.byte	0
 3127 01e1 1F       		.uleb128 0x1f
 3128 01e2 34       		.uleb128 0x34
 3129 01e3 00       		.byte	0
 3130 01e4 03       		.uleb128 0x3
 3131 01e5 0E       		.uleb128 0xe
 3132 01e6 3A       		.uleb128 0x3a
 3133 01e7 0B       		.uleb128 0xb
 3134 01e8 3B       		.uleb128 0x3b
 3135 01e9 0B       		.uleb128 0xb
 3136 01ea 49       		.uleb128 0x49
 3137 01eb 13       		.uleb128 0x13
 3138 01ec 3F       		.uleb128 0x3f
 3139 01ed 19       		.uleb128 0x19
 3140 01ee 3C       		.uleb128 0x3c
 3141 01ef 19       		.uleb128 0x19
 3142 01f0 00       		.byte	0
 3143 01f1 00       		.byte	0
 3144 01f2 00       		.byte	0
 3145              		.section	.debug_aranges,"",%progbits
 3146 0000 C4000000 		.4byte	0xc4
 3147 0004 0200     		.2byte	0x2
 3148 0006 00000000 		.4byte	.Ldebug_info0
 3149 000a 04       		.byte	0x4
 3150 000b 00       		.byte	0
 3151 000c 0000     		.2byte	0
 3152 000e 0000     		.2byte	0
 3153 0010 00000000 		.4byte	.LFB0
 3154 0014 38000000 		.4byte	.LFE0-.LFB0
 3155 0018 00000000 		.4byte	.LFB1
 3156 001c A0010000 		.4byte	.LFE1-.LFB1
 3157 0020 00000000 		.4byte	.LFB2
 3158 0024 00010000 		.4byte	.LFE2-.LFB2
 3159 0028 00000000 		.4byte	.LFB3
 3160 002c 68000000 		.4byte	.LFE3-.LFB3
 3161 0030 00000000 		.4byte	.LFB4
 3162 0034 0C010000 		.4byte	.LFE4-.LFB4
 3163 0038 00000000 		.4byte	.LFB5
 3164 003c 38000000 		.4byte	.LFE5-.LFB5
 3165 0040 00000000 		.4byte	.LFB6
 3166 0044 18000000 		.4byte	.LFE6-.LFB6
 3167 0048 00000000 		.4byte	.LFB7
 3168 004c 34000000 		.4byte	.LFE7-.LFB7
 3169 0050 00000000 		.4byte	.LFB8
 3170 0054 24000000 		.4byte	.LFE8-.LFB8
 3171 0058 00000000 		.4byte	.LFB9
 3172 005c 2C000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 101


 3173 0060 00000000 		.4byte	.LFB10
 3174 0064 60000000 		.4byte	.LFE10-.LFB10
 3175 0068 00000000 		.4byte	.LFB11
 3176 006c F8000000 		.4byte	.LFE11-.LFB11
 3177 0070 00000000 		.4byte	.LFB12
 3178 0074 8C000000 		.4byte	.LFE12-.LFB12
 3179 0078 00000000 		.4byte	.LFB13
 3180 007c 54000000 		.4byte	.LFE13-.LFB13
 3181 0080 00000000 		.4byte	.LFB14
 3182 0084 30000000 		.4byte	.LFE14-.LFB14
 3183 0088 00000000 		.4byte	.LFB15
 3184 008c 20000000 		.4byte	.LFE15-.LFB15
 3185 0090 00000000 		.4byte	.LFB16
 3186 0094 40000000 		.4byte	.LFE16-.LFB16
 3187 0098 00000000 		.4byte	.LFB17
 3188 009c 40000000 		.4byte	.LFE17-.LFB17
 3189 00a0 00000000 		.4byte	.LFB18
 3190 00a4 30000000 		.4byte	.LFE18-.LFB18
 3191 00a8 00000000 		.4byte	.LFB19
 3192 00ac 20000000 		.4byte	.LFE19-.LFB19
 3193 00b0 00000000 		.4byte	.LFB20
 3194 00b4 18000000 		.4byte	.LFE20-.LFB20
 3195 00b8 00000000 		.4byte	.LFB21
 3196 00bc 18000000 		.4byte	.LFE21-.LFB21
 3197 00c0 00000000 		.4byte	0
 3198 00c4 00000000 		.4byte	0
 3199              		.section	.debug_ranges,"",%progbits
 3200              	.Ldebug_ranges0:
 3201 0000 00000000 		.4byte	.LFB0
 3202 0004 38000000 		.4byte	.LFE0
 3203 0008 00000000 		.4byte	.LFB1
 3204 000c A0010000 		.4byte	.LFE1
 3205 0010 00000000 		.4byte	.LFB2
 3206 0014 00010000 		.4byte	.LFE2
 3207 0018 00000000 		.4byte	.LFB3
 3208 001c 68000000 		.4byte	.LFE3
 3209 0020 00000000 		.4byte	.LFB4
 3210 0024 0C010000 		.4byte	.LFE4
 3211 0028 00000000 		.4byte	.LFB5
 3212 002c 38000000 		.4byte	.LFE5
 3213 0030 00000000 		.4byte	.LFB6
 3214 0034 18000000 		.4byte	.LFE6
 3215 0038 00000000 		.4byte	.LFB7
 3216 003c 34000000 		.4byte	.LFE7
 3217 0040 00000000 		.4byte	.LFB8
 3218 0044 24000000 		.4byte	.LFE8
 3219 0048 00000000 		.4byte	.LFB9
 3220 004c 2C000000 		.4byte	.LFE9
 3221 0050 00000000 		.4byte	.LFB10
 3222 0054 60000000 		.4byte	.LFE10
 3223 0058 00000000 		.4byte	.LFB11
 3224 005c F8000000 		.4byte	.LFE11
 3225 0060 00000000 		.4byte	.LFB12
 3226 0064 8C000000 		.4byte	.LFE12
 3227 0068 00000000 		.4byte	.LFB13
 3228 006c 54000000 		.4byte	.LFE13
 3229 0070 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 102


 3230 0074 30000000 		.4byte	.LFE14
 3231 0078 00000000 		.4byte	.LFB15
 3232 007c 20000000 		.4byte	.LFE15
 3233 0080 00000000 		.4byte	.LFB16
 3234 0084 40000000 		.4byte	.LFE16
 3235 0088 00000000 		.4byte	.LFB17
 3236 008c 40000000 		.4byte	.LFE17
 3237 0090 00000000 		.4byte	.LFB18
 3238 0094 30000000 		.4byte	.LFE18
 3239 0098 00000000 		.4byte	.LFB19
 3240 009c 20000000 		.4byte	.LFE19
 3241 00a0 00000000 		.4byte	.LFB20
 3242 00a4 18000000 		.4byte	.LFE20
 3243 00a8 00000000 		.4byte	.LFB21
 3244 00ac 18000000 		.4byte	.LFE21
 3245 00b0 00000000 		.4byte	0
 3246 00b4 00000000 		.4byte	0
 3247              		.section	.debug_line,"",%progbits
 3248              	.Ldebug_line0:
 3249 0000 02030000 		.section	.debug_str,"MS",%progbits,1
 3249      02006200 
 3249      00000201 
 3249      FB0E0D00 
 3249      01010101 
 3250              	.LASF10:
 3251 0000 75696E74 		.ascii	"uint16\000"
 3251      313600
 3252              	.LASF81:
 3253 0007 55534255 		.ascii	"USBUART_device\000"
 3253      4152545F 
 3253      64657669 
 3253      636500
 3254              	.LASF76:
 3255 0016 55534255 		.ascii	"USBUART_GetDeviceAddress\000"
 3255      4152545F 
 3255      47657444 
 3255      65766963 
 3255      65416464 
 3256              	.LASF51:
 3257 002f 55534255 		.ascii	"USBUART_Stop\000"
 3257      4152545F 
 3257      53746F70 
 3257      00
 3258              	.LASF73:
 3259 003c 55534255 		.ascii	"USBUART_RWUEnabled\000"
 3259      4152545F 
 3259      52575545 
 3259      6E61626C 
 3259      656400
 3260              	.LASF90:
 3261 004f 55534255 		.ascii	"USBUART_lastPacketSize\000"
 3261      4152545F 
 3261      6C617374 
 3261      5061636B 
 3261      65745369 
 3262              	.LASF62:
 3263 0066 55534255 		.ascii	"USBUART_LoadInEP\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 103


 3263      4152545F 
 3263      4C6F6164 
 3263      496E4550 
 3263      00
 3264              	.LASF7:
 3265 0077 6C6F6E67 		.ascii	"long long unsigned int\000"
 3265      206C6F6E 
 3265      6720756E 
 3265      7369676E 
 3265      65642069 
 3266              	.LASF22:
 3267 008e 61646472 		.ascii	"addr\000"
 3267      00
 3268              	.LASF32:
 3269 0093 65704366 		.ascii	"epCfg\000"
 3269      6700
 3270              	.LASF89:
 3271 0099 55534255 		.ascii	"USBUART_EP\000"
 3271      4152545F 
 3271      455000
 3272              	.LASF59:
 3273 00a4 65704E75 		.ascii	"epNumber\000"
 3273      6D626572 
 3273      00
 3274              	.LASF46:
 3275 00ad 64657669 		.ascii	"device\000"
 3275      636500
 3276              	.LASF75:
 3277 00b4 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3277      4152545F 
 3277      47657443 
 3277      6F6E6669 
 3277      67757261 
 3278              	.LASF6:
 3279 00cd 6C6F6E67 		.ascii	"long long int\000"
 3279      206C6F6E 
 3279      6720696E 
 3279      7400
 3280              	.LASF0:
 3281 00db 7369676E 		.ascii	"signed char\000"
 3281      65642063 
 3281      68617200 
 3282              	.LASF66:
 3283 00e7 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3283      4152545F 
 3283      456E6162 
 3283      6C654F75 
 3283      74455000 
 3284              	.LASF70:
 3285 00fb 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3285      4152545F 
 3285      47657445 
 3285      5041636B 
 3285      53746174 
 3286              	.LASF61:
 3287 0111 636E7472 		.ascii	"cntr\000"
 3287      00
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 104


 3288              	.LASF43:
 3289 0116 55534255 		.ascii	"USBUART_sie_eps_struct\000"
 3289      4152545F 
 3289      7369655F 
 3289      6570735F 
 3289      73747275 
 3290              	.LASF54:
 3291 012d 55534255 		.ascii	"USBUART_CheckActivity\000"
 3291      4152545F 
 3291      43686563 
 3291      6B416374 
 3291      69766974 
 3292              	.LASF4:
 3293 0143 6C6F6E67 		.ascii	"long int\000"
 3293      20696E74 
 3293      00
 3294              	.LASF9:
 3295 014c 75696E74 		.ascii	"uint8\000"
 3295      3800
 3296              	.LASF21:
 3297 0152 6570546F 		.ascii	"epToggle\000"
 3297      67676C65 
 3297      00
 3298              	.LASF36:
 3299 015b 72775761 		.ascii	"rwWa\000"
 3299      00
 3300              	.LASF13:
 3301 0160 646F7562 		.ascii	"double\000"
 3301      6C6500
 3302              	.LASF72:
 3303 0167 706F7765 		.ascii	"powerStatus\000"
 3303      72537461 
 3303      74757300 
 3304              	.LASF79:
 3305 0173 55534255 		.ascii	"USBUART_DisableSofInt\000"
 3305      4152545F 
 3305      44697361 
 3305      626C6553 
 3305      6F66496E 
 3306              	.LASF71:
 3307 0189 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3307      4152545F 
 3307      53657450 
 3307      6F776572 
 3307      53746174 
 3308              	.LASF34:
 3309 01a0 65705372 		.ascii	"epSr\000"
 3309      00
 3310              	.LASF80:
 3311 01a5 55534255 		.ascii	"USBUART_initVar\000"
 3311      4152545F 
 3311      696E6974 
 3311      56617200 
 3312              	.LASF86:
 3313 01b5 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3313      4152545F 
 3313      696E7465 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 105


 3313      72666163 
 3313      654E756D 
 3314              	.LASF11:
 3315 01cd 75696E74 		.ascii	"uint32\000"
 3315      333200
 3316              	.LASF63:
 3317 01d4 70446174 		.ascii	"pData\000"
 3317      6100
 3318              	.LASF23:
 3319 01da 65704D6F 		.ascii	"epMode\000"
 3319      646500
 3320              	.LASF35:
 3321 01e1 72657365 		.ascii	"reserved\000"
 3321      72766564 
 3321      00
 3322              	.LASF85:
 3323 01ea 55534255 		.ascii	"USBUART_deviceStatus\000"
 3323      4152545F 
 3323      64657669 
 3323      63655374 
 3323      61747573 
 3324              	.LASF8:
 3325 01ff 756E7369 		.ascii	"unsigned int\000"
 3325      676E6564 
 3325      20696E74 
 3325      00
 3326              	.LASF5:
 3327 020c 6C6F6E67 		.ascii	"long unsigned int\000"
 3327      20756E73 
 3327      69676E65 
 3327      6420696E 
 3327      7400
 3328              	.LASF3:
 3329 021e 73686F72 		.ascii	"short unsigned int\000"
 3329      7420756E 
 3329      7369676E 
 3329      65642069 
 3329      6E7400
 3330              	.LASF48:
 3331 0231 55534255 		.ascii	"USBUART_Start\000"
 3331      4152545F 
 3331      53746172 
 3331      7400
 3332              	.LASF56:
 3333 023f 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3333      4152545F 
 3333      47657449 
 3333      6E746572 
 3333      66616365 
 3334              	.LASF49:
 3335 025b 55534255 		.ascii	"USBUART_Init\000"
 3335      4152545F 
 3335      496E6974 
 3335      00
 3336              	.LASF44:
 3337 0268 61726245 		.ascii	"arbEp\000"
 3337      7000
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 106


 3338              	.LASF26:
 3339 026e 696E7465 		.ascii	"interface\000"
 3339      72666163 
 3339      6500
 3340              	.LASF53:
 3341 0278 63723152 		.ascii	"cr1Reg\000"
 3341      656700
 3342              	.LASF16:
 3343 027f 72656733 		.ascii	"reg32\000"
 3343      3200
 3344              	.LASF88:
 3345 0285 55534255 		.ascii	"USBUART_deviceAddress\000"
 3345      4152545F 
 3345      64657669 
 3345      63654164 
 3345      64726573 
 3346              	.LASF92:
 3347 029b 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 3347      72617465 
 3347      645F536F 
 3347      75726365 
 3347      5C50536F 
 3348              	.LASF41:
 3349 02bc 55534255 		.ascii	"USBUART_arb_ep_struct\000"
 3349      4152545F 
 3349      6172625F 
 3349      65705F73 
 3349      74727563 
 3350              	.LASF20:
 3351 02d2 68774570 		.ascii	"hwEpState\000"
 3351      53746174 
 3351      6500
 3352              	.LASF45:
 3353 02dc 55534255 		.ascii	"USBUART_arb_eps_struct\000"
 3353      4152545F 
 3353      6172625F 
 3353      6570735F 
 3353      73747275 
 3354              	.LASF17:
 3355 02f3 73697A65 		.ascii	"sizetype\000"
 3355      74797065 
 3355      00
 3356              	.LASF42:
 3357 02fc 73696545 		.ascii	"sieEp\000"
 3357      7000
 3358              	.LASF68:
 3359 0302 55534255 		.ascii	"USBUART_Force\000"
 3359      4152545F 
 3359      466F7263 
 3359      6500
 3360              	.LASF18:
 3361 0310 61747472 		.ascii	"attrib\000"
 3361      696200
 3362              	.LASF91:
 3363 0317 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3363      4320342E 
 3363      392E3320 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 107


 3363      32303135 
 3363      30333033 
 3364 034a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3364      20726576 
 3364      6973696F 
 3364      6E203232 
 3364      31323230 
 3365 037d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3365      66756E63 
 3365      74696F6E 
 3365      2D736563 
 3365      74696F6E 
 3366              	.LASF39:
 3367 03a5 72775261 		.ascii	"rwRaMsb\000"
 3367      4D736200 
 3368              	.LASF28:
 3369 03ad 6570436E 		.ascii	"epCnt0\000"
 3369      743000
 3370              	.LASF29:
 3371 03b4 6570436E 		.ascii	"epCnt1\000"
 3371      743100
 3372              	.LASF30:
 3373 03bb 65704372 		.ascii	"epCr0\000"
 3373      3000
 3374              	.LASF12:
 3375 03c1 666C6F61 		.ascii	"float\000"
 3375      7400
 3376              	.LASF65:
 3377 03c7 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3377      4152545F 
 3377      52656164 
 3377      4F757445 
 3377      5000
 3378              	.LASF19:
 3379 03d9 61706945 		.ascii	"apiEpState\000"
 3379      70537461 
 3379      746500
 3380              	.LASF15:
 3381 03e4 72656738 		.ascii	"reg8\000"
 3381      00
 3382              	.LASF87:
 3383 03e9 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3383      4152545F 
 3383      696E7465 
 3383      72666163 
 3383      65536574 
 3384              	.LASF1:
 3385 0402 756E7369 		.ascii	"unsigned char\000"
 3385      676E6564 
 3385      20636861 
 3385      7200
 3386              	.LASF2:
 3387 0410 73686F72 		.ascii	"short int\000"
 3387      7420696E 
 3387      7400
 3388              	.LASF93:
 3389 041a 433A5C53 		.ascii	"C:\\SVN\\apps\\trunk\\Cypress Academy\\PSoC-121-Ana"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 108


 3389      564E5C61 
 3389      7070735C 
 3389      7472756E 
 3389      6B5C4379 
 3390 0448 6C6F675C 		.ascii	"log\\Scope\\KEES_Scope\\PSoC\\Scope.cydsn\000"
 3390      53636F70 
 3390      655C4B45 
 3390      45535F53 
 3390      636F7065 
 3391              	.LASF58:
 3392 046e 55534255 		.ascii	"USBUART_GetEPState\000"
 3392      4152545F 
 3392      47657445 
 3392      50537461 
 3392      746500
 3393              	.LASF38:
 3394 0481 72775261 		.ascii	"rwRa\000"
 3394      00
 3395              	.LASF67:
 3396 0486 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3396      4152545F 
 3396      44697361 
 3396      626C654F 
 3396      75744550 
 3397              	.LASF37:
 3398 049b 72775761 		.ascii	"rwWaMsb\000"
 3398      4D736200 
 3399              	.LASF31:
 3400 04a3 55534255 		.ascii	"USBUART_sie_ep_struct\000"
 3400      4152545F 
 3400      7369655F 
 3400      65705F73 
 3400      74727563 
 3401              	.LASF69:
 3402 04b9 62537461 		.ascii	"bState\000"
 3402      746500
 3403              	.LASF64:
 3404 04c0 6C656E67 		.ascii	"length\000"
 3404      746800
 3405              	.LASF14:
 3406 04c7 63686172 		.ascii	"char\000"
 3406      00
 3407              	.LASF47:
 3408 04cc 6D6F6465 		.ascii	"mode\000"
 3408      00
 3409              	.LASF25:
 3410 04d1 62756666 		.ascii	"bufferSize\000"
 3410      65725369 
 3410      7A6500
 3411              	.LASF27:
 3412 04dc 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3412      42554152 
 3412      545F4550 
 3412      5F43544C 
 3412      5F424C4F 
 3413              	.LASF24:
 3414 04f3 62756666 		.ascii	"buffOffset\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 109


 3414      4F666673 
 3414      657400
 3415              	.LASF57:
 3416 04fe 696E7465 		.ascii	"interfaceNumber\000"
 3416      72666163 
 3416      654E756D 
 3416      62657200 
 3417              	.LASF60:
 3418 050e 55534255 		.ascii	"USBUART_GetEPCount\000"
 3418      4152545F 
 3418      47657445 
 3418      50436F75 
 3418      6E7400
 3419              	.LASF52:
 3420 0521 656E6162 		.ascii	"enableInterrupts\000"
 3420      6C65496E 
 3420      74657272 
 3420      75707473 
 3420      00
 3421              	.LASF40:
 3422 0532 72774472 		.ascii	"rwDr\000"
 3422      00
 3423              	.LASF50:
 3424 0537 55534255 		.ascii	"USBUART_InitComponent\000"
 3424      4152545F 
 3424      496E6974 
 3424      436F6D70 
 3424      6F6E656E 
 3425              	.LASF83:
 3426 054d 55534255 		.ascii	"USBUART_configuration\000"
 3426      4152545F 
 3426      636F6E66 
 3426      69677572 
 3426      6174696F 
 3427              	.LASF55:
 3428 0563 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3428      4152545F 
 3428      4973436F 
 3428      6E666967 
 3428      75726174 
 3429              	.LASF33:
 3430 0582 6570496E 		.ascii	"epIntEn\000"
 3430      74456E00 
 3431              	.LASF77:
 3432 058a 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3432      4152545F 
 3432      5265496E 
 3432      6974436F 
 3432      6D706F6E 
 3433              	.LASF82:
 3434 05a2 55534255 		.ascii	"USBUART_transferState\000"
 3434      4152545F 
 3434      7472616E 
 3434      73666572 
 3434      53746174 
 3435              	.LASF78:
 3436 05b8 55534255 		.ascii	"USBUART_EnableSofInt\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccjGwDaf.s 			page 110


 3436      4152545F 
 3436      456E6162 
 3436      6C65536F 
 3436      66496E74 
 3437              	.LASF84:
 3438 05cd 55534255 		.ascii	"USBUART_configurationChanged\000"
 3438      4152545F 
 3438      636F6E66 
 3438      69677572 
 3438      6174696F 
 3439              	.LASF74:
 3440 05ea 72657375 		.ascii	"result\000"
 3440      6C7400
 3441              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
