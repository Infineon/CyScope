ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CyLib.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	CyResetStatus
  19              		.section	.noinit,"aw",%progbits
  20              		.type	CyResetStatus, %object
  21              		.size	CyResetStatus, 1
  22              	CyResetStatus:
  23 0000 00       		.space	1
  24              		.global	cydelay_freq_hz
  25              		.data
  26              		.align	2
  27              		.type	cydelay_freq_hz, %object
  28              		.size	cydelay_freq_hz, 4
  29              	cydelay_freq_hz:
  30 0000 00512502 		.word	36000000
  31              		.global	cydelay_freq_khz
  32              		.align	2
  33              		.type	cydelay_freq_khz, %object
  34              		.size	cydelay_freq_khz, 4
  35              	cydelay_freq_khz:
  36 0004 A08C0000 		.word	36000
  37              		.global	cydelay_freq_mhz
  38              		.type	cydelay_freq_mhz, %object
  39              		.size	cydelay_freq_mhz, 1
  40              	cydelay_freq_mhz:
  41 0008 24       		.byte	36
  42              		.global	cydelay_32k_ms
  43 0009 000000   		.align	2
  44              		.type	cydelay_32k_ms, %object
  45              		.size	cydelay_32k_ms, 4
  46              	cydelay_32k_ms:
  47 000c 00005046 		.word	1179648000
  48              		.bss
  49              		.align	2
  50              	CySysTickCallbacks:
  51 0000 00000000 		.space	20
  51      00000000 
  51      00000000 
  51      00000000 
  51      00000000 
  52              		.global	CySysTickInitVar
  53              		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 2


  54              		.type	CySysTickInitVar, %object
  55              		.size	CySysTickInitVar, 4
  56              	CySysTickInitVar:
  57 0014 00000000 		.space	4
  58              		.section	.text.CyPLL_OUT_Start,"ax",%progbits
  59              		.align	2
  60              		.global	CyPLL_OUT_Start
  61              		.thumb
  62              		.thumb_func
  63              		.type	CyPLL_OUT_Start, %function
  64              	CyPLL_OUT_Start:
  65              	.LFB0:
  66              		.file 1 "Generated_Source\\PSoC5\\CyLib.c"
   1:Generated_Source\PSoC5/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC5/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC5/CyLib.c **** *
   5:Generated_Source\PSoC5/CyLib.c **** * \brief Provides a system API for the clocking, interrupts and watchdog timer.
   6:Generated_Source\PSoC5/CyLib.c **** *
   7:Generated_Source\PSoC5/CyLib.c **** * \note Documentation of the API's in this file is located in the System
   8:Generated_Source\PSoC5/CyLib.c **** * Reference Guide provided with PSoC Creator.
   9:Generated_Source\PSoC5/CyLib.c **** *
  10:Generated_Source\PSoC5/CyLib.c **** ********************************************************************************
  11:Generated_Source\PSoC5/CyLib.c **** * \copyright
  12:Generated_Source\PSoC5/CyLib.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CyLib.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CyLib.c **** 
  18:Generated_Source\PSoC5/CyLib.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/CyLib.c **** 
  20:Generated_Source\PSoC5/CyLib.c **** 
  21:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
  22:Generated_Source\PSoC5/CyLib.c **** * The CyResetStatus variable is used to obtain value of RESET_SR0 register after
  23:Generated_Source\PSoC5/CyLib.c **** * a device reset. It is set from initialize_psoc() at the early initialization
  24:Generated_Source\PSoC5/CyLib.c **** * stage. In case of IAR EW IDE, initialize_psoc() is executed before the data
  25:Generated_Source\PSoC5/CyLib.c **** * sections are initialized. To avoid zeroing, CyResetStatus should be placed
  26:Generated_Source\PSoC5/CyLib.c **** * to the .noinit section.
  27:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
  28:Generated_Source\PSoC5/CyLib.c **** CY_NOINIT uint8 CYXDATA CyResetStatus;
  29:Generated_Source\PSoC5/CyLib.c **** 
  30:Generated_Source\PSoC5/CyLib.c **** 
  31:Generated_Source\PSoC5/CyLib.c **** /* Variable Vdda */
  32:Generated_Source\PSoC5/CyLib.c **** #if(CYDEV_VARIABLE_VDDA == 1)
  33:Generated_Source\PSoC5/CyLib.c **** 
  34:Generated_Source\PSoC5/CyLib.c ****     uint8 CyScPumpEnabled = (uint8)(CYDEV_VDDA_MV < 2700);
  35:Generated_Source\PSoC5/CyLib.c **** 
  36:Generated_Source\PSoC5/CyLib.c **** #endif  /* (CYDEV_VARIABLE_VDDA == 1) */
  37:Generated_Source\PSoC5/CyLib.c **** 
  38:Generated_Source\PSoC5/CyLib.c **** 
  39:Generated_Source\PSoC5/CyLib.c **** /* Do not use these definitions directly in your application */
  40:Generated_Source\PSoC5/CyLib.c **** uint32 cydelay_freq_hz  = BCLK__BUS_CLK__HZ;
  41:Generated_Source\PSoC5/CyLib.c **** uint32 cydelay_freq_khz = (BCLK__BUS_CLK__HZ + 999u) / 1000u;
  42:Generated_Source\PSoC5/CyLib.c **** uint8  cydelay_freq_mhz = (uint8)((BCLK__BUS_CLK__HZ + 999999u) / 1000000u);
  43:Generated_Source\PSoC5/CyLib.c **** uint32 cydelay_32k_ms   = 32768u * ((BCLK__BUS_CLK__HZ + 999u) / 1000u);
  44:Generated_Source\PSoC5/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 3


  45:Generated_Source\PSoC5/CyLib.c **** 
  46:Generated_Source\PSoC5/CyLib.c **** /* Function Prototypes */
  47:Generated_Source\PSoC5/CyLib.c **** static uint8 CyUSB_PowerOnCheck(void)  ;
  48:Generated_Source\PSoC5/CyLib.c **** static void CyIMO_SetTrimValue(uint8 freq) ;
  49:Generated_Source\PSoC5/CyLib.c **** static void CyBusClk_Internal_SetDivider(uint16 divider);
  50:Generated_Source\PSoC5/CyLib.c **** 
  51:Generated_Source\PSoC5/CyLib.c **** #if(CY_PSOC5)
  52:Generated_Source\PSoC5/CyLib.c ****     static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  53:Generated_Source\PSoC5/CyLib.c ****     static void CySysTickServiceCallbacks(void);
  54:Generated_Source\PSoC5/CyLib.c ****     uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC5/CyLib.c **** #endif  /* (CY_PSOC5) */
  56:Generated_Source\PSoC5/CyLib.c **** 
  57:Generated_Source\PSoC5/CyLib.c **** 
  58:Generated_Source\PSoC5/CyLib.c **** #if(CY_PSOC3)
  59:Generated_Source\PSoC5/CyLib.c ****     CY_ISR_PROTO(IntDefaultHandler);
  60:Generated_Source\PSoC5/CyLib.c **** #endif /* (CY_PSOC3) */
  61:Generated_Source\PSoC5/CyLib.c **** 
  62:Generated_Source\PSoC5/CyLib.c **** 
  63:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
  64:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyPLL_OUT_Start
  65:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
  66:Generated_Source\PSoC5/CyLib.c **** *
  67:Generated_Source\PSoC5/CyLib.c **** *   Enables the PLL.  Optionally waits for it to become stable.
  68:Generated_Source\PSoC5/CyLib.c **** *   Waits at least 250 us or until it is detected that the PLL is stable.
  69:Generated_Source\PSoC5/CyLib.c **** *
  70:Generated_Source\PSoC5/CyLib.c **** *   \param wait:
  71:Generated_Source\PSoC5/CyLib.c **** *    \param 0: Return immediately after configuration
  72:Generated_Source\PSoC5/CyLib.c **** *    \param 1: Wait for PLL lock or timeout.
  73:Generated_Source\PSoC5/CyLib.c **** *
  74:Generated_Source\PSoC5/CyLib.c **** * \return
  75:Generated_Source\PSoC5/CyLib.c **** *   Status
  76:Generated_Source\PSoC5/CyLib.c **** *    CYRET_SUCCESS - Completed successfully
  77:Generated_Source\PSoC5/CyLib.c **** *    CYRET_TIMEOUT - Timeout occurred without detecting a stable clock.
  78:Generated_Source\PSoC5/CyLib.c **** *     If the input source of the clock is jittery, then the lock indication
  79:Generated_Source\PSoC5/CyLib.c **** *     may not occur.  However, after the timeout has expired the generated PLL
  80:Generated_Source\PSoC5/CyLib.c **** *     clock can still be used.
  81:Generated_Source\PSoC5/CyLib.c **** *
  82:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
  83:Generated_Source\PSoC5/CyLib.c **** *  If wait is enabled: This function uses the Fast Time Wheel to time the wait.
  84:Generated_Source\PSoC5/CyLib.c **** *  Any other use of the Fast Time Wheel will be stopped during the period of
  85:Generated_Source\PSoC5/CyLib.c **** *  this function and then restored. This function also uses the 100 KHz ILO.
  86:Generated_Source\PSoC5/CyLib.c **** *  If not enabled, this function will enable the 100 KHz ILO for the period of
  87:Generated_Source\PSoC5/CyLib.c **** *  this function.
  88:Generated_Source\PSoC5/CyLib.c **** *
  89:Generated_Source\PSoC5/CyLib.c **** *  No changes to the setup of the ILO, Fast Time Wheel, Central Time Wheel or
  90:Generated_Source\PSoC5/CyLib.c **** *  Once Per Second interrupt may be made by interrupt routines during the period
  91:Generated_Source\PSoC5/CyLib.c **** *  of this function execution. The current operation of the ILO, Central Time
  92:Generated_Source\PSoC5/CyLib.c **** *  Wheel and Once Per Second interrupt are maintained during the operation of
  93:Generated_Source\PSoC5/CyLib.c **** *  this function provided the reading of the Power Manager Interrupt Status
  94:Generated_Source\PSoC5/CyLib.c **** *  Register is only done using the CyPmReadStatus() function.
  95:Generated_Source\PSoC5/CyLib.c **** *
  96:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
  97:Generated_Source\PSoC5/CyLib.c **** cystatus CyPLL_OUT_Start(uint8 wait) 
  98:Generated_Source\PSoC5/CyLib.c **** {
  67              		.loc 1 98 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 4


  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71 0000 80B5     		push	{r7, lr}
  72              		.cfi_def_cfa_offset 8
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 84B0     		sub	sp, sp, #16
  76              		.cfi_def_cfa_offset 24
  77 0004 00AF     		add	r7, sp, #0
  78              		.cfi_def_cfa_register 7
  79 0006 0346     		mov	r3, r0
  80 0008 FB71     		strb	r3, [r7, #7]
  99:Generated_Source\PSoC5/CyLib.c ****     cystatus status = CYRET_SUCCESS;
  81              		.loc 1 99 0
  82 000a 0023     		movs	r3, #0
  83 000c FB60     		str	r3, [r7, #12]
 100:Generated_Source\PSoC5/CyLib.c **** 
 101:Generated_Source\PSoC5/CyLib.c ****     uint8 iloEnableState;
 102:Generated_Source\PSoC5/CyLib.c ****     uint8 pmTwCfg0State;
 103:Generated_Source\PSoC5/CyLib.c ****     uint8 pmTwCfg2State;
 104:Generated_Source\PSoC5/CyLib.c **** 
 105:Generated_Source\PSoC5/CyLib.c **** 
 106:Generated_Source\PSoC5/CyLib.c ****     /* Enables PLL circuit  */
 107:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_PLL_CFG0_REG |= CY_CLK_PLL_ENABLE;
  84              		.loc 1 107 0
  85 000e 234A     		ldr	r2, .L8
  86 0010 224B     		ldr	r3, .L8
  87 0012 1B78     		ldrb	r3, [r3]
  88 0014 DBB2     		uxtb	r3, r3
  89 0016 43F00103 		orr	r3, r3, #1
  90 001a DBB2     		uxtb	r3, r3
  91 001c 1370     		strb	r3, [r2]
 108:Generated_Source\PSoC5/CyLib.c **** 
 109:Generated_Source\PSoC5/CyLib.c ****     if(wait != 0u)
  92              		.loc 1 109 0
  93 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  94 0020 002B     		cmp	r3, #0
  95 0022 36D0     		beq	.L2
 110:Generated_Source\PSoC5/CyLib.c ****     {
 111:Generated_Source\PSoC5/CyLib.c ****         /* Save 100 KHz ILO, FTW interval, enable and interrupt enable */
 112:Generated_Source\PSoC5/CyLib.c ****         iloEnableState = CY_LIB_SLOWCLK_ILO_CR0_REG & CY_LIB_SLOWCLK_ILO_CR0_EN_100KHZ;
  96              		.loc 1 112 0
  97 0024 1E4B     		ldr	r3, .L8+4
  98 0026 1B78     		ldrb	r3, [r3]
  99 0028 DBB2     		uxtb	r3, r3
 100 002a 03F00403 		and	r3, r3, #4
 101 002e FB72     		strb	r3, [r7, #11]
 113:Generated_Source\PSoC5/CyLib.c ****         pmTwCfg0State = CY_LIB_PM_TW_CFG0_REG;
 102              		.loc 1 113 0
 103 0030 1C4B     		ldr	r3, .L8+8
 104 0032 1B78     		ldrb	r3, [r3]
 105 0034 BB72     		strb	r3, [r7, #10]
 114:Generated_Source\PSoC5/CyLib.c ****         pmTwCfg2State = CY_LIB_PM_TW_CFG2_REG;
 106              		.loc 1 114 0
 107 0036 1C4B     		ldr	r3, .L8+12
 108 0038 1B78     		ldrb	r3, [r3]
 109 003a 7B72     		strb	r3, [r7, #9]
 115:Generated_Source\PSoC5/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 5


 116:Generated_Source\PSoC5/CyLib.c ****         CyPmFtwSetInterval(CY_CLK_PLL_FTW_INTERVAL);
 110              		.loc 1 116 0
 111 003c 1820     		movs	r0, #24
 112 003e FFF7FEFF 		bl	CyPmFtwSetInterval
 117:Generated_Source\PSoC5/CyLib.c **** 
 118:Generated_Source\PSoC5/CyLib.c ****         status = CYRET_TIMEOUT;
 113              		.loc 1 118 0
 114 0042 1023     		movs	r3, #16
 115 0044 FB60     		str	r3, [r7, #12]
 119:Generated_Source\PSoC5/CyLib.c **** 
 120:Generated_Source\PSoC5/CyLib.c ****         while(0u == (CY_PM_FTW_INT & CyPmReadStatus(CY_PM_FTW_INT)))
 116              		.loc 1 120 0
 117 0046 10E0     		b	.L3
 118              	.L5:
 121:Generated_Source\PSoC5/CyLib.c ****         {
 122:Generated_Source\PSoC5/CyLib.c ****             /* Wait for interrupt status */
 123:Generated_Source\PSoC5/CyLib.c ****             if(0u != (CY_CLK_PLL_SR_REG & CY_CLK_PLL_LOCK_STATUS))
 119              		.loc 1 123 0
 120 0048 184B     		ldr	r3, .L8+16
 121 004a 1B78     		ldrb	r3, [r3]
 122 004c DBB2     		uxtb	r3, r3
 123 004e 03F00103 		and	r3, r3, #1
 124 0052 002B     		cmp	r3, #0
 125 0054 09D0     		beq	.L3
 124:Generated_Source\PSoC5/CyLib.c ****             {
 125:Generated_Source\PSoC5/CyLib.c ****                 if(0u != (CY_CLK_PLL_SR_REG & CY_CLK_PLL_LOCK_STATUS))
 126              		.loc 1 125 0
 127 0056 154B     		ldr	r3, .L8+16
 128 0058 1B78     		ldrb	r3, [r3]
 129 005a DBB2     		uxtb	r3, r3
 130 005c 03F00103 		and	r3, r3, #1
 131 0060 002B     		cmp	r3, #0
 132 0062 02D0     		beq	.L3
 126:Generated_Source\PSoC5/CyLib.c ****                 {
 127:Generated_Source\PSoC5/CyLib.c ****                     status = CYRET_SUCCESS;
 133              		.loc 1 127 0
 134 0064 0023     		movs	r3, #0
 135 0066 FB60     		str	r3, [r7, #12]
 128:Generated_Source\PSoC5/CyLib.c ****                     break;
 136              		.loc 1 128 0
 137 0068 08E0     		b	.L4
 138              	.L3:
 120:Generated_Source\PSoC5/CyLib.c ****         {
 139              		.loc 1 120 0
 140 006a 0120     		movs	r0, #1
 141 006c FFF7FEFF 		bl	CyPmReadStatus
 142 0070 0346     		mov	r3, r0
 143 0072 03F00103 		and	r3, r3, #1
 144 0076 DBB2     		uxtb	r3, r3
 145 0078 002B     		cmp	r3, #0
 146 007a E5D0     		beq	.L5
 147              	.L4:
 129:Generated_Source\PSoC5/CyLib.c ****                 }
 130:Generated_Source\PSoC5/CyLib.c ****             }
 131:Generated_Source\PSoC5/CyLib.c ****         }
 132:Generated_Source\PSoC5/CyLib.c **** 
 133:Generated_Source\PSoC5/CyLib.c ****         /* Restore 100 KHz ILO, FTW interval, enable and interrupt enable */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 6


 134:Generated_Source\PSoC5/CyLib.c ****         if(0u == iloEnableState)
 148              		.loc 1 134 0
 149 007c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 150 007e 002B     		cmp	r3, #0
 151 0080 01D1     		bne	.L6
 135:Generated_Source\PSoC5/CyLib.c ****         {
 136:Generated_Source\PSoC5/CyLib.c ****             CyILO_Stop100K();
 152              		.loc 1 136 0
 153 0082 FFF7FEFF 		bl	CyILO_Stop100K
 154              	.L6:
 137:Generated_Source\PSoC5/CyLib.c ****         }
 138:Generated_Source\PSoC5/CyLib.c **** 
 139:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_PM_TW_CFG0_REG = pmTwCfg0State;
 155              		.loc 1 139 0
 156 0086 074A     		ldr	r2, .L8+8
 157 0088 BB7A     		ldrb	r3, [r7, #10]
 158 008a 1370     		strb	r3, [r2]
 140:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_PM_TW_CFG2_REG = pmTwCfg2State;
 159              		.loc 1 140 0
 160 008c 064A     		ldr	r2, .L8+12
 161 008e 7B7A     		ldrb	r3, [r7, #9]
 162 0090 1370     		strb	r3, [r2]
 163              	.L2:
 141:Generated_Source\PSoC5/CyLib.c ****     }
 142:Generated_Source\PSoC5/CyLib.c **** 
 143:Generated_Source\PSoC5/CyLib.c ****     return(status);
 164              		.loc 1 143 0
 165 0092 FB68     		ldr	r3, [r7, #12]
 144:Generated_Source\PSoC5/CyLib.c **** }
 166              		.loc 1 144 0
 167 0094 1846     		mov	r0, r3
 168 0096 1037     		adds	r7, r7, #16
 169              		.cfi_def_cfa_offset 8
 170 0098 BD46     		mov	sp, r7
 171              		.cfi_def_cfa_register 13
 172              		@ sp needed
 173 009a 80BD     		pop	{r7, pc}
 174              	.L9:
 175              		.align	2
 176              	.L8:
 177 009c 20420040 		.word	1073758752
 178 00a0 00430040 		.word	1073758976
 179 00a4 80430040 		.word	1073759104
 180 00a8 82430040 		.word	1073759106
 181 00ac 25420040 		.word	1073758757
 182              		.cfi_endproc
 183              	.LFE0:
 184              		.size	CyPLL_OUT_Start, .-CyPLL_OUT_Start
 185              		.section	.text.CyPLL_OUT_Stop,"ax",%progbits
 186              		.align	2
 187              		.global	CyPLL_OUT_Stop
 188              		.thumb
 189              		.thumb_func
 190              		.type	CyPLL_OUT_Stop, %function
 191              	CyPLL_OUT_Stop:
 192              	.LFB1:
 145:Generated_Source\PSoC5/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 7


 146:Generated_Source\PSoC5/CyLib.c **** 
 147:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 148:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyPLL_OUT_Stop
 149:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 150:Generated_Source\PSoC5/CyLib.c **** *
 151:Generated_Source\PSoC5/CyLib.c **** *  Disables the PLL.
 152:Generated_Source\PSoC5/CyLib.c **** *
 153:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 154:Generated_Source\PSoC5/CyLib.c **** void CyPLL_OUT_Stop(void) 
 155:Generated_Source\PSoC5/CyLib.c **** {
 193              		.loc 1 155 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 1, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198 0000 80B4     		push	{r7}
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 7, -4
 201 0002 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 156:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_PLL_CFG0_REG &= ((uint8)(~CY_CLK_PLL_ENABLE));
 203              		.loc 1 156 0
 204 0004 054A     		ldr	r2, .L11
 205 0006 054B     		ldr	r3, .L11
 206 0008 1B78     		ldrb	r3, [r3]
 207 000a DBB2     		uxtb	r3, r3
 208 000c 23F00103 		bic	r3, r3, #1
 209 0010 DBB2     		uxtb	r3, r3
 210 0012 1370     		strb	r3, [r2]
 157:Generated_Source\PSoC5/CyLib.c **** }
 211              		.loc 1 157 0
 212 0014 BD46     		mov	sp, r7
 213              		.cfi_def_cfa_register 13
 214              		@ sp needed
 215 0016 5DF8047B 		ldr	r7, [sp], #4
 216              		.cfi_restore 7
 217              		.cfi_def_cfa_offset 0
 218 001a 7047     		bx	lr
 219              	.L12:
 220              		.align	2
 221              	.L11:
 222 001c 20420040 		.word	1073758752
 223              		.cfi_endproc
 224              	.LFE1:
 225              		.size	CyPLL_OUT_Stop, .-CyPLL_OUT_Stop
 226              		.section	.text.CyPLL_OUT_SetPQ,"ax",%progbits
 227              		.align	2
 228              		.global	CyPLL_OUT_SetPQ
 229              		.thumb
 230              		.thumb_func
 231              		.type	CyPLL_OUT_SetPQ, %function
 232              	CyPLL_OUT_SetPQ:
 233              	.LFB2:
 158:Generated_Source\PSoC5/CyLib.c **** 
 159:Generated_Source\PSoC5/CyLib.c **** 
 160:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 161:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyPLL_OUT_SetPQ
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 8


 162:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 163:Generated_Source\PSoC5/CyLib.c **** *
 164:Generated_Source\PSoC5/CyLib.c **** *  Sets the P and Q dividers and the charge pump current.
 165:Generated_Source\PSoC5/CyLib.c **** *  The Frequency Out will be P/Q * Frequency In.
 166:Generated_Source\PSoC5/CyLib.c **** *  The PLL must be disabled before calling this function.
 167:Generated_Source\PSoC5/CyLib.c **** *
 168:Generated_Source\PSoC5/CyLib.c **** *  \param uint8 pDiv:
 169:Generated_Source\PSoC5/CyLib.c **** *   Valid range [8 - 255].
 170:Generated_Source\PSoC5/CyLib.c **** *
 171:Generated_Source\PSoC5/CyLib.c **** *  \param uint8 qDiv:
 172:Generated_Source\PSoC5/CyLib.c **** *   Valid range [1 - 16]. Input Frequency / Q must be in range of 1 to 3 MHz.
 173:Generated_Source\PSoC5/CyLib.c **** 
 174:Generated_Source\PSoC5/CyLib.c **** *  \param uint8 current:
 175:Generated_Source\PSoC5/CyLib.c **** *   Valid range [1 - 7]. Charge pump current in uA. Refer to the device TRM and
 176:Generated_Source\PSoC5/CyLib.c **** *   datasheet for more information.
 177:Generated_Source\PSoC5/CyLib.c **** *
 178:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
 179:Generated_Source\PSoC5/CyLib.c **** *  If this function execution results in the CPU clock frequency increasing,
 180:Generated_Source\PSoC5/CyLib.c **** *  then the number of clock cycles the cache will wait before it samples data
 181:Generated_Source\PSoC5/CyLib.c **** *  coming back from the Flash must be adjusted by calling
 182:Generated_Source\PSoC5/CyLib.c **** *  CyFlash_SetWaitCycles() with an appropriate parameter. It can be optionally
 183:Generated_Source\PSoC5/CyLib.c **** *  called if the CPU clock frequency is lowered in order to improve the CPU
 184:Generated_Source\PSoC5/CyLib.c **** *  performance. See CyFlash_SetWaitCycles() description for more information.
 185:Generated_Source\PSoC5/CyLib.c **** *
 186:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 187:Generated_Source\PSoC5/CyLib.c **** void CyPLL_OUT_SetPQ(uint8 pDiv, uint8 qDiv, uint8 current) 
 188:Generated_Source\PSoC5/CyLib.c **** {
 234              		.loc 1 188 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 8
 237              		@ frame_needed = 1, uses_anonymous_args = 0
 238 0000 80B5     		push	{r7, lr}
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
 242 0002 82B0     		sub	sp, sp, #8
 243              		.cfi_def_cfa_offset 16
 244 0004 00AF     		add	r7, sp, #0
 245              		.cfi_def_cfa_register 7
 246 0006 0346     		mov	r3, r0
 247 0008 FB71     		strb	r3, [r7, #7]
 248 000a 0B46     		mov	r3, r1
 249 000c BB71     		strb	r3, [r7, #6]
 250 000e 1346     		mov	r3, r2
 251 0010 7B71     		strb	r3, [r7, #5]
 189:Generated_Source\PSoC5/CyLib.c ****     /* Halt CPU in debug mode if PLL is enabled */
 190:Generated_Source\PSoC5/CyLib.c ****     CYASSERT(0u == (CY_CLK_PLL_CFG0_REG & CY_CLK_PLL_ENABLE));
 252              		.loc 1 190 0
 253 0012 1B4B     		ldr	r3, .L17
 254 0014 1B78     		ldrb	r3, [r3]
 255 0016 DBB2     		uxtb	r3, r3
 256 0018 03F00103 		and	r3, r3, #1
 257 001c 002B     		cmp	r3, #0
 258 001e 02D0     		beq	.L14
 259              		.loc 1 190 0 is_stmt 0 discriminator 1
 260 0020 0020     		movs	r0, #0
 261 0022 FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 9


 262              	.L14:
 191:Generated_Source\PSoC5/CyLib.c **** 
 192:Generated_Source\PSoC5/CyLib.c ****     if((pDiv    >= CY_CLK_PLL_MIN_P_VALUE  ) &&
 263              		.loc 1 192 0 is_stmt 1
 264 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 265 0028 072B     		cmp	r3, #7
 266 002a 23D9     		bls	.L15
 267              		.loc 1 192 0 is_stmt 0 discriminator 1
 268 002c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 269 002e 102B     		cmp	r3, #16
 270 0030 20D8     		bhi	.L15
 193:Generated_Source\PSoC5/CyLib.c ****        (qDiv    <= CY_CLK_PLL_MAX_Q_VALUE  ) && (qDiv    >= CY_CLK_PLL_MIN_Q_VALUE  ) &&
 271              		.loc 1 193 0 is_stmt 1
 272 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 273 0034 002B     		cmp	r3, #0
 274 0036 1DD0     		beq	.L15
 275              		.loc 1 193 0 is_stmt 0 discriminator 1
 276 0038 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 277 003a 002B     		cmp	r3, #0
 278 003c 1AD0     		beq	.L15
 194:Generated_Source\PSoC5/CyLib.c ****        (current >= CY_CLK_PLL_MIN_CUR_VALUE) && (current <= CY_CLK_PLL_MAX_CUR_VALUE))
 279              		.loc 1 194 0 is_stmt 1
 280 003e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 281 0040 072B     		cmp	r3, #7
 282 0042 17D8     		bhi	.L15
 195:Generated_Source\PSoC5/CyLib.c ****     {
 196:Generated_Source\PSoC5/CyLib.c ****         /* Set new values */
 197:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_PLL_P_REG = pDiv;
 283              		.loc 1 197 0
 284 0044 0F4A     		ldr	r2, .L17+4
 285 0046 FB79     		ldrb	r3, [r7, #7]
 286 0048 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_PLL_Q_REG = ((uint8)(qDiv - 1u));
 287              		.loc 1 198 0
 288 004a 0F4A     		ldr	r2, .L17+8
 289 004c BB79     		ldrb	r3, [r7, #6]
 290 004e 013B     		subs	r3, r3, #1
 291 0050 DBB2     		uxtb	r3, r3
 292 0052 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_PLL_CFG1_REG = (CY_CLK_PLL_CFG1_REG & CY_CLK_PLL_CURRENT_MASK) |
 293              		.loc 1 199 0
 294 0054 0D49     		ldr	r1, .L17+12
 295 0056 0D4B     		ldr	r3, .L17+12
 296 0058 1B78     		ldrb	r3, [r3]
 297 005a DBB2     		uxtb	r3, r3
 298 005c 23F07003 		bic	r3, r3, #112
 299 0060 DAB2     		uxtb	r2, r3
 200:Generated_Source\PSoC5/CyLib.c ****                                 ((uint8)(((uint8)(current - 1u)) << CY_CLK_PLL_CURRENT_POSITION));
 300              		.loc 1 200 0
 301 0062 7B79     		ldrb	r3, [r7, #5]
 302 0064 013B     		subs	r3, r3, #1
 303 0066 DBB2     		uxtb	r3, r3
 304 0068 1B01     		lsls	r3, r3, #4
 305 006a DBB2     		uxtb	r3, r3
 199:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_PLL_CFG1_REG = (CY_CLK_PLL_CFG1_REG & CY_CLK_PLL_CURRENT_MASK) |
 306              		.loc 1 199 0
 307 006c 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 10


 308 006e DBB2     		uxtb	r3, r3
 309 0070 0B70     		strb	r3, [r1]
 310 0072 02E0     		b	.L13
 311              	.L15:
 201:Generated_Source\PSoC5/CyLib.c ****     }
 202:Generated_Source\PSoC5/CyLib.c ****     else
 203:Generated_Source\PSoC5/CyLib.c ****     {
 204:Generated_Source\PSoC5/CyLib.c ****         /***********************************************************************
 205:Generated_Source\PSoC5/CyLib.c ****         * Halt CPU in debug mode if:
 206:Generated_Source\PSoC5/CyLib.c ****         * - P divider is less than required
 207:Generated_Source\PSoC5/CyLib.c ****         * - Q divider is out of range
 208:Generated_Source\PSoC5/CyLib.c ****         * - pump current is out of range
 209:Generated_Source\PSoC5/CyLib.c ****         ***********************************************************************/
 210:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(0u != 0u);
 312              		.loc 1 210 0 discriminator 1
 313 0074 0020     		movs	r0, #0
 314 0076 FFF7FEFF 		bl	CyHalt
 315              	.L13:
 211:Generated_Source\PSoC5/CyLib.c ****     }
 212:Generated_Source\PSoC5/CyLib.c **** 
 213:Generated_Source\PSoC5/CyLib.c **** }
 316              		.loc 1 213 0
 317 007a 0837     		adds	r7, r7, #8
 318              		.cfi_def_cfa_offset 8
 319 007c BD46     		mov	sp, r7
 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 007e 80BD     		pop	{r7, pc}
 323              	.L18:
 324              		.align	2
 325              	.L17:
 326 0080 20420040 		.word	1073758752
 327 0084 22420040 		.word	1073758754
 328 0088 23420040 		.word	1073758755
 329 008c 21420040 		.word	1073758753
 330              		.cfi_endproc
 331              	.LFE2:
 332              		.size	CyPLL_OUT_SetPQ, .-CyPLL_OUT_SetPQ
 333              		.section	.text.CyPLL_OUT_SetSource,"ax",%progbits
 334              		.align	2
 335              		.global	CyPLL_OUT_SetSource
 336              		.thumb
 337              		.thumb_func
 338              		.type	CyPLL_OUT_SetSource, %function
 339              	CyPLL_OUT_SetSource:
 340              	.LFB3:
 214:Generated_Source\PSoC5/CyLib.c **** 
 215:Generated_Source\PSoC5/CyLib.c **** 
 216:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 217:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyPLL_OUT_SetSource
 218:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 219:Generated_Source\PSoC5/CyLib.c **** *
 220:Generated_Source\PSoC5/CyLib.c **** *  Sets the input clock source to the PLL. The PLL must be disabled before
 221:Generated_Source\PSoC5/CyLib.c **** *  calling this function.
 222:Generated_Source\PSoC5/CyLib.c **** *
 223:Generated_Source\PSoC5/CyLib.c **** *   \param source: One of the three available PLL clock sources
 224:Generated_Source\PSoC5/CyLib.c **** *    \param CY_PLL_SOURCE_IMO  :   IMO
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 11


 225:Generated_Source\PSoC5/CyLib.c **** *    \param CY_PLL_SOURCE_XTAL :   MHz Crystal
 226:Generated_Source\PSoC5/CyLib.c **** *    \param CY_PLL_SOURCE_DSI  :   DSI
 227:Generated_Source\PSoC5/CyLib.c **** *
 228:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
 229:Generated_Source\PSoC5/CyLib.c **** *  If this function execution results in the CPU clock frequency increasing,
 230:Generated_Source\PSoC5/CyLib.c **** *  then the number of clock cycles the cache will wait before it samples data
 231:Generated_Source\PSoC5/CyLib.c **** *  coming back from the3 Flash must be adjusted by calling
 232:Generated_Source\PSoC5/CyLib.c **** *  CyFlash_SetWaitCycles() with an appropriate parameter. It can be optionally
 233:Generated_Source\PSoC5/CyLib.c **** *  called if the CPU clock frequency is lowered in order to improve the CPU
 234:Generated_Source\PSoC5/CyLib.c **** *  performance. See CyFlash_SetWaitCycles() description for more information.
 235:Generated_Source\PSoC5/CyLib.c **** *
 236:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 237:Generated_Source\PSoC5/CyLib.c **** void CyPLL_OUT_SetSource(uint8 source) 
 238:Generated_Source\PSoC5/CyLib.c **** {
 341              		.loc 1 238 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 8
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0000 80B5     		push	{r7, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
 349 0002 82B0     		sub	sp, sp, #8
 350              		.cfi_def_cfa_offset 16
 351 0004 00AF     		add	r7, sp, #0
 352              		.cfi_def_cfa_register 7
 353 0006 0346     		mov	r3, r0
 354 0008 FB71     		strb	r3, [r7, #7]
 239:Generated_Source\PSoC5/CyLib.c ****     /* Halt CPU in debug mode if PLL is enabled */
 240:Generated_Source\PSoC5/CyLib.c ****     CYASSERT(0u == (CY_CLK_PLL_CFG0_REG & CY_CLK_PLL_ENABLE));
 355              		.loc 1 240 0
 356 000a 114B     		ldr	r3, .L24
 357 000c 1B78     		ldrb	r3, [r3]
 358 000e DBB2     		uxtb	r3, r3
 359 0010 03F00103 		and	r3, r3, #1
 360 0014 002B     		cmp	r3, #0
 361 0016 02D0     		beq	.L20
 362              		.loc 1 240 0 is_stmt 0 discriminator 1
 363 0018 0020     		movs	r0, #0
 364 001a FFF7FEFF 		bl	CyHalt
 365              	.L20:
 241:Generated_Source\PSoC5/CyLib.c **** 
 242:Generated_Source\PSoC5/CyLib.c ****     switch(source)
 366              		.loc 1 242 0 is_stmt 1
 367 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 368 0020 0033     		adds	r3, r3, #0
 369 0022 022B     		cmp	r3, #2
 370 0024 0DD8     		bhi	.L21
 243:Generated_Source\PSoC5/CyLib.c ****     {
 244:Generated_Source\PSoC5/CyLib.c ****         case CY_PLL_SOURCE_IMO:
 245:Generated_Source\PSoC5/CyLib.c ****         case CY_PLL_SOURCE_XTAL:
 246:Generated_Source\PSoC5/CyLib.c ****         case CY_PLL_SOURCE_DSI:
 247:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_CLKDIST_CR_REG = ((CY_LIB_CLKDIST_CR_REG & CY_LIB_CLKDIST_CR_PLL_SCR_MASK) | sou
 371              		.loc 1 247 0
 372 0026 4FF04021 		mov	r1, #1073758208
 373 002a 4FF04023 		mov	r3, #1073758208
 374 002e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 12


 375 0030 DBB2     		uxtb	r3, r3
 376 0032 23F00303 		bic	r3, r3, #3
 377 0036 DAB2     		uxtb	r2, r3
 378 0038 FB79     		ldrb	r3, [r7, #7]
 379 003a 1343     		orrs	r3, r3, r2
 380 003c DBB2     		uxtb	r3, r3
 381 003e 0B70     		strb	r3, [r1]
 248:Generated_Source\PSoC5/CyLib.c ****         break;
 382              		.loc 1 248 0
 383 0040 03E0     		b	.L19
 384              	.L21:
 249:Generated_Source\PSoC5/CyLib.c **** 
 250:Generated_Source\PSoC5/CyLib.c ****         default:
 251:Generated_Source\PSoC5/CyLib.c ****             CYASSERT(0u != 0u);
 385              		.loc 1 251 0
 386 0042 0020     		movs	r0, #0
 387 0044 FFF7FEFF 		bl	CyHalt
 252:Generated_Source\PSoC5/CyLib.c ****         break;
 388              		.loc 1 252 0
 389 0048 00BF     		nop
 390              	.L19:
 253:Generated_Source\PSoC5/CyLib.c ****     }
 254:Generated_Source\PSoC5/CyLib.c **** }
 391              		.loc 1 254 0
 392 004a 0837     		adds	r7, r7, #8
 393              		.cfi_def_cfa_offset 8
 394 004c BD46     		mov	sp, r7
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 004e 80BD     		pop	{r7, pc}
 398              	.L25:
 399              		.align	2
 400              	.L24:
 401 0050 20420040 		.word	1073758752
 402              		.cfi_endproc
 403              	.LFE3:
 404              		.size	CyPLL_OUT_SetSource, .-CyPLL_OUT_SetSource
 405              		.section	.text.CyIMO_Start,"ax",%progbits
 406              		.align	2
 407              		.global	CyIMO_Start
 408              		.thumb
 409              		.thumb_func
 410              		.type	CyIMO_Start, %function
 411              	CyIMO_Start:
 412              	.LFB4:
 255:Generated_Source\PSoC5/CyLib.c **** 
 256:Generated_Source\PSoC5/CyLib.c **** 
 257:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 258:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyIMO_Start
 259:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 260:Generated_Source\PSoC5/CyLib.c **** *
 261:Generated_Source\PSoC5/CyLib.c **** *  Enables the IMO. Optionally waits at least 6 us for it to settle.
 262:Generated_Source\PSoC5/CyLib.c **** *
 263:Generated_Source\PSoC5/CyLib.c **** *  \param uint8 wait:
 264:Generated_Source\PSoC5/CyLib.c **** *   \param 0: Return immediately after configuration
 265:Generated_Source\PSoC5/CyLib.c **** *   \param 1: Wait for at least 6 us for the IMO to settle.
 266:Generated_Source\PSoC5/CyLib.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 13


 267:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
 268:Generated_Source\PSoC5/CyLib.c **** *  If wait is enabled: This function uses the Fast Time Wheel to time the wait.
 269:Generated_Source\PSoC5/CyLib.c **** *  Any other use of the Fast Time Wheel will be stopped during the period of
 270:Generated_Source\PSoC5/CyLib.c **** *  this function and then restored. This function also uses the 100 KHz ILO.
 271:Generated_Source\PSoC5/CyLib.c **** *  If not enabled, this function will enable the 100 KHz ILO for the period of
 272:Generated_Source\PSoC5/CyLib.c **** *  this function.
 273:Generated_Source\PSoC5/CyLib.c **** *
 274:Generated_Source\PSoC5/CyLib.c **** *  No changes to the setup of the ILO, Fast Time Wheel, Central Time Wheel or
 275:Generated_Source\PSoC5/CyLib.c **** *  Once Per Second interrupt may be made by interrupt routines during the period
 276:Generated_Source\PSoC5/CyLib.c **** *  of this function execution. The current operation of the ILO, Central Time
 277:Generated_Source\PSoC5/CyLib.c **** *  Wheel and Once Per Second interrupt are maintained during the operation of
 278:Generated_Source\PSoC5/CyLib.c **** *  this function provided the reading of the Power Manager Interrupt Status
 279:Generated_Source\PSoC5/CyLib.c **** *  Register is only done using the CyPmReadStatus() function.
 280:Generated_Source\PSoC5/CyLib.c **** *
 281:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 282:Generated_Source\PSoC5/CyLib.c **** void CyIMO_Start(uint8 wait) 
 283:Generated_Source\PSoC5/CyLib.c **** {
 413              		.loc 1 283 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 16
 416              		@ frame_needed = 1, uses_anonymous_args = 0
 417 0000 80B5     		push	{r7, lr}
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 7, -8
 420              		.cfi_offset 14, -4
 421 0002 84B0     		sub	sp, sp, #16
 422              		.cfi_def_cfa_offset 24
 423 0004 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 425 0006 0346     		mov	r3, r0
 426 0008 FB71     		strb	r3, [r7, #7]
 284:Generated_Source\PSoC5/CyLib.c ****     uint8 pmFtwCfg2Reg;
 285:Generated_Source\PSoC5/CyLib.c ****     uint8 pmFtwCfg0Reg;
 286:Generated_Source\PSoC5/CyLib.c ****     uint8 ilo100KhzEnable;
 287:Generated_Source\PSoC5/CyLib.c **** 
 288:Generated_Source\PSoC5/CyLib.c **** 
 289:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_PM_ACT_CFG0_REG  |= CY_LIB_PM_ACT_CFG0_IMO_EN;
 427              		.loc 1 289 0
 428 000a 1D4A     		ldr	r2, .L30
 429 000c 1C4B     		ldr	r3, .L30
 430 000e 1B78     		ldrb	r3, [r3]
 431 0010 DBB2     		uxtb	r3, r3
 432 0012 43F01003 		orr	r3, r3, #16
 433 0016 DBB2     		uxtb	r3, r3
 434 0018 1370     		strb	r3, [r2]
 290:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_PM_STBY_CFG0_REG |= CY_LIB_PM_STBY_CFG0_IMO_EN;
 435              		.loc 1 290 0
 436 001a 1A4A     		ldr	r2, .L30+4
 437 001c 194B     		ldr	r3, .L30+4
 438 001e 1B78     		ldrb	r3, [r3]
 439 0020 DBB2     		uxtb	r3, r3
 440 0022 43F01003 		orr	r3, r3, #16
 441 0026 DBB2     		uxtb	r3, r3
 442 0028 1370     		strb	r3, [r2]
 291:Generated_Source\PSoC5/CyLib.c **** 
 292:Generated_Source\PSoC5/CyLib.c ****     if(0u != wait)
 443              		.loc 1 292 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 14


 444 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 445 002c 002B     		cmp	r3, #0
 446 002e 23D0     		beq	.L26
 293:Generated_Source\PSoC5/CyLib.c ****     {
 294:Generated_Source\PSoC5/CyLib.c ****         /* Need to turn on 100KHz ILO if it happens to not already be running.*/
 295:Generated_Source\PSoC5/CyLib.c ****         ilo100KhzEnable = CY_LIB_SLOWCLK_ILO_CR0_REG & CY_LIB_SLOWCLK_ILO_CR0_EN_100KHZ;
 447              		.loc 1 295 0
 448 0030 154B     		ldr	r3, .L30+8
 449 0032 1B78     		ldrb	r3, [r3]
 450 0034 DBB2     		uxtb	r3, r3
 451 0036 03F00403 		and	r3, r3, #4
 452 003a FB73     		strb	r3, [r7, #15]
 296:Generated_Source\PSoC5/CyLib.c ****         pmFtwCfg0Reg = CY_LIB_PM_TW_CFG0_REG;
 453              		.loc 1 296 0
 454 003c 134B     		ldr	r3, .L30+12
 455 003e 1B78     		ldrb	r3, [r3]
 456 0040 BB73     		strb	r3, [r7, #14]
 297:Generated_Source\PSoC5/CyLib.c ****         pmFtwCfg2Reg = CY_LIB_PM_TW_CFG2_REG;
 457              		.loc 1 297 0
 458 0042 134B     		ldr	r3, .L30+16
 459 0044 1B78     		ldrb	r3, [r3]
 460 0046 7B73     		strb	r3, [r7, #13]
 298:Generated_Source\PSoC5/CyLib.c **** 
 299:Generated_Source\PSoC5/CyLib.c ****         CyPmFtwSetInterval(CY_LIB_CLK_IMO_FTW_TIMEOUT);
 461              		.loc 1 299 0
 462 0048 0020     		movs	r0, #0
 463 004a FFF7FEFF 		bl	CyPmFtwSetInterval
 300:Generated_Source\PSoC5/CyLib.c **** 
 301:Generated_Source\PSoC5/CyLib.c ****         while (0u == (CY_PM_FTW_INT & CyPmReadStatus(CY_PM_FTW_INT)))
 464              		.loc 1 301 0
 465 004e 00BF     		nop
 466              	.L28:
 467              		.loc 1 301 0 is_stmt 0 discriminator 1
 468 0050 0120     		movs	r0, #1
 469 0052 FFF7FEFF 		bl	CyPmReadStatus
 470 0056 0346     		mov	r3, r0
 471 0058 03F00103 		and	r3, r3, #1
 472 005c DBB2     		uxtb	r3, r3
 473 005e 002B     		cmp	r3, #0
 474 0060 F6D0     		beq	.L28
 302:Generated_Source\PSoC5/CyLib.c ****         {
 303:Generated_Source\PSoC5/CyLib.c ****             /* Wait for interrupt status */
 304:Generated_Source\PSoC5/CyLib.c ****         }
 305:Generated_Source\PSoC5/CyLib.c **** 
 306:Generated_Source\PSoC5/CyLib.c ****         if(0u == ilo100KhzEnable)
 475              		.loc 1 306 0 is_stmt 1
 476 0062 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 477 0064 002B     		cmp	r3, #0
 478 0066 01D1     		bne	.L29
 307:Generated_Source\PSoC5/CyLib.c ****         {
 308:Generated_Source\PSoC5/CyLib.c ****             CyILO_Stop100K();
 479              		.loc 1 308 0
 480 0068 FFF7FEFF 		bl	CyILO_Stop100K
 481              	.L29:
 309:Generated_Source\PSoC5/CyLib.c ****         }
 310:Generated_Source\PSoC5/CyLib.c **** 
 311:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_PM_TW_CFG0_REG = pmFtwCfg0Reg;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 15


 482              		.loc 1 311 0
 483 006c 074A     		ldr	r2, .L30+12
 484 006e BB7B     		ldrb	r3, [r7, #14]
 485 0070 1370     		strb	r3, [r2]
 312:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_PM_TW_CFG2_REG = pmFtwCfg2Reg;
 486              		.loc 1 312 0
 487 0072 074A     		ldr	r2, .L30+16
 488 0074 7B7B     		ldrb	r3, [r7, #13]
 489 0076 1370     		strb	r3, [r2]
 490              	.L26:
 313:Generated_Source\PSoC5/CyLib.c ****     }
 314:Generated_Source\PSoC5/CyLib.c **** }
 491              		.loc 1 314 0
 492 0078 1037     		adds	r7, r7, #16
 493              		.cfi_def_cfa_offset 8
 494 007a BD46     		mov	sp, r7
 495              		.cfi_def_cfa_register 13
 496              		@ sp needed
 497 007c 80BD     		pop	{r7, pc}
 498              	.L31:
 499 007e 00BF     		.align	2
 500              	.L30:
 501 0080 A0430040 		.word	1073759136
 502 0084 B0430040 		.word	1073759152
 503 0088 00430040 		.word	1073758976
 504 008c 80430040 		.word	1073759104
 505 0090 82430040 		.word	1073759106
 506              		.cfi_endproc
 507              	.LFE4:
 508              		.size	CyIMO_Start, .-CyIMO_Start
 509              		.section	.text.CyIMO_Stop,"ax",%progbits
 510              		.align	2
 511              		.global	CyIMO_Stop
 512              		.thumb
 513              		.thumb_func
 514              		.type	CyIMO_Stop, %function
 515              	CyIMO_Stop:
 516              	.LFB5:
 315:Generated_Source\PSoC5/CyLib.c **** 
 316:Generated_Source\PSoC5/CyLib.c **** 
 317:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 318:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyIMO_Stop
 319:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 320:Generated_Source\PSoC5/CyLib.c **** *
 321:Generated_Source\PSoC5/CyLib.c **** *   Disables the IMO.
 322:Generated_Source\PSoC5/CyLib.c **** *
 323:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 324:Generated_Source\PSoC5/CyLib.c **** void CyIMO_Stop(void) 
 325:Generated_Source\PSoC5/CyLib.c **** {
 517              		.loc 1 325 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522 0000 80B4     		push	{r7}
 523              		.cfi_def_cfa_offset 4
 524              		.cfi_offset 7, -4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 16


 525 0002 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 326:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_PM_ACT_CFG0_REG  &= ((uint8) (~CY_LIB_PM_ACT_CFG0_IMO_EN));
 527              		.loc 1 326 0
 528 0004 094A     		ldr	r2, .L33
 529 0006 094B     		ldr	r3, .L33
 530 0008 1B78     		ldrb	r3, [r3]
 531 000a DBB2     		uxtb	r3, r3
 532 000c 23F01003 		bic	r3, r3, #16
 533 0010 DBB2     		uxtb	r3, r3
 534 0012 1370     		strb	r3, [r2]
 327:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_PM_STBY_CFG0_REG &= ((uint8) (~CY_LIB_PM_STBY_CFG0_IMO_EN));
 535              		.loc 1 327 0
 536 0014 064A     		ldr	r2, .L33+4
 537 0016 064B     		ldr	r3, .L33+4
 538 0018 1B78     		ldrb	r3, [r3]
 539 001a DBB2     		uxtb	r3, r3
 540 001c 23F01003 		bic	r3, r3, #16
 541 0020 DBB2     		uxtb	r3, r3
 542 0022 1370     		strb	r3, [r2]
 328:Generated_Source\PSoC5/CyLib.c **** }
 543              		.loc 1 328 0
 544 0024 BD46     		mov	sp, r7
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 0026 5DF8047B 		ldr	r7, [sp], #4
 548              		.cfi_restore 7
 549              		.cfi_def_cfa_offset 0
 550 002a 7047     		bx	lr
 551              	.L34:
 552              		.align	2
 553              	.L33:
 554 002c A0430040 		.word	1073759136
 555 0030 B0430040 		.word	1073759152
 556              		.cfi_endproc
 557              	.LFE5:
 558              		.size	CyIMO_Stop, .-CyIMO_Stop
 559              		.section	.text.CyUSB_PowerOnCheck,"ax",%progbits
 560              		.align	2
 561              		.thumb
 562              		.thumb_func
 563              		.type	CyUSB_PowerOnCheck, %function
 564              	CyUSB_PowerOnCheck:
 565              	.LFB6:
 329:Generated_Source\PSoC5/CyLib.c **** 
 330:Generated_Source\PSoC5/CyLib.c **** 
 331:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 332:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyUSB_PowerOnCheck
 333:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 334:Generated_Source\PSoC5/CyLib.c **** *
 335:Generated_Source\PSoC5/CyLib.c **** *  Returns the USB power status value. A private function to cy_boot.
 336:Generated_Source\PSoC5/CyLib.c **** *
 337:Generated_Source\PSoC5/CyLib.c **** * \return
 338:Generated_Source\PSoC5/CyLib.c **** *   uint8: one if the USB is enabled, 0 if not enabled.
 339:Generated_Source\PSoC5/CyLib.c **** *
 340:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 341:Generated_Source\PSoC5/CyLib.c **** static uint8 CyUSB_PowerOnCheck(void)  
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 17


 342:Generated_Source\PSoC5/CyLib.c **** {
 566              		.loc 1 342 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 8
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571 0000 80B4     		push	{r7}
 572              		.cfi_def_cfa_offset 4
 573              		.cfi_offset 7, -4
 574 0002 83B0     		sub	sp, sp, #12
 575              		.cfi_def_cfa_offset 16
 576 0004 00AF     		add	r7, sp, #0
 577              		.cfi_def_cfa_register 7
 343:Generated_Source\PSoC5/CyLib.c ****     uint8 poweredOn = 0u;
 578              		.loc 1 343 0
 579 0006 0023     		movs	r3, #0
 580 0008 FB71     		strb	r3, [r7, #7]
 344:Generated_Source\PSoC5/CyLib.c **** 
 345:Generated_Source\PSoC5/CyLib.c ****     /* Check whether device is in Active or AltActive and if USB is powered on */
 346:Generated_Source\PSoC5/CyLib.c ****     if((((CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_MASK) == CY_PM_MODE_CSR_ACTIVE ) &&
 581              		.loc 1 346 0
 582 000a 124B     		ldr	r3, .L40
 583 000c 1B78     		ldrb	r3, [r3]
 584 000e DBB2     		uxtb	r3, r3
 585 0010 03F00703 		and	r3, r3, #7
 586 0014 002B     		cmp	r3, #0
 587 0016 06D1     		bne	.L36
 347:Generated_Source\PSoC5/CyLib.c ****        (0u != (CY_LIB_PM_ACT_CFG5_REG & CY_ACT_USB_ENABLED     )))  ||
 588              		.loc 1 347 0 discriminator 1
 589 0018 0F4B     		ldr	r3, .L40+4
 590 001a 1B78     		ldrb	r3, [r3]
 591 001c DBB2     		uxtb	r3, r3
 592 001e 03F00103 		and	r3, r3, #1
 346:Generated_Source\PSoC5/CyLib.c ****        (0u != (CY_LIB_PM_ACT_CFG5_REG & CY_ACT_USB_ENABLED     )))  ||
 593              		.loc 1 346 0 discriminator 1
 594 0022 002B     		cmp	r3, #0
 595 0024 0DD1     		bne	.L37
 596              	.L36:
 348:Generated_Source\PSoC5/CyLib.c ****        (((CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_MASK) == CY_PM_MODE_CSR_ALT_ACT) &&
 597              		.loc 1 348 0
 598 0026 0B4B     		ldr	r3, .L40
 599 0028 1B78     		ldrb	r3, [r3]
 600 002a DBB2     		uxtb	r3, r3
 601 002c 03F00703 		and	r3, r3, #7
 347:Generated_Source\PSoC5/CyLib.c ****        (0u != (CY_LIB_PM_ACT_CFG5_REG & CY_ACT_USB_ENABLED     )))  ||
 602              		.loc 1 347 0
 603 0030 012B     		cmp	r3, #1
 604 0032 08D1     		bne	.L38
 349:Generated_Source\PSoC5/CyLib.c ****        (0u != (CY_LIB_PM_STBY_CFG5_REG & CY_ALT_ACT_USB_ENABLED))))
 605              		.loc 1 349 0
 606 0034 094B     		ldr	r3, .L40+8
 607 0036 1B78     		ldrb	r3, [r3]
 608 0038 DBB2     		uxtb	r3, r3
 609 003a 03F00103 		and	r3, r3, #1
 348:Generated_Source\PSoC5/CyLib.c ****        (((CY_PM_MODE_CSR_REG & CY_PM_MODE_CSR_MASK) == CY_PM_MODE_CSR_ALT_ACT) &&
 610              		.loc 1 348 0
 611 003e 002B     		cmp	r3, #0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 18


 612 0040 01D0     		beq	.L38
 613              	.L37:
 350:Generated_Source\PSoC5/CyLib.c ****     {
 351:Generated_Source\PSoC5/CyLib.c ****         poweredOn = 1u;
 614              		.loc 1 351 0
 615 0042 0123     		movs	r3, #1
 616 0044 FB71     		strb	r3, [r7, #7]
 617              	.L38:
 352:Generated_Source\PSoC5/CyLib.c ****     }
 353:Generated_Source\PSoC5/CyLib.c **** 
 354:Generated_Source\PSoC5/CyLib.c ****     return (poweredOn);
 618              		.loc 1 354 0
 619 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 355:Generated_Source\PSoC5/CyLib.c **** }
 620              		.loc 1 355 0
 621 0048 1846     		mov	r0, r3
 622 004a 0C37     		adds	r7, r7, #12
 623              		.cfi_def_cfa_offset 4
 624 004c BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 004e 5DF8047B 		ldr	r7, [sp], #4
 628              		.cfi_restore 7
 629              		.cfi_def_cfa_offset 0
 630 0052 7047     		bx	lr
 631              	.L41:
 632              		.align	2
 633              	.L40:
 634 0054 93430040 		.word	1073759123
 635 0058 A5430040 		.word	1073759141
 636 005c B5430040 		.word	1073759157
 637              		.cfi_endproc
 638              	.LFE6:
 639              		.size	CyUSB_PowerOnCheck, .-CyUSB_PowerOnCheck
 640              		.section	.text.CyIMO_SetTrimValue,"ax",%progbits
 641              		.align	2
 642              		.thumb
 643              		.thumb_func
 644              		.type	CyIMO_SetTrimValue, %function
 645              	CyIMO_SetTrimValue:
 646              	.LFB7:
 356:Generated_Source\PSoC5/CyLib.c **** 
 357:Generated_Source\PSoC5/CyLib.c **** 
 358:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 359:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyIMO_SetTrimValue
 360:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 361:Generated_Source\PSoC5/CyLib.c **** *
 362:Generated_Source\PSoC5/CyLib.c **** *  Sets the IMO factory trim values.
 363:Generated_Source\PSoC5/CyLib.c **** *
 364:Generated_Source\PSoC5/CyLib.c **** *  uint8 freq - frequency for which trims must be set
 365:Generated_Source\PSoC5/CyLib.c **** *
 366:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/CyLib.c **** static void CyIMO_SetTrimValue(uint8 freq) 
 368:Generated_Source\PSoC5/CyLib.c **** {
 647              		.loc 1 368 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 19


 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651 0000 80B5     		push	{r7, lr}
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 7, -8
 654              		.cfi_offset 14, -4
 655 0002 84B0     		sub	sp, sp, #16
 656              		.cfi_def_cfa_offset 24
 657 0004 00AF     		add	r7, sp, #0
 658              		.cfi_def_cfa_register 7
 659 0006 0346     		mov	r3, r0
 660 0008 FB71     		strb	r3, [r7, #7]
 369:Generated_Source\PSoC5/CyLib.c ****     uint8 usbPowerOn = CyUSB_PowerOnCheck();
 661              		.loc 1 369 0
 662 000a FFF7FEFF 		bl	CyUSB_PowerOnCheck
 663 000e 0346     		mov	r3, r0
 664 0010 FB73     		strb	r3, [r7, #15]
 370:Generated_Source\PSoC5/CyLib.c **** 
 371:Generated_Source\PSoC5/CyLib.c ****     /* If USB is powered */
 372:Generated_Source\PSoC5/CyLib.c ****     if(usbPowerOn == 1u)
 665              		.loc 1 372 0
 666 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 667 0014 012B     		cmp	r3, #1
 668 0016 07D1     		bne	.L43
 373:Generated_Source\PSoC5/CyLib.c ****     {
 374:Generated_Source\PSoC5/CyLib.c ****         /* Unlock USB write */
 375:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_USB_CR1_REG &= ((uint8)(~CY_LIB_USB_CLK_EN));
 669              		.loc 1 375 0
 670 0018 314A     		ldr	r2, .L56
 671 001a 314B     		ldr	r3, .L56
 672 001c 1B78     		ldrb	r3, [r3]
 673 001e DBB2     		uxtb	r3, r3
 674 0020 23F00203 		bic	r3, r3, #2
 675 0024 DBB2     		uxtb	r3, r3
 676 0026 1370     		strb	r3, [r2]
 677              	.L43:
 376:Generated_Source\PSoC5/CyLib.c ****     }
 377:Generated_Source\PSoC5/CyLib.c ****     switch(freq)
 678              		.loc 1 377 0
 679 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 680 002a 082B     		cmp	r3, #8
 681 002c 50D8     		bhi	.L44
 682 002e 01A2     		adr	r2, .L46
 683 0030 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 684              		.p2align 2
 685              	.L46:
 686 0034 59000000 		.word	.L45+1
 687 0038 65000000 		.word	.L47+1
 688 003c 71000000 		.word	.L48+1
 689 0040 7D000000 		.word	.L49+1
 690 0044 89000000 		.word	.L50+1
 691 0048 95000000 		.word	.L51+1
 692 004c A1000000 		.word	.L52+1
 693 0050 D1000000 		.word	.L44+1
 694 0054 AD000000 		.word	.L53+1
 695              		.p2align 1
 696              	.L45:
 378:Generated_Source\PSoC5/CyLib.c ****     {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 20


 379:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_3MHZ:
 380:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_IMO_TR1_REG = CY_GET_XTND_REG8(CY_LIB_TRIM_IMO_3MHZ_PTR);
 697              		.loc 1 380 0
 698 0058 224B     		ldr	r3, .L56+4
 699 005a 234A     		ldr	r2, .L56+8
 700 005c 1278     		ldrb	r2, [r2]
 701 005e D2B2     		uxtb	r2, r2
 702 0060 1A70     		strb	r2, [r3]
 381:Generated_Source\PSoC5/CyLib.c ****         break;
 703              		.loc 1 381 0
 704 0062 39E0     		b	.L42
 705              	.L47:
 382:Generated_Source\PSoC5/CyLib.c **** 
 383:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_6MHZ:
 384:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_IMO_TR1_REG = CY_GET_XTND_REG8(CY_LIB_TRIM_IMO_6MHZ_PTR);
 706              		.loc 1 384 0
 707 0064 1F4B     		ldr	r3, .L56+4
 708 0066 214A     		ldr	r2, .L56+12
 709 0068 1278     		ldrb	r2, [r2]
 710 006a D2B2     		uxtb	r2, r2
 711 006c 1A70     		strb	r2, [r3]
 385:Generated_Source\PSoC5/CyLib.c ****         break;
 712              		.loc 1 385 0
 713 006e 33E0     		b	.L42
 714              	.L48:
 386:Generated_Source\PSoC5/CyLib.c **** 
 387:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_12MHZ:
 388:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_IMO_TR1_REG = CY_GET_XTND_REG8(CY_LIB_TRIM_IMO_12MHZ_PTR);
 715              		.loc 1 388 0
 716 0070 1C4B     		ldr	r3, .L56+4
 717 0072 1F4A     		ldr	r2, .L56+16
 718 0074 1278     		ldrb	r2, [r2]
 719 0076 D2B2     		uxtb	r2, r2
 720 0078 1A70     		strb	r2, [r3]
 389:Generated_Source\PSoC5/CyLib.c ****         break;
 721              		.loc 1 389 0
 722 007a 2DE0     		b	.L42
 723              	.L49:
 390:Generated_Source\PSoC5/CyLib.c **** 
 391:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_24MHZ:
 392:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_IMO_TR1_REG = CY_GET_XTND_REG8(CY_LIB_TRIM_IMO_24MHZ_PTR);
 724              		.loc 1 392 0
 725 007c 194B     		ldr	r3, .L56+4
 726 007e 1D4A     		ldr	r2, .L56+20
 727 0080 1278     		ldrb	r2, [r2]
 728 0082 D2B2     		uxtb	r2, r2
 729 0084 1A70     		strb	r2, [r3]
 393:Generated_Source\PSoC5/CyLib.c ****         break;
 730              		.loc 1 393 0
 731 0086 27E0     		b	.L42
 732              	.L50:
 394:Generated_Source\PSoC5/CyLib.c **** 
 395:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_48MHZ:
 396:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_IMO_TR1_REG = CY_GET_XTND_REG8(CY_LIB_TRIM_IMO_TR1_PTR);
 733              		.loc 1 396 0
 734 0088 164B     		ldr	r3, .L56+4
 735 008a 1B4A     		ldr	r2, .L56+24
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 21


 736 008c 1278     		ldrb	r2, [r2]
 737 008e D2B2     		uxtb	r2, r2
 738 0090 1A70     		strb	r2, [r3]
 397:Generated_Source\PSoC5/CyLib.c ****         break;
 739              		.loc 1 397 0
 740 0092 21E0     		b	.L42
 741              	.L51:
 398:Generated_Source\PSoC5/CyLib.c **** 
 399:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_62MHZ:
 400:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_IMO_TR1_REG = CY_GET_XTND_REG8(CY_LIB_TRIM_IMO_67MHZ_PTR);
 742              		.loc 1 400 0
 743 0094 134B     		ldr	r3, .L56+4
 744 0096 194A     		ldr	r2, .L56+28
 745 0098 1278     		ldrb	r2, [r2]
 746 009a D2B2     		uxtb	r2, r2
 747 009c 1A70     		strb	r2, [r3]
 401:Generated_Source\PSoC5/CyLib.c ****         break;
 748              		.loc 1 401 0
 749 009e 1BE0     		b	.L42
 750              	.L52:
 402:Generated_Source\PSoC5/CyLib.c **** 
 403:Generated_Source\PSoC5/CyLib.c **** #if(CY_PSOC5)
 404:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_74MHZ:
 405:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_IMO_TR1_REG = CY_GET_XTND_REG8(CY_LIB_TRIM_IMO_80MHZ_PTR);
 751              		.loc 1 405 0
 752 00a0 104B     		ldr	r3, .L56+4
 753 00a2 174A     		ldr	r2, .L56+32
 754 00a4 1278     		ldrb	r2, [r2]
 755 00a6 D2B2     		uxtb	r2, r2
 756 00a8 1A70     		strb	r2, [r3]
 406:Generated_Source\PSoC5/CyLib.c ****         break;
 757              		.loc 1 406 0
 758 00aa 15E0     		b	.L42
 759              	.L53:
 407:Generated_Source\PSoC5/CyLib.c **** #endif  /* (CY_PSOC5) */
 408:Generated_Source\PSoC5/CyLib.c **** 
 409:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_USB:
 410:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_IMO_TR1_REG = CY_GET_XTND_REG8(CY_LIB_TRIM_IMO_USB_PTR);
 760              		.loc 1 410 0
 761 00ac 0D4B     		ldr	r3, .L56+4
 762 00ae 154A     		ldr	r2, .L56+36
 763 00b0 1278     		ldrb	r2, [r2]
 764 00b2 D2B2     		uxtb	r2, r2
 765 00b4 1A70     		strb	r2, [r3]
 411:Generated_Source\PSoC5/CyLib.c **** 
 412:Generated_Source\PSoC5/CyLib.c ****         /* If USB is powered */
 413:Generated_Source\PSoC5/CyLib.c ****         if(usbPowerOn == 1u)
 766              		.loc 1 413 0
 767 00b6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 768 00b8 012B     		cmp	r3, #1
 769 00ba 08D1     		bne	.L55
 414:Generated_Source\PSoC5/CyLib.c ****         {
 415:Generated_Source\PSoC5/CyLib.c ****             /* Lock USB Oscillator */
 416:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_USB_CR1_REG |= CY_LIB_USB_CLK_EN;
 770              		.loc 1 416 0
 771 00bc 084A     		ldr	r2, .L56
 772 00be 084B     		ldr	r3, .L56
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 22


 773 00c0 1B78     		ldrb	r3, [r3]
 774 00c2 DBB2     		uxtb	r3, r3
 775 00c4 43F00203 		orr	r3, r3, #2
 776 00c8 DBB2     		uxtb	r3, r3
 777 00ca 1370     		strb	r3, [r2]
 417:Generated_Source\PSoC5/CyLib.c ****         }
 418:Generated_Source\PSoC5/CyLib.c ****         break;
 778              		.loc 1 418 0
 779 00cc 04E0     		b	.L42
 780              	.L55:
 781 00ce 03E0     		b	.L42
 782              	.L44:
 419:Generated_Source\PSoC5/CyLib.c **** 
 420:Generated_Source\PSoC5/CyLib.c ****     default:
 421:Generated_Source\PSoC5/CyLib.c ****             CYASSERT(0u != 0u);
 783              		.loc 1 421 0
 784 00d0 0020     		movs	r0, #0
 785 00d2 FFF7FEFF 		bl	CyHalt
 422:Generated_Source\PSoC5/CyLib.c ****         break;
 786              		.loc 1 422 0
 787 00d6 00BF     		nop
 788              	.L42:
 423:Generated_Source\PSoC5/CyLib.c ****     }
 424:Generated_Source\PSoC5/CyLib.c **** 
 425:Generated_Source\PSoC5/CyLib.c **** }
 789              		.loc 1 425 0
 790 00d8 1037     		adds	r7, r7, #16
 791              		.cfi_def_cfa_offset 8
 792 00da BD46     		mov	sp, r7
 793              		.cfi_def_cfa_register 13
 794              		@ sp needed
 795 00dc 80BD     		pop	{r7, pc}
 796              	.L57:
 797 00de 00BF     		.align	2
 798              	.L56:
 799 00e0 09600040 		.word	1073766409
 800 00e4 A1460040 		.word	1073759905
 801 00e8 08010049 		.word	1224737032
 802 00ec 09010049 		.word	1224737033
 803 00f0 0A010049 		.word	1224737034
 804 00f4 0B010049 		.word	1224737035
 805 00f8 89010049 		.word	1224737161
 806 00fc 0C010049 		.word	1224737036
 807 0100 0D010049 		.word	1224737037
 808 0104 0F010049 		.word	1224737039
 809              		.cfi_endproc
 810              	.LFE7:
 811              		.size	CyIMO_SetTrimValue, .-CyIMO_SetTrimValue
 812              		.section	.text.CyIMO_SetFreq,"ax",%progbits
 813              		.align	2
 814              		.global	CyIMO_SetFreq
 815              		.thumb
 816              		.thumb_func
 817              		.type	CyIMO_SetFreq, %function
 818              	CyIMO_SetFreq:
 819              	.LFB8:
 426:Generated_Source\PSoC5/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 23


 427:Generated_Source\PSoC5/CyLib.c **** 
 428:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 429:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyIMO_SetFreq
 430:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 431:Generated_Source\PSoC5/CyLib.c **** *
 432:Generated_Source\PSoC5/CyLib.c **** *  Sets the frequency of the IMO. Changes may be made while the IMO is running.
 433:Generated_Source\PSoC5/CyLib.c **** *
 434:Generated_Source\PSoC5/CyLib.c **** *  \param freq: Frequency of IMO operation
 435:Generated_Source\PSoC5/CyLib.c **** *       CY_IMO_FREQ_3MHZ  to set  3   MHz
 436:Generated_Source\PSoC5/CyLib.c **** *       CY_IMO_FREQ_6MHZ  to set  6   MHz
 437:Generated_Source\PSoC5/CyLib.c **** *       CY_IMO_FREQ_12MHZ to set 12   MHz
 438:Generated_Source\PSoC5/CyLib.c **** *       CY_IMO_FREQ_24MHZ to set 24   MHz
 439:Generated_Source\PSoC5/CyLib.c **** *       CY_IMO_FREQ_48MHZ to set 48   MHz
 440:Generated_Source\PSoC5/CyLib.c **** *       CY_IMO_FREQ_62MHZ to set 62.6 MHz
 441:Generated_Source\PSoC5/CyLib.c **** *       CY_IMO_FREQ_74MHZ to set 74.7 MHz (not applicable for PSoC 3)
 442:Generated_Source\PSoC5/CyLib.c **** *       CY_IMO_FREQ_USB   to set 24   MHz (Trimmed for USB operation)
 443:Generated_Source\PSoC5/CyLib.c **** *
 444:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
 445:Generated_Source\PSoC5/CyLib.c **** *  If this function execution results in the CPU clock frequency increasing,
 446:Generated_Source\PSoC5/CyLib.c **** *  then the number of clock cycles the cache will wait before it samples data
 447:Generated_Source\PSoC5/CyLib.c **** *  coming back from the Flash must be adjusted by calling
 448:Generated_Source\PSoC5/CyLib.c **** *  CyFlash_SetWaitCycles() with an appropriate parameter. It can be optionally
 449:Generated_Source\PSoC5/CyLib.c **** *  called if the CPU clock frequency is lowered in order to improve the CPU
 450:Generated_Source\PSoC5/CyLib.c **** *  performance. See CyFlash_SetWaitCycles() description for more information.
 451:Generated_Source\PSoC5/CyLib.c **** *
 452:Generated_Source\PSoC5/CyLib.c **** *  When the USB setting is chosen, the USB clock locking circuit is enabled.
 453:Generated_Source\PSoC5/CyLib.c **** *  Otherwise this circuit is disabled. The USB block must be powered before
 454:Generated_Source\PSoC5/CyLib.c **** *  selecting the USB setting.
 455:Generated_Source\PSoC5/CyLib.c **** *
 456:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 457:Generated_Source\PSoC5/CyLib.c **** void CyIMO_SetFreq(uint8 freq) 
 458:Generated_Source\PSoC5/CyLib.c **** {
 820              		.loc 1 458 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 16
 823              		@ frame_needed = 1, uses_anonymous_args = 0
 824 0000 80B5     		push	{r7, lr}
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 84B0     		sub	sp, sp, #16
 829              		.cfi_def_cfa_offset 24
 830 0004 00AF     		add	r7, sp, #0
 831              		.cfi_def_cfa_register 7
 832 0006 0346     		mov	r3, r0
 833 0008 FB71     		strb	r3, [r7, #7]
 459:Generated_Source\PSoC5/CyLib.c ****     uint8 currentFreq;
 460:Generated_Source\PSoC5/CyLib.c ****     uint8 nextFreq;
 461:Generated_Source\PSoC5/CyLib.c **** 
 462:Generated_Source\PSoC5/CyLib.c ****     /***************************************************************************
 463:Generated_Source\PSoC5/CyLib.c ****     * If the IMO frequency is changed,the Trim values must also be set
 464:Generated_Source\PSoC5/CyLib.c ****     * accordingly.This requires reading the current frequency. If the new
 465:Generated_Source\PSoC5/CyLib.c ****     * frequency is faster, then set a new trim and then change the frequency,
 466:Generated_Source\PSoC5/CyLib.c ****     * otherwise change the frequency and then set new trim values.
 467:Generated_Source\PSoC5/CyLib.c ****     ***************************************************************************/
 468:Generated_Source\PSoC5/CyLib.c **** 
 469:Generated_Source\PSoC5/CyLib.c ****     currentFreq = CY_LIB_FASTCLK_IMO_CR_REG & ((uint8)(~CY_LIB_FASTCLK_IMO_CR_RANGE_MASK));
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 24


 834              		.loc 1 469 0
 835 000a 674B     		ldr	r3, .L86
 836 000c 1B78     		ldrb	r3, [r3]
 837 000e DBB2     		uxtb	r3, r3
 838 0010 03F00703 		and	r3, r3, #7
 839 0014 FB73     		strb	r3, [r7, #15]
 470:Generated_Source\PSoC5/CyLib.c **** 
 471:Generated_Source\PSoC5/CyLib.c ****     /* Check if requested frequency is USB. */
 472:Generated_Source\PSoC5/CyLib.c ****     nextFreq = (freq == CY_IMO_FREQ_USB) ? CY_IMO_FREQ_24MHZ : freq;
 840              		.loc 1 472 0
 841 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 842 0018 082B     		cmp	r3, #8
 843 001a 01D0     		beq	.L59
 844              		.loc 1 472 0 is_stmt 0 discriminator 1
 845 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 846 001e 00E0     		b	.L60
 847              	.L59:
 848              		.loc 1 472 0 discriminator 2
 849 0020 0323     		movs	r3, #3
 850              	.L60:
 851              		.loc 1 472 0 discriminator 4
 852 0022 BB73     		strb	r3, [r7, #14]
 473:Generated_Source\PSoC5/CyLib.c **** 
 474:Generated_Source\PSoC5/CyLib.c ****     switch (currentFreq)
 853              		.loc 1 474 0 is_stmt 1 discriminator 4
 854 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 855 0026 062B     		cmp	r3, #6
 856 0028 25D8     		bhi	.L61
 857 002a 01A2     		adr	r2, .L63
 858 002c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 859              		.p2align 2
 860              	.L63:
 861 0030 4D000000 		.word	.L62+1
 862 0034 53000000 		.word	.L64+1
 863 0038 59000000 		.word	.L65+1
 864 003c 5F000000 		.word	.L66+1
 865 0040 65000000 		.word	.L67+1
 866 0044 6B000000 		.word	.L68+1
 867 0048 71000000 		.word	.L69+1
 868              		.p2align 1
 869              	.L62:
 475:Generated_Source\PSoC5/CyLib.c ****     {
 476:Generated_Source\PSoC5/CyLib.c ****     case 0u:
 477:Generated_Source\PSoC5/CyLib.c ****         currentFreq = CY_IMO_FREQ_12MHZ;
 870              		.loc 1 477 0
 871 004c 0223     		movs	r3, #2
 872 004e FB73     		strb	r3, [r7, #15]
 478:Generated_Source\PSoC5/CyLib.c ****         break;
 873              		.loc 1 478 0
 874 0050 15E0     		b	.L70
 875              	.L64:
 479:Generated_Source\PSoC5/CyLib.c **** 
 480:Generated_Source\PSoC5/CyLib.c ****     case 1u:
 481:Generated_Source\PSoC5/CyLib.c ****         currentFreq = CY_IMO_FREQ_6MHZ;
 876              		.loc 1 481 0
 877 0052 0123     		movs	r3, #1
 878 0054 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 25


 482:Generated_Source\PSoC5/CyLib.c ****         break;
 879              		.loc 1 482 0
 880 0056 12E0     		b	.L70
 881              	.L65:
 483:Generated_Source\PSoC5/CyLib.c **** 
 484:Generated_Source\PSoC5/CyLib.c ****     case 2u:
 485:Generated_Source\PSoC5/CyLib.c ****         currentFreq = CY_IMO_FREQ_24MHZ;
 882              		.loc 1 485 0
 883 0058 0323     		movs	r3, #3
 884 005a FB73     		strb	r3, [r7, #15]
 486:Generated_Source\PSoC5/CyLib.c ****         break;
 885              		.loc 1 486 0
 886 005c 0FE0     		b	.L70
 887              	.L66:
 487:Generated_Source\PSoC5/CyLib.c **** 
 488:Generated_Source\PSoC5/CyLib.c ****     case 3u:
 489:Generated_Source\PSoC5/CyLib.c ****         currentFreq = CY_IMO_FREQ_3MHZ;
 888              		.loc 1 489 0
 889 005e 0023     		movs	r3, #0
 890 0060 FB73     		strb	r3, [r7, #15]
 490:Generated_Source\PSoC5/CyLib.c ****         break;
 891              		.loc 1 490 0
 892 0062 0CE0     		b	.L70
 893              	.L67:
 491:Generated_Source\PSoC5/CyLib.c **** 
 492:Generated_Source\PSoC5/CyLib.c ****     case 4u:
 493:Generated_Source\PSoC5/CyLib.c ****         currentFreq = CY_IMO_FREQ_48MHZ;
 894              		.loc 1 493 0
 895 0064 0423     		movs	r3, #4
 896 0066 FB73     		strb	r3, [r7, #15]
 494:Generated_Source\PSoC5/CyLib.c ****         break;
 897              		.loc 1 494 0
 898 0068 09E0     		b	.L70
 899              	.L68:
 495:Generated_Source\PSoC5/CyLib.c **** 
 496:Generated_Source\PSoC5/CyLib.c ****     case 5u:
 497:Generated_Source\PSoC5/CyLib.c ****         currentFreq = CY_IMO_FREQ_62MHZ;
 900              		.loc 1 497 0
 901 006a 0523     		movs	r3, #5
 902 006c FB73     		strb	r3, [r7, #15]
 498:Generated_Source\PSoC5/CyLib.c ****         break;
 903              		.loc 1 498 0
 904 006e 06E0     		b	.L70
 905              	.L69:
 499:Generated_Source\PSoC5/CyLib.c **** 
 500:Generated_Source\PSoC5/CyLib.c **** #if(CY_PSOC5)
 501:Generated_Source\PSoC5/CyLib.c ****     case 6u:
 502:Generated_Source\PSoC5/CyLib.c ****         currentFreq = CY_IMO_FREQ_74MHZ;
 906              		.loc 1 502 0
 907 0070 0623     		movs	r3, #6
 908 0072 FB73     		strb	r3, [r7, #15]
 503:Generated_Source\PSoC5/CyLib.c ****         break;
 909              		.loc 1 503 0
 910 0074 03E0     		b	.L70
 911              	.L61:
 504:Generated_Source\PSoC5/CyLib.c **** #endif  /* (CY_PSOC5) */
 505:Generated_Source\PSoC5/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 26


 506:Generated_Source\PSoC5/CyLib.c ****     default:
 507:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(0u != 0u);
 912              		.loc 1 507 0
 913 0076 0020     		movs	r0, #0
 914 0078 FFF7FEFF 		bl	CyHalt
 508:Generated_Source\PSoC5/CyLib.c ****         break;
 915              		.loc 1 508 0
 916 007c 00BF     		nop
 917              	.L70:
 509:Generated_Source\PSoC5/CyLib.c ****     }
 510:Generated_Source\PSoC5/CyLib.c **** 
 511:Generated_Source\PSoC5/CyLib.c ****     if (nextFreq >= currentFreq)
 918              		.loc 1 511 0
 919 007e BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 920 0080 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 921 0082 9A42     		cmp	r2, r3
 922 0084 03D3     		bcc	.L71
 512:Generated_Source\PSoC5/CyLib.c ****     {
 513:Generated_Source\PSoC5/CyLib.c ****         /* Set new trim first */
 514:Generated_Source\PSoC5/CyLib.c ****         CyIMO_SetTrimValue(freq);
 923              		.loc 1 514 0
 924 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 925 0088 1846     		mov	r0, r3
 926 008a FFF7FEFF 		bl	CyIMO_SetTrimValue
 927              	.L71:
 515:Generated_Source\PSoC5/CyLib.c ****     }
 516:Generated_Source\PSoC5/CyLib.c **** 
 517:Generated_Source\PSoC5/CyLib.c ****     /* Set usbclk_on bit when using CY_IMO_FREQ_USB, if not clear it */
 518:Generated_Source\PSoC5/CyLib.c ****     switch(freq)
 928              		.loc 1 518 0
 929 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 930 0090 082B     		cmp	r3, #8
 931 0092 72D8     		bhi	.L72
 932 0094 01A2     		adr	r2, .L74
 933 0096 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 934 009a 00BF     		.p2align 2
 935              	.L74:
 936 009c C1000000 		.word	.L73+1
 937 00a0 D9000000 		.word	.L75+1
 938 00a4 F1000000 		.word	.L76+1
 939 00a8 03010000 		.word	.L77+1
 940 00ac 1B010000 		.word	.L78+1
 941 00b0 33010000 		.word	.L79+1
 942 00b4 4B010000 		.word	.L80+1
 943 00b8 7B010000 		.word	.L72+1
 944 00bc 63010000 		.word	.L81+1
 945              		.p2align 1
 946              	.L73:
 519:Generated_Source\PSoC5/CyLib.c ****     {
 520:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_3MHZ:
 521:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG = ((CY_LIB_FASTCLK_IMO_CR_REG & CY_LIB_FASTCLK_IMO_CR_RANGE_MASK)
 947              		.loc 1 521 0
 948 00c0 394A     		ldr	r2, .L86
 949 00c2 394B     		ldr	r3, .L86
 950 00c4 1B78     		ldrb	r3, [r3]
 951 00c6 DBB2     		uxtb	r3, r3
 952 00c8 23F04703 		bic	r3, r3, #71
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 27


 953 00cc DBB2     		uxtb	r3, r3
 954 00ce 43F00303 		orr	r3, r3, #3
 955 00d2 DBB2     		uxtb	r3, r3
 956 00d4 1370     		strb	r3, [r2]
 522:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_IMO_3MHZ_VALUE) & ((uint8)(~CY_LIB_IMO_USBCLK_ON_SET));
 523:Generated_Source\PSoC5/CyLib.c ****         break;
 957              		.loc 1 523 0
 958 00d6 54E0     		b	.L82
 959              	.L75:
 524:Generated_Source\PSoC5/CyLib.c **** 
 525:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_6MHZ:
 526:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG = ((CY_LIB_FASTCLK_IMO_CR_REG & CY_LIB_FASTCLK_IMO_CR_RANGE_MASK)
 960              		.loc 1 526 0
 961 00d8 334A     		ldr	r2, .L86
 962 00da 334B     		ldr	r3, .L86
 963 00dc 1B78     		ldrb	r3, [r3]
 964 00de DBB2     		uxtb	r3, r3
 965 00e0 23F04703 		bic	r3, r3, #71
 966 00e4 DBB2     		uxtb	r3, r3
 967 00e6 43F00103 		orr	r3, r3, #1
 968 00ea DBB2     		uxtb	r3, r3
 969 00ec 1370     		strb	r3, [r2]
 527:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_IMO_6MHZ_VALUE) & ((uint8)(~CY_LIB_IMO_USBCLK_ON_SET));
 528:Generated_Source\PSoC5/CyLib.c ****         break;
 970              		.loc 1 528 0
 971 00ee 48E0     		b	.L82
 972              	.L76:
 529:Generated_Source\PSoC5/CyLib.c **** 
 530:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_12MHZ:
 531:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG = ((CY_LIB_FASTCLK_IMO_CR_REG & CY_LIB_FASTCLK_IMO_CR_RANGE_MASK)
 973              		.loc 1 531 0
 974 00f0 2D4A     		ldr	r2, .L86
 975 00f2 2D4B     		ldr	r3, .L86
 976 00f4 1B78     		ldrb	r3, [r3]
 977 00f6 DBB2     		uxtb	r3, r3
 978 00f8 23F04703 		bic	r3, r3, #71
 979 00fc DBB2     		uxtb	r3, r3
 980 00fe 1370     		strb	r3, [r2]
 532:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_IMO_12MHZ_VALUE) & ((uint8)(~CY_LIB_IMO_USBCLK_ON_SET));
 533:Generated_Source\PSoC5/CyLib.c ****         break;
 981              		.loc 1 533 0
 982 0100 3FE0     		b	.L82
 983              	.L77:
 534:Generated_Source\PSoC5/CyLib.c **** 
 535:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_24MHZ:
 536:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG = ((CY_LIB_FASTCLK_IMO_CR_REG & CY_LIB_FASTCLK_IMO_CR_RANGE_MASK)
 984              		.loc 1 536 0
 985 0102 294A     		ldr	r2, .L86
 986 0104 284B     		ldr	r3, .L86
 987 0106 1B78     		ldrb	r3, [r3]
 988 0108 DBB2     		uxtb	r3, r3
 989 010a 23F04703 		bic	r3, r3, #71
 990 010e DBB2     		uxtb	r3, r3
 991 0110 43F00203 		orr	r3, r3, #2
 992 0114 DBB2     		uxtb	r3, r3
 993 0116 1370     		strb	r3, [r2]
 537:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_IMO_24MHZ_VALUE) & ((uint8)(~CY_LIB_IMO_USBCLK_ON_SET));
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 28


 538:Generated_Source\PSoC5/CyLib.c ****         break;
 994              		.loc 1 538 0
 995 0118 33E0     		b	.L82
 996              	.L78:
 539:Generated_Source\PSoC5/CyLib.c **** 
 540:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_48MHZ:
 541:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG = ((CY_LIB_FASTCLK_IMO_CR_REG & CY_LIB_FASTCLK_IMO_CR_RANGE_MASK)
 997              		.loc 1 541 0
 998 011a 234A     		ldr	r2, .L86
 999 011c 224B     		ldr	r3, .L86
 1000 011e 1B78     		ldrb	r3, [r3]
 1001 0120 DBB2     		uxtb	r3, r3
 1002 0122 23F04703 		bic	r3, r3, #71
 1003 0126 DBB2     		uxtb	r3, r3
 1004 0128 43F00403 		orr	r3, r3, #4
 1005 012c DBB2     		uxtb	r3, r3
 1006 012e 1370     		strb	r3, [r2]
 542:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_IMO_48MHZ_VALUE) & ((uint8)(~CY_LIB_IMO_USBCLK_ON_SET));
 543:Generated_Source\PSoC5/CyLib.c ****         break;
 1007              		.loc 1 543 0
 1008 0130 27E0     		b	.L82
 1009              	.L79:
 544:Generated_Source\PSoC5/CyLib.c **** 
 545:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_62MHZ:
 546:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG = ((CY_LIB_FASTCLK_IMO_CR_REG & CY_LIB_FASTCLK_IMO_CR_RANGE_MASK)
 1010              		.loc 1 546 0
 1011 0132 1D4A     		ldr	r2, .L86
 1012 0134 1C4B     		ldr	r3, .L86
 1013 0136 1B78     		ldrb	r3, [r3]
 1014 0138 DBB2     		uxtb	r3, r3
 1015 013a 23F04703 		bic	r3, r3, #71
 1016 013e DBB2     		uxtb	r3, r3
 1017 0140 43F00503 		orr	r3, r3, #5
 1018 0144 DBB2     		uxtb	r3, r3
 1019 0146 1370     		strb	r3, [r2]
 547:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_IMO_62MHZ_VALUE) & ((uint8)(~CY_LIB_IMO_USBCLK_ON_SET));
 548:Generated_Source\PSoC5/CyLib.c ****         break;
 1020              		.loc 1 548 0
 1021 0148 1BE0     		b	.L82
 1022              	.L80:
 549:Generated_Source\PSoC5/CyLib.c **** 
 550:Generated_Source\PSoC5/CyLib.c **** #if(CY_PSOC5)
 551:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_74MHZ:
 552:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG = ((CY_LIB_FASTCLK_IMO_CR_REG & CY_LIB_FASTCLK_IMO_CR_RANGE_MASK)
 1023              		.loc 1 552 0
 1024 014a 174A     		ldr	r2, .L86
 1025 014c 164B     		ldr	r3, .L86
 1026 014e 1B78     		ldrb	r3, [r3]
 1027 0150 DBB2     		uxtb	r3, r3
 1028 0152 23F04703 		bic	r3, r3, #71
 1029 0156 DBB2     		uxtb	r3, r3
 1030 0158 43F00603 		orr	r3, r3, #6
 1031 015c DBB2     		uxtb	r3, r3
 1032 015e 1370     		strb	r3, [r2]
 553:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_IMO_74MHZ_VALUE) & ((uint8)(~CY_LIB_IMO_USBCLK_ON_SET));
 554:Generated_Source\PSoC5/CyLib.c ****         break;
 1033              		.loc 1 554 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 29


 1034 0160 0FE0     		b	.L82
 1035              	.L81:
 555:Generated_Source\PSoC5/CyLib.c **** #endif  /* (CY_PSOC5) */
 556:Generated_Source\PSoC5/CyLib.c **** 
 557:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_FREQ_USB:
 558:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG = ((CY_LIB_FASTCLK_IMO_CR_REG & CY_LIB_FASTCLK_IMO_CR_RANGE_MASK)
 1036              		.loc 1 558 0
 1037 0162 114A     		ldr	r2, .L86
 1038 0164 104B     		ldr	r3, .L86
 1039 0166 1B78     		ldrb	r3, [r3]
 1040 0168 DBB2     		uxtb	r3, r3
 1041 016a 23F04703 		bic	r3, r3, #71
 1042 016e DBB2     		uxtb	r3, r3
 1043 0170 43F04203 		orr	r3, r3, #66
 1044 0174 DBB2     		uxtb	r3, r3
 1045 0176 1370     		strb	r3, [r2]
 559:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_IMO_24MHZ_VALUE) | CY_LIB_IMO_USBCLK_ON_SET;
 560:Generated_Source\PSoC5/CyLib.c ****         break;
 1046              		.loc 1 560 0
 1047 0178 03E0     		b	.L82
 1048              	.L72:
 561:Generated_Source\PSoC5/CyLib.c **** 
 562:Generated_Source\PSoC5/CyLib.c ****     default:
 563:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(0u != 0u);
 1049              		.loc 1 563 0
 1050 017a 0020     		movs	r0, #0
 1051 017c FFF7FEFF 		bl	CyHalt
 564:Generated_Source\PSoC5/CyLib.c ****         break;
 1052              		.loc 1 564 0
 1053 0180 00BF     		nop
 1054              	.L82:
 565:Generated_Source\PSoC5/CyLib.c ****     }
 566:Generated_Source\PSoC5/CyLib.c **** 
 567:Generated_Source\PSoC5/CyLib.c ****     /* Tu rn onIMO Doubler, if switching to CY_IMO_FREQ_USB */
 568:Generated_Source\PSoC5/CyLib.c ****     if (freq == CY_IMO_FREQ_USB)
 1055              		.loc 1 568 0
 1056 0182 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1057 0184 082B     		cmp	r3, #8
 1058 0186 02D1     		bne	.L83
 569:Generated_Source\PSoC5/CyLib.c ****     {
 570:Generated_Source\PSoC5/CyLib.c ****         CyIMO_EnableDoubler();
 1059              		.loc 1 570 0
 1060 0188 FFF7FEFF 		bl	CyIMO_EnableDoubler
 1061 018c 01E0     		b	.L84
 1062              	.L83:
 571:Generated_Source\PSoC5/CyLib.c ****     }
 572:Generated_Source\PSoC5/CyLib.c ****     else
 573:Generated_Source\PSoC5/CyLib.c ****     {
 574:Generated_Source\PSoC5/CyLib.c ****         CyIMO_DisableDoubler();
 1063              		.loc 1 574 0
 1064 018e FFF7FEFF 		bl	CyIMO_DisableDoubler
 1065              	.L84:
 575:Generated_Source\PSoC5/CyLib.c ****     }
 576:Generated_Source\PSoC5/CyLib.c **** 
 577:Generated_Source\PSoC5/CyLib.c ****     if (nextFreq < currentFreq)
 1066              		.loc 1 577 0
 1067 0192 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 30


 1068 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1069 0196 9A42     		cmp	r2, r3
 1070 0198 03D2     		bcs	.L58
 578:Generated_Source\PSoC5/CyLib.c ****     {
 579:Generated_Source\PSoC5/CyLib.c ****         /* Set the trim after setting frequency */
 580:Generated_Source\PSoC5/CyLib.c ****         CyIMO_SetTrimValue(freq);
 1071              		.loc 1 580 0
 1072 019a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1073 019c 1846     		mov	r0, r3
 1074 019e FFF7FEFF 		bl	CyIMO_SetTrimValue
 1075              	.L58:
 581:Generated_Source\PSoC5/CyLib.c ****     }
 582:Generated_Source\PSoC5/CyLib.c **** }
 1076              		.loc 1 582 0
 1077 01a2 1037     		adds	r7, r7, #16
 1078              		.cfi_def_cfa_offset 8
 1079 01a4 BD46     		mov	sp, r7
 1080              		.cfi_def_cfa_register 13
 1081              		@ sp needed
 1082 01a6 80BD     		pop	{r7, pc}
 1083              	.L87:
 1084              		.align	2
 1085              	.L86:
 1086 01a8 00420040 		.word	1073758720
 1087              		.cfi_endproc
 1088              	.LFE8:
 1089              		.size	CyIMO_SetFreq, .-CyIMO_SetFreq
 1090              		.section	.text.CyIMO_SetSource,"ax",%progbits
 1091              		.align	2
 1092              		.global	CyIMO_SetSource
 1093              		.thumb
 1094              		.thumb_func
 1095              		.type	CyIMO_SetSource, %function
 1096              	CyIMO_SetSource:
 1097              	.LFB9:
 583:Generated_Source\PSoC5/CyLib.c **** 
 584:Generated_Source\PSoC5/CyLib.c **** 
 585:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 586:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyIMO_SetSource
 587:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 588:Generated_Source\PSoC5/CyLib.c **** *
 589:Generated_Source\PSoC5/CyLib.c **** *  Sets the source of the clock output from the IMO block.
 590:Generated_Source\PSoC5/CyLib.c **** *
 591:Generated_Source\PSoC5/CyLib.c **** *  The output from the IMO is by default the IMO itself. Optionally the MHz
 592:Generated_Source\PSoC5/CyLib.c **** *  Crystal or DSI input can be the source of the IMO output instead.
 593:Generated_Source\PSoC5/CyLib.c **** *
 594:Generated_Source\PSoC5/CyLib.c **** *   \param source: CY_IMO_SOURCE_DSI to set the DSI as source.
 595:Generated_Source\PSoC5/CyLib.c **** *           CY_IMO_SOURCE_XTAL to set the MHz as source.
 596:Generated_Source\PSoC5/CyLib.c **** *           CY_IMO_SOURCE_IMO to set the IMO itself.
 597:Generated_Source\PSoC5/CyLib.c **** *
 598:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
 599:Generated_Source\PSoC5/CyLib.c **** *  If this function execution resulted in the CPU clock frequency increasing,
 600:Generated_Source\PSoC5/CyLib.c **** *  then the number of clock cycles the cache will wait before it samples data
 601:Generated_Source\PSoC5/CyLib.c **** *  coming back from the Flash must be adjusted by calling
 602:Generated_Source\PSoC5/CyLib.c **** *  CyFlash_SetWaitCycles() with an appropriate parameter. It can be optionally
 603:Generated_Source\PSoC5/CyLib.c **** *  called if the CPU clock frequency is lowered in order to improve the CPU
 604:Generated_Source\PSoC5/CyLib.c **** *  performance. See CyFlash_SetWaitCycles() description for more information.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 31


 605:Generated_Source\PSoC5/CyLib.c **** *
 606:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 607:Generated_Source\PSoC5/CyLib.c **** void CyIMO_SetSource(uint8 source) 
 608:Generated_Source\PSoC5/CyLib.c **** {
 1098              		.loc 1 608 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 8
 1101              		@ frame_needed = 1, uses_anonymous_args = 0
 1102 0000 80B5     		push	{r7, lr}
 1103              		.cfi_def_cfa_offset 8
 1104              		.cfi_offset 7, -8
 1105              		.cfi_offset 14, -4
 1106 0002 82B0     		sub	sp, sp, #8
 1107              		.cfi_def_cfa_offset 16
 1108 0004 00AF     		add	r7, sp, #0
 1109              		.cfi_def_cfa_register 7
 1110 0006 0346     		mov	r3, r0
 1111 0008 FB71     		strb	r3, [r7, #7]
 609:Generated_Source\PSoC5/CyLib.c ****     switch(source)
 1112              		.loc 1 609 0
 1113 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1114 000c 012B     		cmp	r3, #1
 1115 000e 17D0     		beq	.L90
 1116 0010 022B     		cmp	r3, #2
 1117 0012 02D0     		beq	.L91
 1118 0014 002B     		cmp	r3, #0
 1119 0016 26D0     		beq	.L92
 1120 0018 2EE0     		b	.L94
 1121              	.L91:
 610:Generated_Source\PSoC5/CyLib.c ****     {
 611:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_SOURCE_DSI:
 612:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_CLKDIST_CR_REG     &= ((uint8)(~CY_LIB_CLKDIST_CR_IMO2X));
 1122              		.loc 1 612 0
 1123 001a 4FF04022 		mov	r2, #1073758208
 1124 001e 4FF04023 		mov	r3, #1073758208
 1125 0022 1B78     		ldrb	r3, [r3]
 1126 0024 DBB2     		uxtb	r3, r3
 1127 0026 23F04003 		bic	r3, r3, #64
 1128 002a DBB2     		uxtb	r3, r3
 1129 002c 1370     		strb	r3, [r2]
 613:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG |= CY_LIB_FASTCLK_IMO_IMO;
 1130              		.loc 1 613 0
 1131 002e 164A     		ldr	r2, .L95
 1132 0030 154B     		ldr	r3, .L95
 1133 0032 1B78     		ldrb	r3, [r3]
 1134 0034 DBB2     		uxtb	r3, r3
 1135 0036 43F02003 		orr	r3, r3, #32
 1136 003a DBB2     		uxtb	r3, r3
 1137 003c 1370     		strb	r3, [r2]
 614:Generated_Source\PSoC5/CyLib.c ****         break;
 1138              		.loc 1 614 0
 1139 003e 1FE0     		b	.L88
 1140              	.L90:
 615:Generated_Source\PSoC5/CyLib.c **** 
 616:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_SOURCE_XTAL:
 617:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_CLKDIST_CR_REG     |= CY_LIB_CLKDIST_CR_IMO2X;
 1141              		.loc 1 617 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 32


 1142 0040 4FF04022 		mov	r2, #1073758208
 1143 0044 4FF04023 		mov	r3, #1073758208
 1144 0048 1B78     		ldrb	r3, [r3]
 1145 004a DBB2     		uxtb	r3, r3
 1146 004c 43F04003 		orr	r3, r3, #64
 1147 0050 DBB2     		uxtb	r3, r3
 1148 0052 1370     		strb	r3, [r2]
 618:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG |= CY_LIB_FASTCLK_IMO_IMO;
 1149              		.loc 1 618 0
 1150 0054 0C4A     		ldr	r2, .L95
 1151 0056 0C4B     		ldr	r3, .L95
 1152 0058 1B78     		ldrb	r3, [r3]
 1153 005a DBB2     		uxtb	r3, r3
 1154 005c 43F02003 		orr	r3, r3, #32
 1155 0060 DBB2     		uxtb	r3, r3
 1156 0062 1370     		strb	r3, [r2]
 619:Generated_Source\PSoC5/CyLib.c ****         break;
 1157              		.loc 1 619 0
 1158 0064 0CE0     		b	.L88
 1159              	.L92:
 620:Generated_Source\PSoC5/CyLib.c **** 
 621:Generated_Source\PSoC5/CyLib.c ****     case CY_IMO_SOURCE_IMO:
 622:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_FASTCLK_IMO_CR_REG &= ((uint8)(~CY_LIB_FASTCLK_IMO_IMO));
 1160              		.loc 1 622 0
 1161 0066 084A     		ldr	r2, .L95
 1162 0068 074B     		ldr	r3, .L95
 1163 006a 1B78     		ldrb	r3, [r3]
 1164 006c DBB2     		uxtb	r3, r3
 1165 006e 23F02003 		bic	r3, r3, #32
 1166 0072 DBB2     		uxtb	r3, r3
 1167 0074 1370     		strb	r3, [r2]
 623:Generated_Source\PSoC5/CyLib.c ****         break;
 1168              		.loc 1 623 0
 1169 0076 03E0     		b	.L88
 1170              	.L94:
 624:Generated_Source\PSoC5/CyLib.c **** 
 625:Generated_Source\PSoC5/CyLib.c ****     default:
 626:Generated_Source\PSoC5/CyLib.c ****         /* Incorrect source value */
 627:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(0u != 0u);
 1171              		.loc 1 627 0
 1172 0078 0020     		movs	r0, #0
 1173 007a FFF7FEFF 		bl	CyHalt
 628:Generated_Source\PSoC5/CyLib.c ****         break;
 1174              		.loc 1 628 0
 1175 007e 00BF     		nop
 1176              	.L88:
 629:Generated_Source\PSoC5/CyLib.c ****     }
 630:Generated_Source\PSoC5/CyLib.c **** }
 1177              		.loc 1 630 0
 1178 0080 0837     		adds	r7, r7, #8
 1179              		.cfi_def_cfa_offset 8
 1180 0082 BD46     		mov	sp, r7
 1181              		.cfi_def_cfa_register 13
 1182              		@ sp needed
 1183 0084 80BD     		pop	{r7, pc}
 1184              	.L96:
 1185 0086 00BF     		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 33


 1186              	.L95:
 1187 0088 00420040 		.word	1073758720
 1188              		.cfi_endproc
 1189              	.LFE9:
 1190              		.size	CyIMO_SetSource, .-CyIMO_SetSource
 1191              		.section	.text.CyIMO_EnableDoubler,"ax",%progbits
 1192              		.align	2
 1193              		.global	CyIMO_EnableDoubler
 1194              		.thumb
 1195              		.thumb_func
 1196              		.type	CyIMO_EnableDoubler, %function
 1197              	CyIMO_EnableDoubler:
 1198              	.LFB10:
 631:Generated_Source\PSoC5/CyLib.c **** 
 632:Generated_Source\PSoC5/CyLib.c **** 
 633:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 634:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyIMO_EnableDoubler
 635:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 636:Generated_Source\PSoC5/CyLib.c **** *
 637:Generated_Source\PSoC5/CyLib.c **** *  Enables the IMO doubler.  The 2x frequency clock is used to convert a 24 MHz
 638:Generated_Source\PSoC5/CyLib.c **** *  input to a 48 MHz output for use by the USB block.
 639:Generated_Source\PSoC5/CyLib.c **** *
 640:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 641:Generated_Source\PSoC5/CyLib.c **** void CyIMO_EnableDoubler(void) 
 642:Generated_Source\PSoC5/CyLib.c **** {
 1199              		.loc 1 642 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 0
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203              		@ link register save eliminated.
 1204 0000 80B4     		push	{r7}
 1205              		.cfi_def_cfa_offset 4
 1206              		.cfi_offset 7, -4
 1207 0002 00AF     		add	r7, sp, #0
 1208              		.cfi_def_cfa_register 7
 643:Generated_Source\PSoC5/CyLib.c ****     /* Set FASTCLK_IMO_CR_PTR regigster's 4th bit */
 644:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_FASTCLK_IMO_CR_REG |= CY_LIB_FASTCLK_IMO_DOUBLER;
 1209              		.loc 1 644 0
 1210 0004 054A     		ldr	r2, .L98
 1211 0006 054B     		ldr	r3, .L98
 1212 0008 1B78     		ldrb	r3, [r3]
 1213 000a DBB2     		uxtb	r3, r3
 1214 000c 43F01003 		orr	r3, r3, #16
 1215 0010 DBB2     		uxtb	r3, r3
 1216 0012 1370     		strb	r3, [r2]
 645:Generated_Source\PSoC5/CyLib.c **** }
 1217              		.loc 1 645 0
 1218 0014 BD46     		mov	sp, r7
 1219              		.cfi_def_cfa_register 13
 1220              		@ sp needed
 1221 0016 5DF8047B 		ldr	r7, [sp], #4
 1222              		.cfi_restore 7
 1223              		.cfi_def_cfa_offset 0
 1224 001a 7047     		bx	lr
 1225              	.L99:
 1226              		.align	2
 1227              	.L98:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 34


 1228 001c 00420040 		.word	1073758720
 1229              		.cfi_endproc
 1230              	.LFE10:
 1231              		.size	CyIMO_EnableDoubler, .-CyIMO_EnableDoubler
 1232              		.section	.text.CyIMO_DisableDoubler,"ax",%progbits
 1233              		.align	2
 1234              		.global	CyIMO_DisableDoubler
 1235              		.thumb
 1236              		.thumb_func
 1237              		.type	CyIMO_DisableDoubler, %function
 1238              	CyIMO_DisableDoubler:
 1239              	.LFB11:
 646:Generated_Source\PSoC5/CyLib.c **** 
 647:Generated_Source\PSoC5/CyLib.c **** 
 648:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 649:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyIMO_DisableDoubler
 650:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 651:Generated_Source\PSoC5/CyLib.c **** *
 652:Generated_Source\PSoC5/CyLib.c **** *   Disables the IMO doubler.
 653:Generated_Source\PSoC5/CyLib.c **** *
 654:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 655:Generated_Source\PSoC5/CyLib.c **** void CyIMO_DisableDoubler(void) 
 656:Generated_Source\PSoC5/CyLib.c **** {
 1240              		.loc 1 656 0
 1241              		.cfi_startproc
 1242              		@ args = 0, pretend = 0, frame = 0
 1243              		@ frame_needed = 1, uses_anonymous_args = 0
 1244              		@ link register save eliminated.
 1245 0000 80B4     		push	{r7}
 1246              		.cfi_def_cfa_offset 4
 1247              		.cfi_offset 7, -4
 1248 0002 00AF     		add	r7, sp, #0
 1249              		.cfi_def_cfa_register 7
 657:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_FASTCLK_IMO_CR_REG &= ((uint8)(~CY_LIB_FASTCLK_IMO_DOUBLER));
 1250              		.loc 1 657 0
 1251 0004 054A     		ldr	r2, .L101
 1252 0006 054B     		ldr	r3, .L101
 1253 0008 1B78     		ldrb	r3, [r3]
 1254 000a DBB2     		uxtb	r3, r3
 1255 000c 23F01003 		bic	r3, r3, #16
 1256 0010 DBB2     		uxtb	r3, r3
 1257 0012 1370     		strb	r3, [r2]
 658:Generated_Source\PSoC5/CyLib.c **** }
 1258              		.loc 1 658 0
 1259 0014 BD46     		mov	sp, r7
 1260              		.cfi_def_cfa_register 13
 1261              		@ sp needed
 1262 0016 5DF8047B 		ldr	r7, [sp], #4
 1263              		.cfi_restore 7
 1264              		.cfi_def_cfa_offset 0
 1265 001a 7047     		bx	lr
 1266              	.L102:
 1267              		.align	2
 1268              	.L101:
 1269 001c 00420040 		.word	1073758720
 1270              		.cfi_endproc
 1271              	.LFE11:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 35


 1272              		.size	CyIMO_DisableDoubler, .-CyIMO_DisableDoubler
 1273              		.section	.text.CyMasterClk_SetSource,"ax",%progbits
 1274              		.align	2
 1275              		.global	CyMasterClk_SetSource
 1276              		.thumb
 1277              		.thumb_func
 1278              		.type	CyMasterClk_SetSource, %function
 1279              	CyMasterClk_SetSource:
 1280              	.LFB12:
 659:Generated_Source\PSoC5/CyLib.c **** 
 660:Generated_Source\PSoC5/CyLib.c **** 
 661:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 662:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyMasterClk_SetSource
 663:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 664:Generated_Source\PSoC5/CyLib.c **** *
 665:Generated_Source\PSoC5/CyLib.c **** *  Sets the source of the master clock.
 666:Generated_Source\PSoC5/CyLib.c **** *
 667:Generated_Source\PSoC5/CyLib.c **** *   \param source: One of the four available Master clock sources.
 668:Generated_Source\PSoC5/CyLib.c **** *     CY_MASTER_SOURCE_IMO
 669:Generated_Source\PSoC5/CyLib.c **** *     CY_MASTER_SOURCE_PLL
 670:Generated_Source\PSoC5/CyLib.c **** *     CY_MASTER_SOURCE_XTAL
 671:Generated_Source\PSoC5/CyLib.c **** *     CY_MASTER_SOURCE_DSI
 672:Generated_Source\PSoC5/CyLib.c **** *
 673:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
 674:Generated_Source\PSoC5/CyLib.c **** *  The current source and the new source must both be running and stable before
 675:Generated_Source\PSoC5/CyLib.c **** *  calling this function.
 676:Generated_Source\PSoC5/CyLib.c **** *
 677:Generated_Source\PSoC5/CyLib.c **** *  If this function execution resulted in the CPU clock frequency increasing,
 678:Generated_Source\PSoC5/CyLib.c **** *  then the number of clock cycles the cache will wait before it samples data
 679:Generated_Source\PSoC5/CyLib.c **** *  coming back from the Flash must be adjusted by calling
 680:Generated_Source\PSoC5/CyLib.c **** *  CyFlash_SetWaitCycles() with an appropriate parameter. It can be optionally
 681:Generated_Source\PSoC5/CyLib.c **** *  called if the CPU clock frequency is lowered in order to improve the CPU
 682:Generated_Source\PSoC5/CyLib.c **** *  performance. See CyFlash_SetWaitCycles() description for more information.
 683:Generated_Source\PSoC5/CyLib.c **** *
 684:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 685:Generated_Source\PSoC5/CyLib.c **** void CyMasterClk_SetSource(uint8 source) 
 686:Generated_Source\PSoC5/CyLib.c **** {
 1281              		.loc 1 686 0
 1282              		.cfi_startproc
 1283              		@ args = 0, pretend = 0, frame = 8
 1284              		@ frame_needed = 1, uses_anonymous_args = 0
 1285              		@ link register save eliminated.
 1286 0000 80B4     		push	{r7}
 1287              		.cfi_def_cfa_offset 4
 1288              		.cfi_offset 7, -4
 1289 0002 83B0     		sub	sp, sp, #12
 1290              		.cfi_def_cfa_offset 16
 1291 0004 00AF     		add	r7, sp, #0
 1292              		.cfi_def_cfa_register 7
 1293 0006 0346     		mov	r3, r0
 1294 0008 FB71     		strb	r3, [r7, #7]
 687:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_MSTR1_REG = (CY_LIB_CLKDIST_MSTR1_REG & MASTER_CLK_SRC_CLEAR) |
 1295              		.loc 1 687 0
 1296 000a 0949     		ldr	r1, .L104
 1297 000c 084B     		ldr	r3, .L104
 1298 000e 1B78     		ldrb	r3, [r3]
 1299 0010 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 36


 1300 0012 23F00303 		bic	r3, r3, #3
 1301 0016 DAB2     		uxtb	r2, r3
 1302 0018 FB79     		ldrb	r3, [r7, #7]
 1303 001a 03F00303 		and	r3, r3, #3
 1304 001e DBB2     		uxtb	r3, r3
 1305 0020 1343     		orrs	r3, r3, r2
 1306 0022 DBB2     		uxtb	r3, r3
 1307 0024 0B70     		strb	r3, [r1]
 688:Generated_Source\PSoC5/CyLib.c ****                                 (source & ((uint8)(~MASTER_CLK_SRC_CLEAR)));
 689:Generated_Source\PSoC5/CyLib.c **** }
 1308              		.loc 1 689 0
 1309 0026 0C37     		adds	r7, r7, #12
 1310              		.cfi_def_cfa_offset 4
 1311 0028 BD46     		mov	sp, r7
 1312              		.cfi_def_cfa_register 13
 1313              		@ sp needed
 1314 002a 5DF8047B 		ldr	r7, [sp], #4
 1315              		.cfi_restore 7
 1316              		.cfi_def_cfa_offset 0
 1317 002e 7047     		bx	lr
 1318              	.L105:
 1319              		.align	2
 1320              	.L104:
 1321 0030 05400040 		.word	1073758213
 1322              		.cfi_endproc
 1323              	.LFE12:
 1324              		.size	CyMasterClk_SetSource, .-CyMasterClk_SetSource
 1325              		.section	.text.CyMasterClk_SetDivider,"ax",%progbits
 1326              		.align	2
 1327              		.global	CyMasterClk_SetDivider
 1328              		.thumb
 1329              		.thumb_func
 1330              		.type	CyMasterClk_SetDivider, %function
 1331              	CyMasterClk_SetDivider:
 1332              	.LFB13:
 690:Generated_Source\PSoC5/CyLib.c **** 
 691:Generated_Source\PSoC5/CyLib.c **** 
 692:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 693:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyMasterClk_SetDivider
 694:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 695:Generated_Source\PSoC5/CyLib.c **** *
 696:Generated_Source\PSoC5/CyLib.c **** *  Sets the divider value used to generate Master Clock.
 697:Generated_Source\PSoC5/CyLib.c **** *
 698:Generated_Source\PSoC5/CyLib.c **** *  \param uint8 divider:
 699:Generated_Source\PSoC5/CyLib.c **** *   The valid range is [0-255]. The clock will be divided by this value + 1.
 700:Generated_Source\PSoC5/CyLib.c **** *   For example to divide this parameter by two should be set to 1.
 701:Generated_Source\PSoC5/CyLib.c **** *
 702:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
 703:Generated_Source\PSoC5/CyLib.c **** *  If this function execution resulted in the CPU clock frequency increasing,
 704:Generated_Source\PSoC5/CyLib.c **** *  then the number of clock cycles the cache will wait before it samples data
 705:Generated_Source\PSoC5/CyLib.c **** *  coming back from the Flash must be adjusted by calling
 706:Generated_Source\PSoC5/CyLib.c **** *  CyFlash_SetWaitCycles() with an appropriate parameter. It can be optionally
 707:Generated_Source\PSoC5/CyLib.c **** *  called if the CPU clock frequency is lowered in order to improve the CPU
 708:Generated_Source\PSoC5/CyLib.c **** *  performance. See CyFlash_SetWaitCycles() description for more information.
 709:Generated_Source\PSoC5/CyLib.c **** *
 710:Generated_Source\PSoC5/CyLib.c **** *  When changing the Master or Bus clock divider value from div-by-n to div-by-1
 711:Generated_Source\PSoC5/CyLib.c **** *  the first clock cycle output after the div-by-1 can be up to 4 ns shorter
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 37


 712:Generated_Source\PSoC5/CyLib.c **** *  than the final/expected div-by-1 period.
 713:Generated_Source\PSoC5/CyLib.c **** *
 714:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 715:Generated_Source\PSoC5/CyLib.c **** void CyMasterClk_SetDivider(uint8 divider) 
 716:Generated_Source\PSoC5/CyLib.c **** {
 1333              		.loc 1 716 0
 1334              		.cfi_startproc
 1335              		@ args = 0, pretend = 0, frame = 8
 1336              		@ frame_needed = 1, uses_anonymous_args = 0
 1337              		@ link register save eliminated.
 1338 0000 80B4     		push	{r7}
 1339              		.cfi_def_cfa_offset 4
 1340              		.cfi_offset 7, -4
 1341 0002 83B0     		sub	sp, sp, #12
 1342              		.cfi_def_cfa_offset 16
 1343 0004 00AF     		add	r7, sp, #0
 1344              		.cfi_def_cfa_register 7
 1345 0006 0346     		mov	r3, r0
 1346 0008 FB71     		strb	r3, [r7, #7]
 717:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_MSTR0_REG = divider;
 1347              		.loc 1 717 0
 1348 000a 044A     		ldr	r2, .L107
 1349 000c FB79     		ldrb	r3, [r7, #7]
 1350 000e 1370     		strb	r3, [r2]
 718:Generated_Source\PSoC5/CyLib.c **** }
 1351              		.loc 1 718 0
 1352 0010 0C37     		adds	r7, r7, #12
 1353              		.cfi_def_cfa_offset 4
 1354 0012 BD46     		mov	sp, r7
 1355              		.cfi_def_cfa_register 13
 1356              		@ sp needed
 1357 0014 5DF8047B 		ldr	r7, [sp], #4
 1358              		.cfi_restore 7
 1359              		.cfi_def_cfa_offset 0
 1360 0018 7047     		bx	lr
 1361              	.L108:
 1362 001a 00BF     		.align	2
 1363              	.L107:
 1364 001c 04400040 		.word	1073758212
 1365              		.cfi_endproc
 1366              	.LFE13:
 1367              		.size	CyMasterClk_SetDivider, .-CyMasterClk_SetDivider
 1368              		.section	.text.CyBusClk_Internal_SetDivider,"ax",%progbits
 1369              		.align	2
 1370              		.thumb
 1371              		.thumb_func
 1372              		.type	CyBusClk_Internal_SetDivider, %function
 1373              	CyBusClk_Internal_SetDivider:
 1374              	.LFB14:
 719:Generated_Source\PSoC5/CyLib.c **** 
 720:Generated_Source\PSoC5/CyLib.c **** 
 721:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 722:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyBusClk_Internal_SetDivider
 723:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 724:Generated_Source\PSoC5/CyLib.c **** *
 725:Generated_Source\PSoC5/CyLib.c **** *  The function used by CyBusClk_SetDivider(). For internal use only.
 726:Generated_Source\PSoC5/CyLib.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 38


 727:Generated_Source\PSoC5/CyLib.c **** *   \param divider: Valid range [0-65535].
 728:Generated_Source\PSoC5/CyLib.c **** *   The clock will be divided by this value + 1.
 729:Generated_Source\PSoC5/CyLib.c **** *   For example, to divide this parameter by two should be set to 1.
 730:Generated_Source\PSoC5/CyLib.c **** *
 731:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 732:Generated_Source\PSoC5/CyLib.c **** static void CyBusClk_Internal_SetDivider(uint16 divider)
 733:Generated_Source\PSoC5/CyLib.c **** {
 1375              		.loc 1 733 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 8
 1378              		@ frame_needed = 1, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380 0000 80B4     		push	{r7}
 1381              		.cfi_def_cfa_offset 4
 1382              		.cfi_offset 7, -4
 1383 0002 83B0     		sub	sp, sp, #12
 1384              		.cfi_def_cfa_offset 16
 1385 0004 00AF     		add	r7, sp, #0
 1386              		.cfi_def_cfa_register 7
 1387 0006 0346     		mov	r3, r0
 1388 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 734:Generated_Source\PSoC5/CyLib.c ****     /* Mask bits to enable shadow loads  */
 735:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_AMASK_REG &= CY_LIB_CLKDIST_AMASK_MASK;
 1389              		.loc 1 735 0
 1390 000a 154A     		ldr	r2, .L110
 1391 000c 144B     		ldr	r3, .L110
 1392 000e 1B78     		ldrb	r3, [r3]
 1393 0010 DBB2     		uxtb	r3, r3
 1394 0012 23F00F03 		bic	r3, r3, #15
 1395 0016 DBB2     		uxtb	r3, r3
 1396 0018 1370     		strb	r3, [r2]
 736:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_DMASK_REG  = CY_LIB_CLKDIST_DMASK_MASK;
 1397              		.loc 1 736 0
 1398 001a 124B     		ldr	r3, .L110+4
 1399 001c 0022     		movs	r2, #0
 1400 001e 1A70     		strb	r2, [r3]
 737:Generated_Source\PSoC5/CyLib.c **** 
 738:Generated_Source\PSoC5/CyLib.c ****     /* Enable mask bits to enable shadow loads */
 739:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_BCFG2_REG |= CY_LIB_CLKDIST_BCFG2_MASK;
 1401              		.loc 1 739 0
 1402 0020 114A     		ldr	r2, .L110+8
 1403 0022 114B     		ldr	r3, .L110+8
 1404 0024 1B78     		ldrb	r3, [r3]
 1405 0026 DBB2     		uxtb	r3, r3
 1406 0028 63F07F03 		orn	r3, r3, #127
 1407 002c DBB2     		uxtb	r3, r3
 1408 002e 1370     		strb	r3, [r2]
 740:Generated_Source\PSoC5/CyLib.c **** 
 741:Generated_Source\PSoC5/CyLib.c ****     /* Update Shadow Divider Value Register with new divider */
 742:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_WRK_LSB_REG = LO8(divider);
 1409              		.loc 1 742 0
 1410 0030 0E4B     		ldr	r3, .L110+12
 1411 0032 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1412 0034 D2B2     		uxtb	r2, r2
 1413 0036 1A70     		strb	r2, [r3]
 743:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_WRK_MSB_REG = HI8(divider);
 1414              		.loc 1 743 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 39


 1415 0038 0D4A     		ldr	r2, .L110+16
 1416 003a FB88     		ldrh	r3, [r7, #6]
 1417 003c 1B0A     		lsrs	r3, r3, #8
 1418 003e 9BB2     		uxth	r3, r3
 1419 0040 DBB2     		uxtb	r3, r3
 1420 0042 1370     		strb	r3, [r2]
 744:Generated_Source\PSoC5/CyLib.c **** 
 745:Generated_Source\PSoC5/CyLib.c **** 
 746:Generated_Source\PSoC5/CyLib.c ****     /***************************************************************************
 747:Generated_Source\PSoC5/CyLib.c ****     * Copy shadow value defined in Shadow Divider Value Register
 748:Generated_Source\PSoC5/CyLib.c ****     * (CY_LIB_CLKDIST_WRK_LSB_REG and CY_LIB_CLKDIST_WRK_MSB_REG) to all
 749:Generated_Source\PSoC5/CyLib.c ****     * dividers selected in Analog and Digital Clock Mask Registers
 750:Generated_Source\PSoC5/CyLib.c ****     * (CY_LIB_CLKDIST_AMASK_REG and CY_LIB_CLKDIST_DMASK_REG).
 751:Generated_Source\PSoC5/CyLib.c ****     ***************************************************************************/
 752:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_LD_REG |= CY_LIB_CLKDIST_LD_LOAD;
 1421              		.loc 1 752 0
 1422 0044 0B4A     		ldr	r2, .L110+20
 1423 0046 0B4B     		ldr	r3, .L110+20
 1424 0048 1B78     		ldrb	r3, [r3]
 1425 004a DBB2     		uxtb	r3, r3
 1426 004c 43F00103 		orr	r3, r3, #1
 1427 0050 DBB2     		uxtb	r3, r3
 1428 0052 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/CyLib.c **** }
 1429              		.loc 1 753 0
 1430 0054 0C37     		adds	r7, r7, #12
 1431              		.cfi_def_cfa_offset 4
 1432 0056 BD46     		mov	sp, r7
 1433              		.cfi_def_cfa_register 13
 1434              		@ sp needed
 1435 0058 5DF8047B 		ldr	r7, [sp], #4
 1436              		.cfi_restore 7
 1437              		.cfi_def_cfa_offset 0
 1438 005c 7047     		bx	lr
 1439              	.L111:
 1440 005e 00BF     		.align	2
 1441              	.L110:
 1442 0060 14400040 		.word	1073758228
 1443 0064 10400040 		.word	1073758224
 1444 0068 08400040 		.word	1073758216
 1445 006c 02400040 		.word	1073758210
 1446 0070 03400040 		.word	1073758211
 1447 0074 01400040 		.word	1073758209
 1448              		.cfi_endproc
 1449              	.LFE14:
 1450              		.size	CyBusClk_Internal_SetDivider, .-CyBusClk_Internal_SetDivider
 1451              		.section	.text.CyBusClk_SetDivider,"ax",%progbits
 1452              		.align	2
 1453              		.global	CyBusClk_SetDivider
 1454              		.thumb
 1455              		.thumb_func
 1456              		.type	CyBusClk_SetDivider, %function
 1457              	CyBusClk_SetDivider:
 1458              	.LFB15:
 754:Generated_Source\PSoC5/CyLib.c **** 
 755:Generated_Source\PSoC5/CyLib.c **** 
 756:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 40


 757:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyBusClk_SetDivider
 758:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 759:Generated_Source\PSoC5/CyLib.c **** *
 760:Generated_Source\PSoC5/CyLib.c **** *  Sets the divider value used to generate the Bus Clock.
 761:Generated_Source\PSoC5/CyLib.c **** *
 762:Generated_Source\PSoC5/CyLib.c **** *  \param divider: Valid range [0-65535]. The clock will be divided by this value + 1.
 763:Generated_Source\PSoC5/CyLib.c **** *  For example, to divide this parameter by two should be set to 1.
 764:Generated_Source\PSoC5/CyLib.c **** *
 765:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
 766:Generated_Source\PSoC5/CyLib.c **** *  If this function execution resulted in the CPU clock frequency increasing,
 767:Generated_Source\PSoC5/CyLib.c **** *  then the number of clock cycles the cache will wait before it samples data
 768:Generated_Source\PSoC5/CyLib.c **** *  coming back from the Flash must be adjusted by calling
 769:Generated_Source\PSoC5/CyLib.c **** *  CyFlash_SetWaitCycles() with an appropriate parameter. It can be optionally
 770:Generated_Source\PSoC5/CyLib.c **** *  called if the CPU clock frequency is lowered in order to improve the CPU
 771:Generated_Source\PSoC5/CyLib.c **** *  performance. See CyFlash_SetWaitCycles() description for more information.
 772:Generated_Source\PSoC5/CyLib.c **** *
 773:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 774:Generated_Source\PSoC5/CyLib.c **** void CyBusClk_SetDivider(uint16 divider) 
 775:Generated_Source\PSoC5/CyLib.c **** {
 1459              		.loc 1 775 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 16
 1462              		@ frame_needed = 1, uses_anonymous_args = 0
 1463 0000 80B5     		push	{r7, lr}
 1464              		.cfi_def_cfa_offset 8
 1465              		.cfi_offset 7, -8
 1466              		.cfi_offset 14, -4
 1467 0002 84B0     		sub	sp, sp, #16
 1468              		.cfi_def_cfa_offset 24
 1469 0004 00AF     		add	r7, sp, #0
 1470              		.cfi_def_cfa_register 7
 1471 0006 0346     		mov	r3, r0
 1472 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 776:Generated_Source\PSoC5/CyLib.c ****     uint8  masterClkDiv;
 777:Generated_Source\PSoC5/CyLib.c ****     uint16 busClkDiv;
 778:Generated_Source\PSoC5/CyLib.c ****     uint8 interruptState;
 779:Generated_Source\PSoC5/CyLib.c **** 
 780:Generated_Source\PSoC5/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1473              		.loc 1 780 0
 1474 000a FFF7FEFF 		bl	CyEnterCriticalSection
 1475 000e 0346     		mov	r3, r0
 1476 0010 FB73     		strb	r3, [r7, #15]
 781:Generated_Source\PSoC5/CyLib.c **** 
 782:Generated_Source\PSoC5/CyLib.c ****     /* Work around to set bus clock divider value */
 783:Generated_Source\PSoC5/CyLib.c ****     busClkDiv = (uint16)((uint16)CY_LIB_CLKDIST_BCFG_MSB_REG << 8u);
 1477              		.loc 1 783 0
 1478 0012 244B     		ldr	r3, .L119
 1479 0014 1B78     		ldrb	r3, [r3]
 1480 0016 DBB2     		uxtb	r3, r3
 1481 0018 9BB2     		uxth	r3, r3
 1482 001a 1B02     		lsls	r3, r3, #8
 1483 001c BB81     		strh	r3, [r7, #12]	@ movhi
 784:Generated_Source\PSoC5/CyLib.c ****     busClkDiv |= CY_LIB_CLKDIST_BCFG_LSB_REG;
 1484              		.loc 1 784 0
 1485 001e 224B     		ldr	r3, .L119+4
 1486 0020 1B78     		ldrb	r3, [r3]
 1487 0022 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 41


 1488 0024 9AB2     		uxth	r2, r3
 1489 0026 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1490 0028 1343     		orrs	r3, r3, r2
 1491 002a BB81     		strh	r3, [r7, #12]	@ movhi
 785:Generated_Source\PSoC5/CyLib.c **** 
 786:Generated_Source\PSoC5/CyLib.c ****     if ((divider == 0u) || (busClkDiv == 0u))
 1492              		.loc 1 786 0
 1493 002c FB88     		ldrh	r3, [r7, #6]
 1494 002e 002B     		cmp	r3, #0
 1495 0030 02D0     		beq	.L113
 1496              		.loc 1 786 0 is_stmt 0 discriminator 1
 1497 0032 BB89     		ldrh	r3, [r7, #12]
 1498 0034 002B     		cmp	r3, #0
 1499 0036 29D1     		bne	.L114
 1500              	.L113:
 787:Generated_Source\PSoC5/CyLib.c ****     {
 788:Generated_Source\PSoC5/CyLib.c ****         /* Save away master clock divider value */
 789:Generated_Source\PSoC5/CyLib.c ****         masterClkDiv = CY_LIB_CLKDIST_MSTR0_REG;
 1501              		.loc 1 789 0 is_stmt 1
 1502 0038 1C4B     		ldr	r3, .L119+8
 1503 003a 1B78     		ldrb	r3, [r3]
 1504 003c FB72     		strb	r3, [r7, #11]
 790:Generated_Source\PSoC5/CyLib.c **** 
 791:Generated_Source\PSoC5/CyLib.c ****         if (masterClkDiv < CY_LIB_CLKDIST_MASTERCLK_DIV)
 1505              		.loc 1 791 0
 1506 003e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1507 0040 062B     		cmp	r3, #6
 1508 0042 02D8     		bhi	.L115
 792:Generated_Source\PSoC5/CyLib.c ****         {
 793:Generated_Source\PSoC5/CyLib.c ****             /* Set master clock divider to 7 */
 794:Generated_Source\PSoC5/CyLib.c ****             CyMasterClk_SetDivider(CY_LIB_CLKDIST_MASTERCLK_DIV);
 1509              		.loc 1 794 0
 1510 0044 0720     		movs	r0, #7
 1511 0046 FFF7FEFF 		bl	CyMasterClk_SetDivider
 1512              	.L115:
 795:Generated_Source\PSoC5/CyLib.c ****         }
 796:Generated_Source\PSoC5/CyLib.c **** 
 797:Generated_Source\PSoC5/CyLib.c ****         if (divider == 0u)
 1513              		.loc 1 797 0
 1514 004a FB88     		ldrh	r3, [r7, #6]
 1515 004c 002B     		cmp	r3, #0
 1516 004e 0CD1     		bne	.L116
 798:Generated_Source\PSoC5/CyLib.c ****         {
 799:Generated_Source\PSoC5/CyLib.c ****             /* Set SSS bit and divider register desired value */
 800:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_CLKDIST_BCFG2_REG |= CY_LIB_CLKDIST_BCFG2_SSS;
 1517              		.loc 1 800 0
 1518 0050 174A     		ldr	r2, .L119+12
 1519 0052 174B     		ldr	r3, .L119+12
 1520 0054 1B78     		ldrb	r3, [r3]
 1521 0056 DBB2     		uxtb	r3, r3
 1522 0058 43F04003 		orr	r3, r3, #64
 1523 005c DBB2     		uxtb	r3, r3
 1524 005e 1370     		strb	r3, [r2]
 801:Generated_Source\PSoC5/CyLib.c ****             CyBusClk_Internal_SetDivider(divider);
 1525              		.loc 1 801 0
 1526 0060 FB88     		ldrh	r3, [r7, #6]
 1527 0062 1846     		mov	r0, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 42


 1528 0064 FFF7FEFF 		bl	CyBusClk_Internal_SetDivider
 1529 0068 0BE0     		b	.L117
 1530              	.L116:
 802:Generated_Source\PSoC5/CyLib.c ****         }
 803:Generated_Source\PSoC5/CyLib.c ****         else
 804:Generated_Source\PSoC5/CyLib.c ****         {
 805:Generated_Source\PSoC5/CyLib.c ****             CyBusClk_Internal_SetDivider(divider);
 1531              		.loc 1 805 0
 1532 006a FB88     		ldrh	r3, [r7, #6]
 1533 006c 1846     		mov	r0, r3
 1534 006e FFF7FEFF 		bl	CyBusClk_Internal_SetDivider
 806:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_CLKDIST_BCFG2_REG &= ((uint8)(~CY_LIB_CLKDIST_BCFG2_SSS));
 1535              		.loc 1 806 0
 1536 0072 0F4A     		ldr	r2, .L119+12
 1537 0074 0E4B     		ldr	r3, .L119+12
 1538 0076 1B78     		ldrb	r3, [r3]
 1539 0078 DBB2     		uxtb	r3, r3
 1540 007a 23F04003 		bic	r3, r3, #64
 1541 007e DBB2     		uxtb	r3, r3
 1542 0080 1370     		strb	r3, [r2]
 1543              	.L117:
 807:Generated_Source\PSoC5/CyLib.c ****         }
 808:Generated_Source\PSoC5/CyLib.c **** 
 809:Generated_Source\PSoC5/CyLib.c ****         /* Restore master clock */
 810:Generated_Source\PSoC5/CyLib.c ****         CyMasterClk_SetDivider(masterClkDiv);
 1544              		.loc 1 810 0
 1545 0082 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1546 0084 1846     		mov	r0, r3
 1547 0086 FFF7FEFF 		bl	CyMasterClk_SetDivider
 1548 008a 03E0     		b	.L118
 1549              	.L114:
 811:Generated_Source\PSoC5/CyLib.c ****     }
 812:Generated_Source\PSoC5/CyLib.c ****     else
 813:Generated_Source\PSoC5/CyLib.c ****     {
 814:Generated_Source\PSoC5/CyLib.c ****         CyBusClk_Internal_SetDivider(divider);
 1550              		.loc 1 814 0
 1551 008c FB88     		ldrh	r3, [r7, #6]
 1552 008e 1846     		mov	r0, r3
 1553 0090 FFF7FEFF 		bl	CyBusClk_Internal_SetDivider
 1554              	.L118:
 815:Generated_Source\PSoC5/CyLib.c ****     }
 816:Generated_Source\PSoC5/CyLib.c **** 
 817:Generated_Source\PSoC5/CyLib.c ****     CyExitCriticalSection(interruptState);
 1555              		.loc 1 817 0
 1556 0094 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1557 0096 1846     		mov	r0, r3
 1558 0098 FFF7FEFF 		bl	CyExitCriticalSection
 818:Generated_Source\PSoC5/CyLib.c **** }
 1559              		.loc 1 818 0
 1560 009c 1037     		adds	r7, r7, #16
 1561              		.cfi_def_cfa_offset 8
 1562 009e BD46     		mov	sp, r7
 1563              		.cfi_def_cfa_register 13
 1564              		@ sp needed
 1565 00a0 80BD     		pop	{r7, pc}
 1566              	.L120:
 1567 00a2 00BF     		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 43


 1568              	.L119:
 1569 00a4 07400040 		.word	1073758215
 1570 00a8 06400040 		.word	1073758214
 1571 00ac 04400040 		.word	1073758212
 1572 00b0 08400040 		.word	1073758216
 1573              		.cfi_endproc
 1574              	.LFE15:
 1575              		.size	CyBusClk_SetDivider, .-CyBusClk_SetDivider
 1576              		.section	.text.CyUsbClk_SetSource,"ax",%progbits
 1577              		.align	2
 1578              		.global	CyUsbClk_SetSource
 1579              		.thumb
 1580              		.thumb_func
 1581              		.type	CyUsbClk_SetSource, %function
 1582              	CyUsbClk_SetSource:
 1583              	.LFB16:
 819:Generated_Source\PSoC5/CyLib.c **** 
 820:Generated_Source\PSoC5/CyLib.c **** 
 821:Generated_Source\PSoC5/CyLib.c **** #if(CY_PSOC3)
 822:Generated_Source\PSoC5/CyLib.c **** 
 823:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
 824:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyCpuClk_SetDivider
 825:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
 826:Generated_Source\PSoC5/CyLib.c ****     *
 827:Generated_Source\PSoC5/CyLib.c ****     *  Sets the divider value used to generate the CPU Clock. Only applicable for
 828:Generated_Source\PSoC5/CyLib.c ****     *  PSoC 3 parts.
 829:Generated_Source\PSoC5/CyLib.c ****     *
 830:Generated_Source\PSoC5/CyLib.c ****     *  \param divider: Valid range [0-15]. The clock will be divided by this value + 1.
 831:Generated_Source\PSoC5/CyLib.c ****     *  For example, to divide this parameter by two should be set to 1.
 832:Generated_Source\PSoC5/CyLib.c ****     *
 833:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
 834:Generated_Source\PSoC5/CyLib.c ****     *  If this function execution resulted in the CPU clock frequency increasing,
 835:Generated_Source\PSoC5/CyLib.c ****     *  then the number of clock cycles the cache will wait before it samples data
 836:Generated_Source\PSoC5/CyLib.c ****     *  coming back from the Flash must be adjusted by calling
 837:Generated_Source\PSoC5/CyLib.c ****     *  CyFlash_SetWaitCycles() with an appropriate parameter. It can be optionally
 838:Generated_Source\PSoC5/CyLib.c ****     *  called if the CPU clock frequency is lowered in order to improve the CPU
 839:Generated_Source\PSoC5/CyLib.c ****     *  performance. See CyFlash_SetWaitCycles() description for more information.
 840:Generated_Source\PSoC5/CyLib.c ****     *
 841:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/CyLib.c ****     void CyCpuClk_SetDivider(uint8 divider) 
 843:Generated_Source\PSoC5/CyLib.c ****     {
 844:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_CLKDIST_MSTR1_REG = (CY_LIB_CLKDIST_MSTR1_REG & CY_LIB_CLKDIST_MSTR1_DIV_MASK) |
 845:Generated_Source\PSoC5/CyLib.c ****                                 ((uint8)(divider << CY_LIB_CLKDIST_DIV_POSITION));
 846:Generated_Source\PSoC5/CyLib.c ****     }
 847:Generated_Source\PSoC5/CyLib.c **** 
 848:Generated_Source\PSoC5/CyLib.c **** #endif /* (CY_PSOC3) */
 849:Generated_Source\PSoC5/CyLib.c **** 
 850:Generated_Source\PSoC5/CyLib.c **** 
 851:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 852:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyUsbClk_SetSource
 853:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 854:Generated_Source\PSoC5/CyLib.c **** *
 855:Generated_Source\PSoC5/CyLib.c **** *  Sets the source of the USB clock.
 856:Generated_Source\PSoC5/CyLib.c **** *
 857:Generated_Source\PSoC5/CyLib.c **** *  \param source: One of the four available USB clock sources
 858:Generated_Source\PSoC5/CyLib.c **** *    CY_LIB_USB_CLK_IMO2X     - IMO 2x
 859:Generated_Source\PSoC5/CyLib.c **** *    CY_LIB_USB_CLK_IMO       - IMO
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 44


 860:Generated_Source\PSoC5/CyLib.c **** *    CY_LIB_USB_CLK_PLL       - PLL
 861:Generated_Source\PSoC5/CyLib.c **** *    CY_LIB_USB_CLK_DSI       - DSI
 862:Generated_Source\PSoC5/CyLib.c **** *
 863:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 864:Generated_Source\PSoC5/CyLib.c **** void CyUsbClk_SetSource(uint8 source) 
 865:Generated_Source\PSoC5/CyLib.c **** {
 1584              		.loc 1 865 0
 1585              		.cfi_startproc
 1586              		@ args = 0, pretend = 0, frame = 8
 1587              		@ frame_needed = 1, uses_anonymous_args = 0
 1588              		@ link register save eliminated.
 1589 0000 80B4     		push	{r7}
 1590              		.cfi_def_cfa_offset 4
 1591              		.cfi_offset 7, -4
 1592 0002 83B0     		sub	sp, sp, #12
 1593              		.cfi_def_cfa_offset 16
 1594 0004 00AF     		add	r7, sp, #0
 1595              		.cfi_def_cfa_register 7
 1596 0006 0346     		mov	r3, r0
 1597 0008 FB71     		strb	r3, [r7, #7]
 866:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_UCFG_REG = (CY_LIB_CLKDIST_UCFG_REG & ((uint8)(~CY_LIB_CLKDIST_UCFG_SRC_SEL_MASK
 1598              		.loc 1 866 0
 1599 000a 0949     		ldr	r1, .L122
 1600 000c 084B     		ldr	r3, .L122
 1601 000e 1B78     		ldrb	r3, [r3]
 1602 0010 DBB2     		uxtb	r3, r3
 1603 0012 23F00303 		bic	r3, r3, #3
 1604 0016 DAB2     		uxtb	r2, r3
 1605 0018 FB79     		ldrb	r3, [r7, #7]
 1606 001a 03F00303 		and	r3, r3, #3
 1607 001e DBB2     		uxtb	r3, r3
 1608 0020 1343     		orrs	r3, r3, r2
 1609 0022 DBB2     		uxtb	r3, r3
 1610 0024 0B70     		strb	r3, [r1]
 867:Generated_Source\PSoC5/CyLib.c ****                         (CY_LIB_CLKDIST_UCFG_SRC_SEL_MASK & source);
 868:Generated_Source\PSoC5/CyLib.c **** }
 1611              		.loc 1 868 0
 1612 0026 0C37     		adds	r7, r7, #12
 1613              		.cfi_def_cfa_offset 4
 1614 0028 BD46     		mov	sp, r7
 1615              		.cfi_def_cfa_register 13
 1616              		@ sp needed
 1617 002a 5DF8047B 		ldr	r7, [sp], #4
 1618              		.cfi_restore 7
 1619              		.cfi_def_cfa_offset 0
 1620 002e 7047     		bx	lr
 1621              	.L123:
 1622              		.align	2
 1623              	.L122:
 1624 0030 09400040 		.word	1073758217
 1625              		.cfi_endproc
 1626              	.LFE16:
 1627              		.size	CyUsbClk_SetSource, .-CyUsbClk_SetSource
 1628              		.section	.text.CyILO_Start1K,"ax",%progbits
 1629              		.align	2
 1630              		.global	CyILO_Start1K
 1631              		.thumb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 45


 1632              		.thumb_func
 1633              		.type	CyILO_Start1K, %function
 1634              	CyILO_Start1K:
 1635              	.LFB17:
 869:Generated_Source\PSoC5/CyLib.c **** 
 870:Generated_Source\PSoC5/CyLib.c **** 
 871:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 872:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyILO_Start1K
 873:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 874:Generated_Source\PSoC5/CyLib.c **** *
 875:Generated_Source\PSoC5/CyLib.c **** *  Enables the ILO 1 KHz oscillator.
 876:Generated_Source\PSoC5/CyLib.c **** *
 877:Generated_Source\PSoC5/CyLib.c **** *  Note The ILO 1 KHz oscillator is always enabled by default, regardless of the
 878:Generated_Source\PSoC5/CyLib.c **** *  selection in the Clock Editor. Therefore, this API is only needed if the
 879:Generated_Source\PSoC5/CyLib.c **** *  oscillator was turned off manually.
 880:Generated_Source\PSoC5/CyLib.c **** *
 881:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 882:Generated_Source\PSoC5/CyLib.c **** void CyILO_Start1K(void) 
 883:Generated_Source\PSoC5/CyLib.c **** {
 1636              		.loc 1 883 0
 1637              		.cfi_startproc
 1638              		@ args = 0, pretend = 0, frame = 0
 1639              		@ frame_needed = 1, uses_anonymous_args = 0
 1640              		@ link register save eliminated.
 1641 0000 80B4     		push	{r7}
 1642              		.cfi_def_cfa_offset 4
 1643              		.cfi_offset 7, -4
 1644 0002 00AF     		add	r7, sp, #0
 1645              		.cfi_def_cfa_register 7
 884:Generated_Source\PSoC5/CyLib.c ****     /* Set bit 1 of ILO RS */
 885:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_SLOWCLK_ILO_CR0_REG |= CY_LIB_SLOWCLK_ILO_CR0_EN_1KHZ;
 1646              		.loc 1 885 0
 1647 0004 054A     		ldr	r2, .L125
 1648 0006 054B     		ldr	r3, .L125
 1649 0008 1B78     		ldrb	r3, [r3]
 1650 000a DBB2     		uxtb	r3, r3
 1651 000c 43F00203 		orr	r3, r3, #2
 1652 0010 DBB2     		uxtb	r3, r3
 1653 0012 1370     		strb	r3, [r2]
 886:Generated_Source\PSoC5/CyLib.c **** }
 1654              		.loc 1 886 0
 1655 0014 BD46     		mov	sp, r7
 1656              		.cfi_def_cfa_register 13
 1657              		@ sp needed
 1658 0016 5DF8047B 		ldr	r7, [sp], #4
 1659              		.cfi_restore 7
 1660              		.cfi_def_cfa_offset 0
 1661 001a 7047     		bx	lr
 1662              	.L126:
 1663              		.align	2
 1664              	.L125:
 1665 001c 00430040 		.word	1073758976
 1666              		.cfi_endproc
 1667              	.LFE17:
 1668              		.size	CyILO_Start1K, .-CyILO_Start1K
 1669              		.section	.text.CyILO_Stop1K,"ax",%progbits
 1670              		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 46


 1671              		.global	CyILO_Stop1K
 1672              		.thumb
 1673              		.thumb_func
 1674              		.type	CyILO_Stop1K, %function
 1675              	CyILO_Stop1K:
 1676              	.LFB18:
 887:Generated_Source\PSoC5/CyLib.c **** 
 888:Generated_Source\PSoC5/CyLib.c **** 
 889:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 890:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyILO_Stop1K
 891:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 892:Generated_Source\PSoC5/CyLib.c **** *
 893:Generated_Source\PSoC5/CyLib.c **** *  Disables the ILO 1 KHz oscillator.
 894:Generated_Source\PSoC5/CyLib.c **** *
 895:Generated_Source\PSoC5/CyLib.c **** *  Note The ILO 1 KHz oscillator must be enabled if the Sleep or Hibernate low
 896:Generated_Source\PSoC5/CyLib.c **** *  power mode APIs are expected to be used. For more information, refer to the
 897:Generated_Source\PSoC5/CyLib.c **** *  Power Management section of this document.
 898:Generated_Source\PSoC5/CyLib.c **** *
 899:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
 900:Generated_Source\PSoC5/CyLib.c **** *  PSoC5: Stopping the ILO 1 kHz could break the active WDT functionality.
 901:Generated_Source\PSoC5/CyLib.c **** *
 902:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 903:Generated_Source\PSoC5/CyLib.c **** void CyILO_Stop1K(void) 
 904:Generated_Source\PSoC5/CyLib.c **** {
 1677              		.loc 1 904 0
 1678              		.cfi_startproc
 1679              		@ args = 0, pretend = 0, frame = 0
 1680              		@ frame_needed = 1, uses_anonymous_args = 0
 1681              		@ link register save eliminated.
 1682 0000 80B4     		push	{r7}
 1683              		.cfi_def_cfa_offset 4
 1684              		.cfi_offset 7, -4
 1685 0002 00AF     		add	r7, sp, #0
 1686              		.cfi_def_cfa_register 7
 905:Generated_Source\PSoC5/CyLib.c ****     /* Clear bit 1 of ILO RS */
 906:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_SLOWCLK_ILO_CR0_REG &= ((uint8)(~CY_LIB_SLOWCLK_ILO_CR0_EN_1KHZ));
 1687              		.loc 1 906 0
 1688 0004 054A     		ldr	r2, .L128
 1689 0006 054B     		ldr	r3, .L128
 1690 0008 1B78     		ldrb	r3, [r3]
 1691 000a DBB2     		uxtb	r3, r3
 1692 000c 23F00203 		bic	r3, r3, #2
 1693 0010 DBB2     		uxtb	r3, r3
 1694 0012 1370     		strb	r3, [r2]
 907:Generated_Source\PSoC5/CyLib.c **** }
 1695              		.loc 1 907 0
 1696 0014 BD46     		mov	sp, r7
 1697              		.cfi_def_cfa_register 13
 1698              		@ sp needed
 1699 0016 5DF8047B 		ldr	r7, [sp], #4
 1700              		.cfi_restore 7
 1701              		.cfi_def_cfa_offset 0
 1702 001a 7047     		bx	lr
 1703              	.L129:
 1704              		.align	2
 1705              	.L128:
 1706 001c 00430040 		.word	1073758976
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 47


 1707              		.cfi_endproc
 1708              	.LFE18:
 1709              		.size	CyILO_Stop1K, .-CyILO_Stop1K
 1710              		.section	.text.CyILO_Start100K,"ax",%progbits
 1711              		.align	2
 1712              		.global	CyILO_Start100K
 1713              		.thumb
 1714              		.thumb_func
 1715              		.type	CyILO_Start100K, %function
 1716              	CyILO_Start100K:
 1717              	.LFB19:
 908:Generated_Source\PSoC5/CyLib.c **** 
 909:Generated_Source\PSoC5/CyLib.c **** 
 910:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 911:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyILO_Start100K
 912:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 913:Generated_Source\PSoC5/CyLib.c **** *
 914:Generated_Source\PSoC5/CyLib.c **** *  Enables the ILO 100 KHz oscillator.
 915:Generated_Source\PSoC5/CyLib.c **** *
 916:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 917:Generated_Source\PSoC5/CyLib.c **** void CyILO_Start100K(void) 
 918:Generated_Source\PSoC5/CyLib.c **** {
 1718              		.loc 1 918 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 0
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722              		@ link register save eliminated.
 1723 0000 80B4     		push	{r7}
 1724              		.cfi_def_cfa_offset 4
 1725              		.cfi_offset 7, -4
 1726 0002 00AF     		add	r7, sp, #0
 1727              		.cfi_def_cfa_register 7
 919:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_SLOWCLK_ILO_CR0_REG |= CY_LIB_SLOWCLK_ILO_CR0_EN_100KHZ;
 1728              		.loc 1 919 0
 1729 0004 054A     		ldr	r2, .L131
 1730 0006 054B     		ldr	r3, .L131
 1731 0008 1B78     		ldrb	r3, [r3]
 1732 000a DBB2     		uxtb	r3, r3
 1733 000c 43F00403 		orr	r3, r3, #4
 1734 0010 DBB2     		uxtb	r3, r3
 1735 0012 1370     		strb	r3, [r2]
 920:Generated_Source\PSoC5/CyLib.c **** }
 1736              		.loc 1 920 0
 1737 0014 BD46     		mov	sp, r7
 1738              		.cfi_def_cfa_register 13
 1739              		@ sp needed
 1740 0016 5DF8047B 		ldr	r7, [sp], #4
 1741              		.cfi_restore 7
 1742              		.cfi_def_cfa_offset 0
 1743 001a 7047     		bx	lr
 1744              	.L132:
 1745              		.align	2
 1746              	.L131:
 1747 001c 00430040 		.word	1073758976
 1748              		.cfi_endproc
 1749              	.LFE19:
 1750              		.size	CyILO_Start100K, .-CyILO_Start100K
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 48


 1751              		.section	.text.CyILO_Stop100K,"ax",%progbits
 1752              		.align	2
 1753              		.global	CyILO_Stop100K
 1754              		.thumb
 1755              		.thumb_func
 1756              		.type	CyILO_Stop100K, %function
 1757              	CyILO_Stop100K:
 1758              	.LFB20:
 921:Generated_Source\PSoC5/CyLib.c **** 
 922:Generated_Source\PSoC5/CyLib.c **** 
 923:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 924:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyILO_Stop100K
 925:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 926:Generated_Source\PSoC5/CyLib.c **** *
 927:Generated_Source\PSoC5/CyLib.c **** *  Disables the ILO 100 KHz oscillator.
 928:Generated_Source\PSoC5/CyLib.c **** *
 929:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 930:Generated_Source\PSoC5/CyLib.c **** void CyILO_Stop100K(void) 
 931:Generated_Source\PSoC5/CyLib.c **** {
 1759              		.loc 1 931 0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 0
 1762              		@ frame_needed = 1, uses_anonymous_args = 0
 1763              		@ link register save eliminated.
 1764 0000 80B4     		push	{r7}
 1765              		.cfi_def_cfa_offset 4
 1766              		.cfi_offset 7, -4
 1767 0002 00AF     		add	r7, sp, #0
 1768              		.cfi_def_cfa_register 7
 932:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_SLOWCLK_ILO_CR0_REG &= ((uint8)(~CY_LIB_SLOWCLK_ILO_CR0_EN_100KHZ));
 1769              		.loc 1 932 0
 1770 0004 054A     		ldr	r2, .L134
 1771 0006 054B     		ldr	r3, .L134
 1772 0008 1B78     		ldrb	r3, [r3]
 1773 000a DBB2     		uxtb	r3, r3
 1774 000c 23F00403 		bic	r3, r3, #4
 1775 0010 DBB2     		uxtb	r3, r3
 1776 0012 1370     		strb	r3, [r2]
 933:Generated_Source\PSoC5/CyLib.c **** }
 1777              		.loc 1 933 0
 1778 0014 BD46     		mov	sp, r7
 1779              		.cfi_def_cfa_register 13
 1780              		@ sp needed
 1781 0016 5DF8047B 		ldr	r7, [sp], #4
 1782              		.cfi_restore 7
 1783              		.cfi_def_cfa_offset 0
 1784 001a 7047     		bx	lr
 1785              	.L135:
 1786              		.align	2
 1787              	.L134:
 1788 001c 00430040 		.word	1073758976
 1789              		.cfi_endproc
 1790              	.LFE20:
 1791              		.size	CyILO_Stop100K, .-CyILO_Stop100K
 1792              		.section	.text.CyILO_Enable33K,"ax",%progbits
 1793              		.align	2
 1794              		.global	CyILO_Enable33K
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 49


 1795              		.thumb
 1796              		.thumb_func
 1797              		.type	CyILO_Enable33K, %function
 1798              	CyILO_Enable33K:
 1799              	.LFB21:
 934:Generated_Source\PSoC5/CyLib.c **** 
 935:Generated_Source\PSoC5/CyLib.c **** 
 936:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 937:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyILO_Enable33K
 938:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 939:Generated_Source\PSoC5/CyLib.c **** *
 940:Generated_Source\PSoC5/CyLib.c **** *  Enables the ILO 33 KHz divider.
 941:Generated_Source\PSoC5/CyLib.c **** *
 942:Generated_Source\PSoC5/CyLib.c **** *  Note that the 33 KHz clock is generated from the 100 KHz oscillator,
 943:Generated_Source\PSoC5/CyLib.c **** *  so it must also be running in order to generate the 33 KHz output.
 944:Generated_Source\PSoC5/CyLib.c **** *
 945:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 946:Generated_Source\PSoC5/CyLib.c **** void CyILO_Enable33K(void) 
 947:Generated_Source\PSoC5/CyLib.c **** {
 1800              		.loc 1 947 0
 1801              		.cfi_startproc
 1802              		@ args = 0, pretend = 0, frame = 0
 1803              		@ frame_needed = 1, uses_anonymous_args = 0
 1804              		@ link register save eliminated.
 1805 0000 80B4     		push	{r7}
 1806              		.cfi_def_cfa_offset 4
 1807              		.cfi_offset 7, -4
 1808 0002 00AF     		add	r7, sp, #0
 1809              		.cfi_def_cfa_register 7
 948:Generated_Source\PSoC5/CyLib.c ****     /* Set bit 5 of ILO RS */
 949:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_SLOWCLK_ILO_CR0_REG |= CY_LIB_SLOWCLK_ILO_CR0_EN_33KHZ;
 1810              		.loc 1 949 0
 1811 0004 054A     		ldr	r2, .L137
 1812 0006 054B     		ldr	r3, .L137
 1813 0008 1B78     		ldrb	r3, [r3]
 1814 000a DBB2     		uxtb	r3, r3
 1815 000c 43F02003 		orr	r3, r3, #32
 1816 0010 DBB2     		uxtb	r3, r3
 1817 0012 1370     		strb	r3, [r2]
 950:Generated_Source\PSoC5/CyLib.c **** }
 1818              		.loc 1 950 0
 1819 0014 BD46     		mov	sp, r7
 1820              		.cfi_def_cfa_register 13
 1821              		@ sp needed
 1822 0016 5DF8047B 		ldr	r7, [sp], #4
 1823              		.cfi_restore 7
 1824              		.cfi_def_cfa_offset 0
 1825 001a 7047     		bx	lr
 1826              	.L138:
 1827              		.align	2
 1828              	.L137:
 1829 001c 00430040 		.word	1073758976
 1830              		.cfi_endproc
 1831              	.LFE21:
 1832              		.size	CyILO_Enable33K, .-CyILO_Enable33K
 1833              		.section	.text.CyILO_Disable33K,"ax",%progbits
 1834              		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 50


 1835              		.global	CyILO_Disable33K
 1836              		.thumb
 1837              		.thumb_func
 1838              		.type	CyILO_Disable33K, %function
 1839              	CyILO_Disable33K:
 1840              	.LFB22:
 951:Generated_Source\PSoC5/CyLib.c **** 
 952:Generated_Source\PSoC5/CyLib.c **** 
 953:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 954:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyILO_Disable33K
 955:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 956:Generated_Source\PSoC5/CyLib.c **** *
 957:Generated_Source\PSoC5/CyLib.c **** *  Disables the ILO 33 KHz divider.
 958:Generated_Source\PSoC5/CyLib.c **** *
 959:Generated_Source\PSoC5/CyLib.c **** *  Note that the 33 KHz clock is generated from the 100 KHz oscillator, but this
 960:Generated_Source\PSoC5/CyLib.c **** *  API does not disable the 100 KHz clock.
 961:Generated_Source\PSoC5/CyLib.c **** *
 962:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 963:Generated_Source\PSoC5/CyLib.c **** void CyILO_Disable33K(void) 
 964:Generated_Source\PSoC5/CyLib.c **** {
 1841              		.loc 1 964 0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 0
 1844              		@ frame_needed = 1, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
 1846 0000 80B4     		push	{r7}
 1847              		.cfi_def_cfa_offset 4
 1848              		.cfi_offset 7, -4
 1849 0002 00AF     		add	r7, sp, #0
 1850              		.cfi_def_cfa_register 7
 965:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_SLOWCLK_ILO_CR0_REG &= ((uint8)(~CY_LIB_SLOWCLK_ILO_CR0_EN_33KHZ));
 1851              		.loc 1 965 0
 1852 0004 054A     		ldr	r2, .L140
 1853 0006 054B     		ldr	r3, .L140
 1854 0008 1B78     		ldrb	r3, [r3]
 1855 000a DBB2     		uxtb	r3, r3
 1856 000c 23F02003 		bic	r3, r3, #32
 1857 0010 DBB2     		uxtb	r3, r3
 1858 0012 1370     		strb	r3, [r2]
 966:Generated_Source\PSoC5/CyLib.c **** }
 1859              		.loc 1 966 0
 1860 0014 BD46     		mov	sp, r7
 1861              		.cfi_def_cfa_register 13
 1862              		@ sp needed
 1863 0016 5DF8047B 		ldr	r7, [sp], #4
 1864              		.cfi_restore 7
 1865              		.cfi_def_cfa_offset 0
 1866 001a 7047     		bx	lr
 1867              	.L141:
 1868              		.align	2
 1869              	.L140:
 1870 001c 00430040 		.word	1073758976
 1871              		.cfi_endproc
 1872              	.LFE22:
 1873              		.size	CyILO_Disable33K, .-CyILO_Disable33K
 1874              		.section	.text.CyILO_SetSource,"ax",%progbits
 1875              		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 51


 1876              		.global	CyILO_SetSource
 1877              		.thumb
 1878              		.thumb_func
 1879              		.type	CyILO_SetSource, %function
 1880              	CyILO_SetSource:
 1881              	.LFB23:
 967:Generated_Source\PSoC5/CyLib.c **** 
 968:Generated_Source\PSoC5/CyLib.c **** 
 969:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 970:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyILO_SetSource
 971:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 972:Generated_Source\PSoC5/CyLib.c **** *
 973:Generated_Source\PSoC5/CyLib.c **** *  Sets the source of the clock output from the ILO block.
 974:Generated_Source\PSoC5/CyLib.c **** *
 975:Generated_Source\PSoC5/CyLib.c **** *  \param source: One of the three available ILO output sources
 976:Generated_Source\PSoC5/CyLib.c **** *       Value        Define                Source
 977:Generated_Source\PSoC5/CyLib.c **** *       0            CY_ILO_SOURCE_100K    ILO 100 KHz
 978:Generated_Source\PSoC5/CyLib.c **** *       1            CY_ILO_SOURCE_33K     ILO 33 KHz
 979:Generated_Source\PSoC5/CyLib.c **** *       2            CY_ILO_SOURCE_1K      ILO 1 KHz
 980:Generated_Source\PSoC5/CyLib.c **** *
 981:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/CyLib.c **** void CyILO_SetSource(uint8 source) 
 983:Generated_Source\PSoC5/CyLib.c **** {
 1882              		.loc 1 983 0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 8
 1885              		@ frame_needed = 1, uses_anonymous_args = 0
 1886              		@ link register save eliminated.
 1887 0000 80B4     		push	{r7}
 1888              		.cfi_def_cfa_offset 4
 1889              		.cfi_offset 7, -4
 1890 0002 83B0     		sub	sp, sp, #12
 1891              		.cfi_def_cfa_offset 16
 1892 0004 00AF     		add	r7, sp, #0
 1893              		.cfi_def_cfa_register 7
 1894 0006 0346     		mov	r3, r0
 1895 0008 FB71     		strb	r3, [r7, #7]
 984:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_CR_REG = (CY_LIB_CLKDIST_CR_REG & CY_ILO_SOURCE_BITS_CLEAR) |
 1896              		.loc 1 984 0
 1897 000a 4FF04021 		mov	r1, #1073758208
 1898 000e 4FF04023 		mov	r3, #1073758208
 1899 0012 1B78     		ldrb	r3, [r3]
 1900 0014 DBB2     		uxtb	r3, r3
 1901 0016 23F00C03 		bic	r3, r3, #12
 1902 001a DAB2     		uxtb	r2, r3
 985:Generated_Source\PSoC5/CyLib.c ****                     (((uint8) (source << 2u)) & ((uint8)(~CY_ILO_SOURCE_BITS_CLEAR)));
 1903              		.loc 1 985 0
 1904 001c FB79     		ldrb	r3, [r7, #7]
 1905 001e 9B00     		lsls	r3, r3, #2
 1906 0020 DBB2     		uxtb	r3, r3
 984:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_CLKDIST_CR_REG = (CY_LIB_CLKDIST_CR_REG & CY_ILO_SOURCE_BITS_CLEAR) |
 1907              		.loc 1 984 0
 1908 0022 03F00C03 		and	r3, r3, #12
 1909 0026 DBB2     		uxtb	r3, r3
 1910 0028 1343     		orrs	r3, r3, r2
 1911 002a DBB2     		uxtb	r3, r3
 1912 002c 0B70     		strb	r3, [r1]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 52


 986:Generated_Source\PSoC5/CyLib.c **** }
 1913              		.loc 1 986 0
 1914 002e 0C37     		adds	r7, r7, #12
 1915              		.cfi_def_cfa_offset 4
 1916 0030 BD46     		mov	sp, r7
 1917              		.cfi_def_cfa_register 13
 1918              		@ sp needed
 1919 0032 5DF8047B 		ldr	r7, [sp], #4
 1920              		.cfi_restore 7
 1921              		.cfi_def_cfa_offset 0
 1922 0036 7047     		bx	lr
 1923              		.cfi_endproc
 1924              	.LFE23:
 1925              		.size	CyILO_SetSource, .-CyILO_SetSource
 1926              		.section	.text.CyILO_SetPowerMode,"ax",%progbits
 1927              		.align	2
 1928              		.global	CyILO_SetPowerMode
 1929              		.thumb
 1930              		.thumb_func
 1931              		.type	CyILO_SetPowerMode, %function
 1932              	CyILO_SetPowerMode:
 1933              	.LFB24:
 987:Generated_Source\PSoC5/CyLib.c **** 
 988:Generated_Source\PSoC5/CyLib.c **** 
 989:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
 990:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyILO_SetPowerMode
 991:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
 992:Generated_Source\PSoC5/CyLib.c **** *
 993:Generated_Source\PSoC5/CyLib.c **** * Sets the power mode used by the ILO during power down. Allows for lower power
 994:Generated_Source\PSoC5/CyLib.c **** * down power usage resulting in a slower startup time.
 995:Generated_Source\PSoC5/CyLib.c **** *
 996:Generated_Source\PSoC5/CyLib.c **** * \param mode
 997:Generated_Source\PSoC5/CyLib.c **** * CY_ILO_FAST_START - Faster start-up, internal bias left on when powered down
 998:Generated_Source\PSoC5/CyLib.c **** * CY_ILO_SLOW_START - Slower start-up, internal bias off when powered down
 999:Generated_Source\PSoC5/CyLib.c **** *
1000:Generated_Source\PSoC5/CyLib.c **** * \return Prevous power mode state.
1001:Generated_Source\PSoC5/CyLib.c **** *
1002:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1003:Generated_Source\PSoC5/CyLib.c **** uint8 CyILO_SetPowerMode(uint8 mode) 
1004:Generated_Source\PSoC5/CyLib.c **** {
 1934              		.loc 1 1004 0
 1935              		.cfi_startproc
 1936              		@ args = 0, pretend = 0, frame = 16
 1937              		@ frame_needed = 1, uses_anonymous_args = 0
 1938              		@ link register save eliminated.
 1939 0000 80B4     		push	{r7}
 1940              		.cfi_def_cfa_offset 4
 1941              		.cfi_offset 7, -4
 1942 0002 85B0     		sub	sp, sp, #20
 1943              		.cfi_def_cfa_offset 24
 1944 0004 00AF     		add	r7, sp, #0
 1945              		.cfi_def_cfa_register 7
 1946 0006 0346     		mov	r3, r0
 1947 0008 FB71     		strb	r3, [r7, #7]
1005:Generated_Source\PSoC5/CyLib.c ****     uint8 state;
1006:Generated_Source\PSoC5/CyLib.c **** 
1007:Generated_Source\PSoC5/CyLib.c ****     /* Get current state. */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 53


1008:Generated_Source\PSoC5/CyLib.c ****     state = CY_LIB_SLOWCLK_ILO_CR0_REG;
 1948              		.loc 1 1008 0
 1949 000a 0F4B     		ldr	r3, .L147
 1950 000c 1B78     		ldrb	r3, [r3]
 1951 000e FB73     		strb	r3, [r7, #15]
1009:Generated_Source\PSoC5/CyLib.c **** 
1010:Generated_Source\PSoC5/CyLib.c ****     /* Set the oscillator power mode. */
1011:Generated_Source\PSoC5/CyLib.c ****     if(mode != CY_ILO_FAST_START)
 1952              		.loc 1 1011 0
 1953 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1954 0012 002B     		cmp	r3, #0
 1955 0014 06D0     		beq	.L144
1012:Generated_Source\PSoC5/CyLib.c ****     {
1013:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_SLOWCLK_ILO_CR0_REG = (state | CY_ILO_CONTROL_PD_MODE);
 1956              		.loc 1 1013 0
 1957 0016 0C4A     		ldr	r2, .L147
 1958 0018 FB7B     		ldrb	r3, [r7, #15]
 1959 001a 43F01003 		orr	r3, r3, #16
 1960 001e DBB2     		uxtb	r3, r3
 1961 0020 1370     		strb	r3, [r2]
 1962 0022 05E0     		b	.L145
 1963              	.L144:
1014:Generated_Source\PSoC5/CyLib.c ****     }
1015:Generated_Source\PSoC5/CyLib.c ****     else
1016:Generated_Source\PSoC5/CyLib.c ****     {
1017:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_SLOWCLK_ILO_CR0_REG = (state & ((uint8)(~CY_ILO_CONTROL_PD_MODE)));
 1964              		.loc 1 1017 0
 1965 0024 084A     		ldr	r2, .L147
 1966 0026 FB7B     		ldrb	r3, [r7, #15]
 1967 0028 23F01003 		bic	r3, r3, #16
 1968 002c DBB2     		uxtb	r3, r3
 1969 002e 1370     		strb	r3, [r2]
 1970              	.L145:
1018:Generated_Source\PSoC5/CyLib.c ****     }
1019:Generated_Source\PSoC5/CyLib.c **** 
1020:Generated_Source\PSoC5/CyLib.c ****     /* Return old mode. */
1021:Generated_Source\PSoC5/CyLib.c ****     return ((state & CY_ILO_CONTROL_PD_MODE) >> CY_ILO_CONTROL_PD_POSITION);
 1971              		.loc 1 1021 0
 1972 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1973 0032 03F01003 		and	r3, r3, #16
 1974 0036 1B09     		lsrs	r3, r3, #4
 1975 0038 DBB2     		uxtb	r3, r3
1022:Generated_Source\PSoC5/CyLib.c **** }
 1976              		.loc 1 1022 0
 1977 003a 1846     		mov	r0, r3
 1978 003c 1437     		adds	r7, r7, #20
 1979              		.cfi_def_cfa_offset 4
 1980 003e BD46     		mov	sp, r7
 1981              		.cfi_def_cfa_register 13
 1982              		@ sp needed
 1983 0040 5DF8047B 		ldr	r7, [sp], #4
 1984              		.cfi_restore 7
 1985              		.cfi_def_cfa_offset 0
 1986 0044 7047     		bx	lr
 1987              	.L148:
 1988 0046 00BF     		.align	2
 1989              	.L147:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 54


 1990 0048 00430040 		.word	1073758976
 1991              		.cfi_endproc
 1992              	.LFE24:
 1993              		.size	CyILO_SetPowerMode, .-CyILO_SetPowerMode
 1994              		.section	.text.CyXTAL_32KHZ_Start,"ax",%progbits
 1995              		.align	2
 1996              		.global	CyXTAL_32KHZ_Start
 1997              		.thumb
 1998              		.thumb_func
 1999              		.type	CyXTAL_32KHZ_Start, %function
 2000              	CyXTAL_32KHZ_Start:
 2001              	.LFB25:
1023:Generated_Source\PSoC5/CyLib.c **** 
1024:Generated_Source\PSoC5/CyLib.c **** 
1025:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1026:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_32KHZ_Start
1027:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1028:Generated_Source\PSoC5/CyLib.c **** *
1029:Generated_Source\PSoC5/CyLib.c **** *  Enables the 32 KHz Crystal Oscillator.
1030:Generated_Source\PSoC5/CyLib.c **** *
1031:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1032:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_32KHZ_Start(void) 
1033:Generated_Source\PSoC5/CyLib.c **** {
 2002              		.loc 1 1033 0
 2003              		.cfi_startproc
 2004              		@ args = 0, pretend = 0, frame = 8
 2005              		@ frame_needed = 1, uses_anonymous_args = 0
 2006 0000 80B5     		push	{r7, lr}
 2007              		.cfi_def_cfa_offset 8
 2008              		.cfi_offset 7, -8
 2009              		.cfi_offset 14, -4
 2010 0002 82B0     		sub	sp, sp, #8
 2011              		.cfi_def_cfa_offset 16
 2012 0004 00AF     		add	r7, sp, #0
 2013              		.cfi_def_cfa_register 7
1034:Generated_Source\PSoC5/CyLib.c ****     volatile uint16 i;
1035:Generated_Source\PSoC5/CyLib.c **** 
1036:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XTAL32_TST_REG = CY_CLK_XTAL32_TST_DEFAULT;
 2014              		.loc 1 1036 0
 2015 0006 1B4B     		ldr	r3, .L154
 2016 0008 F322     		movs	r2, #243
 2017 000a 1A70     		strb	r2, [r3]
1037:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XTAL32_TR_REG  = CY_CLK_XTAL32_TR_STARTUP;
 2018              		.loc 1 1037 0
 2019 000c 1A4B     		ldr	r3, .L154+4
 2020 000e 0322     		movs	r2, #3
 2021 0010 1A70     		strb	r2, [r3]
1038:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XTAL32_CFG_REG = (CY_CLK_XTAL32_CFG_REG & ((uint8)(~CY_CLK_XTAL32_CFG_LP_MASK))) |
 2022              		.loc 1 1038 0
 2023 0012 1A4A     		ldr	r2, .L154+8
 2024 0014 194B     		ldr	r3, .L154+8
 2025 0016 1B78     		ldrb	r3, [r3]
 2026 0018 DBB2     		uxtb	r3, r3
 2027 001a 23F00C03 		bic	r3, r3, #12
 2028 001e DBB2     		uxtb	r3, r3
 2029 0020 43F00403 		orr	r3, r3, #4
 2030 0024 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 55


 2031 0026 1370     		strb	r3, [r2]
1039:Generated_Source\PSoC5/CyLib.c ****                                 CY_CLK_XTAL32_CFG_LP_DEFAULT;
1040:Generated_Source\PSoC5/CyLib.c **** 
1041:Generated_Source\PSoC5/CyLib.c ****     #if(CY_PSOC3)
1042:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_XTAL32_CR_REG |= CY_CLK_XTAL32_CR_PDBEN;
1043:Generated_Source\PSoC5/CyLib.c ****     #endif  /* (CY_PSOC3) */
1044:Generated_Source\PSoC5/CyLib.c **** 
1045:Generated_Source\PSoC5/CyLib.c ****     /* Enable operation of 32K Crystal Oscillator */
1046:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XTAL32_CR_REG |= CY_CLK_XTAL32_CR_EN;
 2032              		.loc 1 1046 0
 2033 0028 154A     		ldr	r2, .L154+12
 2034 002a 154B     		ldr	r3, .L154+12
 2035 002c 1B78     		ldrb	r3, [r3]
 2036 002e DBB2     		uxtb	r3, r3
 2037 0030 43F00103 		orr	r3, r3, #1
 2038 0034 DBB2     		uxtb	r3, r3
 2039 0036 1370     		strb	r3, [r2]
1047:Generated_Source\PSoC5/CyLib.c **** 
1048:Generated_Source\PSoC5/CyLib.c ****     for (i = 1000u; i > 0u; i--)
 2040              		.loc 1 1048 0
 2041 0038 4FF47A73 		mov	r3, #1000
 2042 003c FB80     		strh	r3, [r7, #6]	@ movhi
 2043 003e 12E0     		b	.L150
 2044              	.L153:
1049:Generated_Source\PSoC5/CyLib.c ****     {
1050:Generated_Source\PSoC5/CyLib.c ****         if(0u != (CyXTAL_32KHZ_ReadStatus() & CY_XTAL32K_ANA_STAT))
 2045              		.loc 1 1050 0
 2046 0040 FFF7FEFF 		bl	CyXTAL_32KHZ_ReadStatus
 2047 0044 0346     		mov	r3, r0
 2048 0046 03F02003 		and	r3, r3, #32
 2049 004a 002B     		cmp	r3, #0
 2050 004c 03D0     		beq	.L151
1051:Generated_Source\PSoC5/CyLib.c ****         {
1052:Generated_Source\PSoC5/CyLib.c ****             /* Ready - switch to high power mode */
1053:Generated_Source\PSoC5/CyLib.c ****             (void) CyXTAL_32KHZ_SetPowerMode(0u);
 2051              		.loc 1 1053 0
 2052 004e 0020     		movs	r0, #0
 2053 0050 FFF7FEFF 		bl	CyXTAL_32KHZ_SetPowerMode
1054:Generated_Source\PSoC5/CyLib.c **** 
1055:Generated_Source\PSoC5/CyLib.c ****             break;
 2054              		.loc 1 1055 0
 2055 0054 0BE0     		b	.L149
 2056              	.L151:
1056:Generated_Source\PSoC5/CyLib.c ****         }
1057:Generated_Source\PSoC5/CyLib.c ****         CyDelayUs(1u);
 2057              		.loc 1 1057 0 discriminator 2
 2058 0056 0120     		movs	r0, #1
 2059 0058 FFF7FEFF 		bl	CyDelayUs
1048:Generated_Source\PSoC5/CyLib.c ****     {
 2060              		.loc 1 1048 0 discriminator 2
 2061 005c FB88     		ldrh	r3, [r7, #6]	@ movhi
 2062 005e 9BB2     		uxth	r3, r3
 2063 0060 013B     		subs	r3, r3, #1
 2064 0062 9BB2     		uxth	r3, r3
 2065 0064 FB80     		strh	r3, [r7, #6]	@ movhi
 2066              	.L150:
1048:Generated_Source\PSoC5/CyLib.c ****     {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 56


 2067              		.loc 1 1048 0 is_stmt 0 discriminator 1
 2068 0066 FB88     		ldrh	r3, [r7, #6]	@ movhi
 2069 0068 9BB2     		uxth	r3, r3
 2070 006a 002B     		cmp	r3, #0
 2071 006c E8D1     		bne	.L153
 2072              	.L149:
1058:Generated_Source\PSoC5/CyLib.c ****     }
1059:Generated_Source\PSoC5/CyLib.c **** }
 2073              		.loc 1 1059 0 is_stmt 1
 2074 006e 0837     		adds	r7, r7, #8
 2075              		.cfi_def_cfa_offset 8
 2076 0070 BD46     		mov	sp, r7
 2077              		.cfi_def_cfa_register 13
 2078              		@ sp needed
 2079 0072 80BD     		pop	{r7, pc}
 2080              	.L155:
 2081              		.align	2
 2082              	.L154:
 2083 0074 0A430040 		.word	1073758986
 2084 0078 98460040 		.word	1073759896
 2085 007c 09430040 		.word	1073758985
 2086 0080 08430040 		.word	1073758984
 2087              		.cfi_endproc
 2088              	.LFE25:
 2089              		.size	CyXTAL_32KHZ_Start, .-CyXTAL_32KHZ_Start
 2090              		.section	.text.CyXTAL_32KHZ_Stop,"ax",%progbits
 2091              		.align	2
 2092              		.global	CyXTAL_32KHZ_Stop
 2093              		.thumb
 2094              		.thumb_func
 2095              		.type	CyXTAL_32KHZ_Stop, %function
 2096              	CyXTAL_32KHZ_Stop:
 2097              	.LFB26:
1060:Generated_Source\PSoC5/CyLib.c **** 
1061:Generated_Source\PSoC5/CyLib.c **** 
1062:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1063:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_32KHZ_Stop
1064:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1065:Generated_Source\PSoC5/CyLib.c **** *
1066:Generated_Source\PSoC5/CyLib.c **** *  Disables the 32KHz Crystal Oscillator.
1067:Generated_Source\PSoC5/CyLib.c **** *
1068:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1069:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_32KHZ_Stop(void) 
1070:Generated_Source\PSoC5/CyLib.c **** {
 2098              		.loc 1 1070 0
 2099              		.cfi_startproc
 2100              		@ args = 0, pretend = 0, frame = 0
 2101              		@ frame_needed = 1, uses_anonymous_args = 0
 2102              		@ link register save eliminated.
 2103 0000 80B4     		push	{r7}
 2104              		.cfi_def_cfa_offset 4
 2105              		.cfi_offset 7, -4
 2106 0002 00AF     		add	r7, sp, #0
 2107              		.cfi_def_cfa_register 7
1071:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XTAL32_TST_REG  = CY_CLK_XTAL32_TST_DEFAULT;
 2108              		.loc 1 1071 0
 2109 0004 0E4B     		ldr	r3, .L157
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 57


 2110 0006 F322     		movs	r2, #243
 2111 0008 1A70     		strb	r2, [r3]
1072:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XTAL32_TR_REG   = CY_CLK_XTAL32_TR_POWERDOWN;
 2112              		.loc 1 1072 0
 2113 000a 0E4B     		ldr	r3, .L157+4
 2114 000c 0022     		movs	r2, #0
 2115 000e 1A70     		strb	r2, [r3]
1073:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XTAL32_CFG_REG = (CY_CLK_XTAL32_CFG_REG & ((uint8)(~CY_CLK_XTAL32_CFG_LP_MASK))) |
 2116              		.loc 1 1073 0
 2117 0010 0D4A     		ldr	r2, .L157+8
 2118 0012 0D4B     		ldr	r3, .L157+8
 2119 0014 1B78     		ldrb	r3, [r3]
 2120 0016 DBB2     		uxtb	r3, r3
 2121 0018 23F00C03 		bic	r3, r3, #12
 2122 001c DBB2     		uxtb	r3, r3
 2123 001e 43F00403 		orr	r3, r3, #4
 2124 0022 DBB2     		uxtb	r3, r3
 2125 0024 1370     		strb	r3, [r2]
1074:Generated_Source\PSoC5/CyLib.c ****                              CY_CLK_XTAL32_CFG_LP_DEFAULT;
1075:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XTAL32_CR_REG &= ((uint8)(~(CY_CLK_XTAL32_CR_EN | CY_CLK_XTAL32_CR_LPM)));
 2126              		.loc 1 1075 0
 2127 0026 094A     		ldr	r2, .L157+12
 2128 0028 084B     		ldr	r3, .L157+12
 2129 002a 1B78     		ldrb	r3, [r3]
 2130 002c DBB2     		uxtb	r3, r3
 2131 002e 23F00303 		bic	r3, r3, #3
 2132 0032 DBB2     		uxtb	r3, r3
 2133 0034 1370     		strb	r3, [r2]
1076:Generated_Source\PSoC5/CyLib.c **** 
1077:Generated_Source\PSoC5/CyLib.c ****     #if(CY_PSOC3)
1078:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_XTAL32_CR_REG &= ((uint8)(~CY_CLK_XTAL32_CR_PDBEN));
1079:Generated_Source\PSoC5/CyLib.c ****     #endif  /* (CY_PSOC3) */
1080:Generated_Source\PSoC5/CyLib.c **** }
 2134              		.loc 1 1080 0
 2135 0036 BD46     		mov	sp, r7
 2136              		.cfi_def_cfa_register 13
 2137              		@ sp needed
 2138 0038 5DF8047B 		ldr	r7, [sp], #4
 2139              		.cfi_restore 7
 2140              		.cfi_def_cfa_offset 0
 2141 003c 7047     		bx	lr
 2142              	.L158:
 2143 003e 00BF     		.align	2
 2144              	.L157:
 2145 0040 0A430040 		.word	1073758986
 2146 0044 98460040 		.word	1073759896
 2147 0048 09430040 		.word	1073758985
 2148 004c 08430040 		.word	1073758984
 2149              		.cfi_endproc
 2150              	.LFE26:
 2151              		.size	CyXTAL_32KHZ_Stop, .-CyXTAL_32KHZ_Stop
 2152              		.section	.text.CyXTAL_32KHZ_ReadStatus,"ax",%progbits
 2153              		.align	2
 2154              		.global	CyXTAL_32KHZ_ReadStatus
 2155              		.thumb
 2156              		.thumb_func
 2157              		.type	CyXTAL_32KHZ_ReadStatus, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 58


 2158              	CyXTAL_32KHZ_ReadStatus:
 2159              	.LFB27:
1081:Generated_Source\PSoC5/CyLib.c **** 
1082:Generated_Source\PSoC5/CyLib.c **** 
1083:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1084:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_32KHZ_ReadStatus
1085:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1086:Generated_Source\PSoC5/CyLib.c **** *
1087:Generated_Source\PSoC5/CyLib.c **** *  Returns status of the 32 KHz oscillator.
1088:Generated_Source\PSoC5/CyLib.c **** *
1089:Generated_Source\PSoC5/CyLib.c **** * \return
1090:Generated_Source\PSoC5/CyLib.c **** *  Value     Define                    Source
1091:Generated_Source\PSoC5/CyLib.c **** *  20        CY_XTAL32K_ANA_STAT       Analog measurement
1092:Generated_Source\PSoC5/CyLib.c **** *                                       1: Stable
1093:Generated_Source\PSoC5/CyLib.c **** *                                       0: Not stable
1094:Generated_Source\PSoC5/CyLib.c **** *
1095:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1096:Generated_Source\PSoC5/CyLib.c **** uint8 CyXTAL_32KHZ_ReadStatus(void) 
1097:Generated_Source\PSoC5/CyLib.c **** {
 2160              		.loc 1 1097 0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 0
 2163              		@ frame_needed = 1, uses_anonymous_args = 0
 2164              		@ link register save eliminated.
 2165 0000 80B4     		push	{r7}
 2166              		.cfi_def_cfa_offset 4
 2167              		.cfi_offset 7, -4
 2168 0002 00AF     		add	r7, sp, #0
 2169              		.cfi_def_cfa_register 7
1098:Generated_Source\PSoC5/CyLib.c ****     return(CY_CLK_XTAL32_CR_REG & CY_XTAL32K_ANA_STAT);
 2170              		.loc 1 1098 0
 2171 0004 054B     		ldr	r3, .L161
 2172 0006 1B78     		ldrb	r3, [r3]
 2173 0008 DBB2     		uxtb	r3, r3
 2174 000a 03F02003 		and	r3, r3, #32
 2175 000e DBB2     		uxtb	r3, r3
1099:Generated_Source\PSoC5/CyLib.c **** }
 2176              		.loc 1 1099 0
 2177 0010 1846     		mov	r0, r3
 2178 0012 BD46     		mov	sp, r7
 2179              		.cfi_def_cfa_register 13
 2180              		@ sp needed
 2181 0014 5DF8047B 		ldr	r7, [sp], #4
 2182              		.cfi_restore 7
 2183              		.cfi_def_cfa_offset 0
 2184 0018 7047     		bx	lr
 2185              	.L162:
 2186 001a 00BF     		.align	2
 2187              	.L161:
 2188 001c 08430040 		.word	1073758984
 2189              		.cfi_endproc
 2190              	.LFE27:
 2191              		.size	CyXTAL_32KHZ_ReadStatus, .-CyXTAL_32KHZ_ReadStatus
 2192              		.section	.text.CyXTAL_32KHZ_SetPowerMode,"ax",%progbits
 2193              		.align	2
 2194              		.global	CyXTAL_32KHZ_SetPowerMode
 2195              		.thumb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 59


 2196              		.thumb_func
 2197              		.type	CyXTAL_32KHZ_SetPowerMode, %function
 2198              	CyXTAL_32KHZ_SetPowerMode:
 2199              	.LFB28:
1100:Generated_Source\PSoC5/CyLib.c **** 
1101:Generated_Source\PSoC5/CyLib.c **** 
1102:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1103:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_32KHZ_SetPowerMode
1104:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1105:Generated_Source\PSoC5/CyLib.c **** *
1106:Generated_Source\PSoC5/CyLib.c **** *  Sets the power mode for the 32 KHz oscillator used during the sleep mode.
1107:Generated_Source\PSoC5/CyLib.c **** *  Allows for lower power during sleep when there are fewer sources of noise.
1108:Generated_Source\PSoC5/CyLib.c **** *  During the active mode the oscillator is always run in the high power mode.
1109:Generated_Source\PSoC5/CyLib.c **** *
1110:Generated_Source\PSoC5/CyLib.c **** *  uint8 mode
1111:Generated_Source\PSoC5/CyLib.c **** *       \param 0: High power mode
1112:Generated_Source\PSoC5/CyLib.c **** *       \param 1: Low power mode during sleep
1113:Generated_Source\PSoC5/CyLib.c **** *
1114:Generated_Source\PSoC5/CyLib.c **** * \return
1115:Generated_Source\PSoC5/CyLib.c **** *  Previous power mode.
1116:Generated_Source\PSoC5/CyLib.c **** *
1117:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1118:Generated_Source\PSoC5/CyLib.c **** uint8 CyXTAL_32KHZ_SetPowerMode(uint8 mode) 
1119:Generated_Source\PSoC5/CyLib.c **** {
 2200              		.loc 1 1119 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 16
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204 0000 80B5     		push	{r7, lr}
 2205              		.cfi_def_cfa_offset 8
 2206              		.cfi_offset 7, -8
 2207              		.cfi_offset 14, -4
 2208 0002 84B0     		sub	sp, sp, #16
 2209              		.cfi_def_cfa_offset 24
 2210 0004 00AF     		add	r7, sp, #0
 2211              		.cfi_def_cfa_register 7
 2212 0006 0346     		mov	r3, r0
 2213 0008 FB71     		strb	r3, [r7, #7]
1120:Generated_Source\PSoC5/CyLib.c ****     uint8 state = (0u != (CY_CLK_XTAL32_CR_REG & CY_CLK_XTAL32_CR_LPM)) ? 1u : 0u;
 2214              		.loc 1 1120 0
 2215 000a 264B     		ldr	r3, .L169
 2216 000c 1B78     		ldrb	r3, [r3]
 2217 000e DBB2     		uxtb	r3, r3
 2218 0010 03F00203 		and	r3, r3, #2
 2219 0014 002B     		cmp	r3, #0
 2220 0016 01D0     		beq	.L164
 2221              		.loc 1 1120 0 is_stmt 0 discriminator 1
 2222 0018 0123     		movs	r3, #1
 2223 001a 00E0     		b	.L165
 2224              	.L164:
 2225              		.loc 1 1120 0 discriminator 2
 2226 001c 0023     		movs	r3, #0
 2227              	.L165:
 2228              		.loc 1 1120 0 discriminator 4
 2229 001e FB73     		strb	r3, [r7, #15]
1121:Generated_Source\PSoC5/CyLib.c **** 
1122:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XTAL32_TST_REG = CY_CLK_XTAL32_TST_DEFAULT;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 60


 2230              		.loc 1 1122 0 is_stmt 1 discriminator 4
 2231 0020 214B     		ldr	r3, .L169+4
 2232 0022 F322     		movs	r2, #243
 2233 0024 1A70     		strb	r2, [r3]
1123:Generated_Source\PSoC5/CyLib.c **** 
1124:Generated_Source\PSoC5/CyLib.c ****     if(1u == mode)
 2234              		.loc 1 1124 0 discriminator 4
 2235 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2236 0028 012B     		cmp	r3, #1
 2237 002a 1CD1     		bne	.L166
1125:Generated_Source\PSoC5/CyLib.c ****     {
1126:Generated_Source\PSoC5/CyLib.c ****         /* Low power mode during Sleep */
1127:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_XTAL32_TR_REG  = CY_CLK_XTAL32_TR_LOW_POWER;
 2238              		.loc 1 1127 0
 2239 002c 1F4B     		ldr	r3, .L169+8
 2240 002e 0122     		movs	r2, #1
 2241 0030 1A70     		strb	r2, [r3]
1128:Generated_Source\PSoC5/CyLib.c ****         CyDelayUs(10u);
 2242              		.loc 1 1128 0
 2243 0032 0A20     		movs	r0, #10
 2244 0034 FFF7FEFF 		bl	CyDelayUs
1129:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_XTAL32_CFG_REG = (CY_CLK_XTAL32_CFG_REG & ((uint8)(~CY_CLK_XTAL32_CFG_LP_MASK))) |
 2245              		.loc 1 1129 0
 2246 0038 1D4A     		ldr	r2, .L169+12
 2247 003a 1D4B     		ldr	r3, .L169+12
 2248 003c 1B78     		ldrb	r3, [r3]
 2249 003e DBB2     		uxtb	r3, r3
 2250 0040 23F00C03 		bic	r3, r3, #12
 2251 0044 DBB2     		uxtb	r3, r3
 2252 0046 43F00803 		orr	r3, r3, #8
 2253 004a DBB2     		uxtb	r3, r3
 2254 004c 1370     		strb	r3, [r2]
1130:Generated_Source\PSoC5/CyLib.c ****                                 CY_CLK_XTAL32_CFG_LP_LOWPOWER;
1131:Generated_Source\PSoC5/CyLib.c ****         CyDelayUs(20u);
 2255              		.loc 1 1131 0
 2256 004e 1420     		movs	r0, #20
 2257 0050 FFF7FEFF 		bl	CyDelayUs
1132:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_XTAL32_CR_REG |= CY_CLK_XTAL32_CR_LPM;
 2258              		.loc 1 1132 0
 2259 0054 134A     		ldr	r2, .L169
 2260 0056 134B     		ldr	r3, .L169
 2261 0058 1B78     		ldrb	r3, [r3]
 2262 005a DBB2     		uxtb	r3, r3
 2263 005c 43F00203 		orr	r3, r3, #2
 2264 0060 DBB2     		uxtb	r3, r3
 2265 0062 1370     		strb	r3, [r2]
 2266 0064 18E0     		b	.L167
 2267              	.L166:
1133:Generated_Source\PSoC5/CyLib.c ****     }
1134:Generated_Source\PSoC5/CyLib.c ****     else
1135:Generated_Source\PSoC5/CyLib.c ****     {
1136:Generated_Source\PSoC5/CyLib.c ****         /* High power mode */
1137:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_XTAL32_TR_REG  = CY_CLK_XTAL32_TR_HIGH_POWER;
 2268              		.loc 1 1137 0
 2269 0066 114B     		ldr	r3, .L169+8
 2270 0068 0622     		movs	r2, #6
 2271 006a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 61


1138:Generated_Source\PSoC5/CyLib.c ****         CyDelayUs(10u);
 2272              		.loc 1 1138 0
 2273 006c 0A20     		movs	r0, #10
 2274 006e FFF7FEFF 		bl	CyDelayUs
1139:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_XTAL32_CFG_REG = (CY_CLK_XTAL32_CFG_REG & ((uint8)(~CY_CLK_XTAL32_CFG_LP_MASK))) |
 2275              		.loc 1 1139 0
 2276 0072 0F4A     		ldr	r2, .L169+12
 2277 0074 0E4B     		ldr	r3, .L169+12
 2278 0076 1B78     		ldrb	r3, [r3]
 2279 0078 DBB2     		uxtb	r3, r3
 2280 007a 23F00C03 		bic	r3, r3, #12
 2281 007e DBB2     		uxtb	r3, r3
 2282 0080 43F00403 		orr	r3, r3, #4
 2283 0084 DBB2     		uxtb	r3, r3
 2284 0086 1370     		strb	r3, [r2]
1140:Generated_Source\PSoC5/CyLib.c ****                                 CY_CLK_XTAL32_CFG_LP_DEFAULT;
1141:Generated_Source\PSoC5/CyLib.c ****         CY_CLK_XTAL32_CR_REG &= ((uint8)(~CY_CLK_XTAL32_CR_LPM));
 2285              		.loc 1 1141 0
 2286 0088 064A     		ldr	r2, .L169
 2287 008a 064B     		ldr	r3, .L169
 2288 008c 1B78     		ldrb	r3, [r3]
 2289 008e DBB2     		uxtb	r3, r3
 2290 0090 23F00203 		bic	r3, r3, #2
 2291 0094 DBB2     		uxtb	r3, r3
 2292 0096 1370     		strb	r3, [r2]
 2293              	.L167:
1142:Generated_Source\PSoC5/CyLib.c ****     }
1143:Generated_Source\PSoC5/CyLib.c **** 
1144:Generated_Source\PSoC5/CyLib.c ****     return(state);
 2294              		.loc 1 1144 0
 2295 0098 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1145:Generated_Source\PSoC5/CyLib.c **** }
 2296              		.loc 1 1145 0
 2297 009a 1846     		mov	r0, r3
 2298 009c 1037     		adds	r7, r7, #16
 2299              		.cfi_def_cfa_offset 8
 2300 009e BD46     		mov	sp, r7
 2301              		.cfi_def_cfa_register 13
 2302              		@ sp needed
 2303 00a0 80BD     		pop	{r7, pc}
 2304              	.L170:
 2305 00a2 00BF     		.align	2
 2306              	.L169:
 2307 00a4 08430040 		.word	1073758984
 2308 00a8 0A430040 		.word	1073758986
 2309 00ac 98460040 		.word	1073759896
 2310 00b0 09430040 		.word	1073758985
 2311              		.cfi_endproc
 2312              	.LFE28:
 2313              		.size	CyXTAL_32KHZ_SetPowerMode, .-CyXTAL_32KHZ_SetPowerMode
 2314              		.section	.text.CyXTAL_Start,"ax",%progbits
 2315              		.align	2
 2316              		.global	CyXTAL_Start
 2317              		.thumb
 2318              		.thumb_func
 2319              		.type	CyXTAL_Start, %function
 2320              	CyXTAL_Start:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 62


 2321              	.LFB29:
1146:Generated_Source\PSoC5/CyLib.c **** 
1147:Generated_Source\PSoC5/CyLib.c **** 
1148:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1149:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_Start
1150:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1151:Generated_Source\PSoC5/CyLib.c **** *
1152:Generated_Source\PSoC5/CyLib.c **** *  Enables the megahertz crystal.
1153:Generated_Source\PSoC5/CyLib.c **** *
1154:Generated_Source\PSoC5/CyLib.c **** *  PSoC 3:
1155:Generated_Source\PSoC5/CyLib.c **** *  Waits until the XERR bit is low (no error) for a millisecond or until the
1156:Generated_Source\PSoC5/CyLib.c **** *  number of milliseconds specified by the wait parameter has expired.
1157:Generated_Source\PSoC5/CyLib.c **** *
1158:Generated_Source\PSoC5/CyLib.c **** *   \param wait: Valid range [0-255].
1159:Generated_Source\PSoC5/CyLib.c **** *   This is the timeout value in milliseconds.
1160:Generated_Source\PSoC5/CyLib.c **** *   The appropriate value is crystal specific.
1161:Generated_Source\PSoC5/CyLib.c **** *
1162:Generated_Source\PSoC5/CyLib.c **** * \return
1163:Generated_Source\PSoC5/CyLib.c **** *   CYRET_SUCCESS - Completed successfully
1164:Generated_Source\PSoC5/CyLib.c **** *   CYRET_TIMEOUT - Timeout occurred without detecting a low value on XERR.
1165:Generated_Source\PSoC5/CyLib.c **** *
1166:Generated_Source\PSoC5/CyLib.c **** * Side Effects and Restrictions:
1167:Generated_Source\PSoC5/CyLib.c **** *  If wait is enabled (non-zero wait). Uses the Fast Timewheel to time the wait.
1168:Generated_Source\PSoC5/CyLib.c **** *  Any other use of the Fast Timewheel (FTW) will be stopped during the period
1169:Generated_Source\PSoC5/CyLib.c **** *  of this function and then restored.
1170:Generated_Source\PSoC5/CyLib.c **** *
1171:Generated_Source\PSoC5/CyLib.c **** *  Uses the 100KHz ILO.  If not enabled, this function will enable the 100KHz
1172:Generated_Source\PSoC5/CyLib.c **** *  ILO for the period of this function. No changes to the setup of the ILO,
1173:Generated_Source\PSoC5/CyLib.c **** *  Fast Timewheel, Central Timewheel or Once Per Second interrupt may be made
1174:Generated_Source\PSoC5/CyLib.c **** *  by interrupt routines during the period of this function.
1175:Generated_Source\PSoC5/CyLib.c **** *
1176:Generated_Source\PSoC5/CyLib.c **** *  The current operation of the ILO, Central Timewheel and Once Per Second
1177:Generated_Source\PSoC5/CyLib.c **** *  interrupt are maintained during the operation of this function provided the
1178:Generated_Source\PSoC5/CyLib.c **** *  reading of the Power Manager Interrupt Status Register is only done using the
1179:Generated_Source\PSoC5/CyLib.c **** *  CyPmReadStatus() function.
1180:Generated_Source\PSoC5/CyLib.c **** *
1181:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1182:Generated_Source\PSoC5/CyLib.c **** cystatus CyXTAL_Start(uint8 wait) 
1183:Generated_Source\PSoC5/CyLib.c **** {
 2322              		.loc 1 1183 0
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 24
 2325              		@ frame_needed = 1, uses_anonymous_args = 0
 2326 0000 80B5     		push	{r7, lr}
 2327              		.cfi_def_cfa_offset 8
 2328              		.cfi_offset 7, -8
 2329              		.cfi_offset 14, -4
 2330 0002 86B0     		sub	sp, sp, #24
 2331              		.cfi_def_cfa_offset 32
 2332 0004 00AF     		add	r7, sp, #0
 2333              		.cfi_def_cfa_register 7
 2334 0006 0346     		mov	r3, r0
 2335 0008 FB71     		strb	r3, [r7, #7]
1184:Generated_Source\PSoC5/CyLib.c ****     cystatus status = CYRET_SUCCESS;
 2336              		.loc 1 1184 0
 2337 000a 0023     		movs	r3, #0
 2338 000c 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 63


1185:Generated_Source\PSoC5/CyLib.c ****     volatile uint8  timeout = wait;
 2339              		.loc 1 1185 0
 2340 000e FB79     		ldrb	r3, [r7, #7]
 2341 0010 3B74     		strb	r3, [r7, #16]
1186:Generated_Source\PSoC5/CyLib.c ****     volatile uint8 count;
1187:Generated_Source\PSoC5/CyLib.c ****     uint8 iloEnableState;
1188:Generated_Source\PSoC5/CyLib.c ****     uint8 pmTwCfg0Tmp;
1189:Generated_Source\PSoC5/CyLib.c ****     uint8 pmTwCfg2Tmp;
1190:Generated_Source\PSoC5/CyLib.c **** 
1191:Generated_Source\PSoC5/CyLib.c **** 
1192:Generated_Source\PSoC5/CyLib.c ****     /* Enables MHz crystal oscillator circuit  */
1193:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XMHZ_CSR_REG |= CY_CLK_XMHZ_CSR_ENABLE;
 2342              		.loc 1 1193 0
 2343 0012 2B4A     		ldr	r2, .L182
 2344 0014 2A4B     		ldr	r3, .L182
 2345 0016 1B78     		ldrb	r3, [r3]
 2346 0018 DBB2     		uxtb	r3, r3
 2347 001a 43F00103 		orr	r3, r3, #1
 2348 001e DBB2     		uxtb	r3, r3
 2349 0020 1370     		strb	r3, [r2]
1194:Generated_Source\PSoC5/CyLib.c **** 
1195:Generated_Source\PSoC5/CyLib.c **** 
1196:Generated_Source\PSoC5/CyLib.c ****     if(wait > 0u)
 2350              		.loc 1 1196 0
 2351 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2352 0024 002B     		cmp	r3, #0
 2353 0026 46D0     		beq	.L172
1197:Generated_Source\PSoC5/CyLib.c ****     {
1198:Generated_Source\PSoC5/CyLib.c ****         /* Save 100 KHz ILO, FTW interval, enable and interrupt enable */
1199:Generated_Source\PSoC5/CyLib.c ****         iloEnableState = CY_LIB_SLOWCLK_ILO_CR0_REG;
 2354              		.loc 1 1199 0
 2355 0028 264B     		ldr	r3, .L182+4
 2356 002a 1B78     		ldrb	r3, [r3]
 2357 002c FB74     		strb	r3, [r7, #19]
1200:Generated_Source\PSoC5/CyLib.c ****         pmTwCfg0Tmp = CY_LIB_PM_TW_CFG0_REG;
 2358              		.loc 1 1200 0
 2359 002e 264B     		ldr	r3, .L182+8
 2360 0030 1B78     		ldrb	r3, [r3]
 2361 0032 BB74     		strb	r3, [r7, #18]
1201:Generated_Source\PSoC5/CyLib.c ****         pmTwCfg2Tmp = CY_LIB_PM_TW_CFG2_REG;
 2362              		.loc 1 1201 0
 2363 0034 254B     		ldr	r3, .L182+12
 2364 0036 1B78     		ldrb	r3, [r3]
 2365 0038 7B74     		strb	r3, [r7, #17]
1202:Generated_Source\PSoC5/CyLib.c **** 
1203:Generated_Source\PSoC5/CyLib.c ****         /* Set 250 us interval */
1204:Generated_Source\PSoC5/CyLib.c ****         CyPmFtwSetInterval(CY_CLK_XMHZ_FTW_INTERVAL);
 2366              		.loc 1 1204 0
 2367 003a 1820     		movs	r0, #24
 2368 003c FFF7FEFF 		bl	CyPmFtwSetInterval
1205:Generated_Source\PSoC5/CyLib.c ****         status = CYRET_TIMEOUT;
 2369              		.loc 1 1205 0
 2370 0040 1023     		movs	r3, #16
 2371 0042 7B61     		str	r3, [r7, #20]
1206:Generated_Source\PSoC5/CyLib.c **** 
1207:Generated_Source\PSoC5/CyLib.c **** 
1208:Generated_Source\PSoC5/CyLib.c ****         for( ; timeout > 0u; timeout--)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 64


 2372              		.loc 1 1208 0
 2373 0044 26E0     		b	.L173
 2374              	.L179:
1209:Generated_Source\PSoC5/CyLib.c ****         {
1210:Generated_Source\PSoC5/CyLib.c ****             /* Read XERR bit to clear it */
1211:Generated_Source\PSoC5/CyLib.c ****             (void) CY_CLK_XMHZ_CSR_REG;
 2375              		.loc 1 1211 0
 2376 0046 1E4B     		ldr	r3, .L182
 2377 0048 1B78     		ldrb	r3, [r3]
1212:Generated_Source\PSoC5/CyLib.c **** 
1213:Generated_Source\PSoC5/CyLib.c ****             /* Wait for 1 millisecond - 4 x 250 us */
1214:Generated_Source\PSoC5/CyLib.c ****             for(count = 4u; count > 0u; count--)
 2378              		.loc 1 1214 0
 2379 004a 0423     		movs	r3, #4
 2380 004c FB73     		strb	r3, [r7, #15]
 2381 004e 0EE0     		b	.L174
 2382              	.L176:
1215:Generated_Source\PSoC5/CyLib.c ****             {
1216:Generated_Source\PSoC5/CyLib.c ****                 while(0u == (CY_PM_FTW_INT & CyPmReadStatus(CY_PM_FTW_INT)))
 2383              		.loc 1 1216 0
 2384 0050 00BF     		nop
 2385              	.L175:
 2386              		.loc 1 1216 0 is_stmt 0 discriminator 1
 2387 0052 0120     		movs	r0, #1
 2388 0054 FFF7FEFF 		bl	CyPmReadStatus
 2389 0058 0346     		mov	r3, r0
 2390 005a 03F00103 		and	r3, r3, #1
 2391 005e DBB2     		uxtb	r3, r3
 2392 0060 002B     		cmp	r3, #0
 2393 0062 F6D0     		beq	.L175
1214:Generated_Source\PSoC5/CyLib.c ****             {
 2394              		.loc 1 1214 0 is_stmt 1 discriminator 2
 2395 0064 FB7B     		ldrb	r3, [r7, #15]
 2396 0066 DBB2     		uxtb	r3, r3
 2397 0068 013B     		subs	r3, r3, #1
 2398 006a DBB2     		uxtb	r3, r3
 2399 006c FB73     		strb	r3, [r7, #15]
 2400              	.L174:
1214:Generated_Source\PSoC5/CyLib.c ****             {
 2401              		.loc 1 1214 0 is_stmt 0 discriminator 1
 2402 006e FB7B     		ldrb	r3, [r7, #15]
 2403 0070 DBB2     		uxtb	r3, r3
 2404 0072 002B     		cmp	r3, #0
 2405 0074 ECD1     		bne	.L176
1217:Generated_Source\PSoC5/CyLib.c ****                 {
1218:Generated_Source\PSoC5/CyLib.c ****                     /* Wait for FTW interrupt event */
1219:Generated_Source\PSoC5/CyLib.c ****                 }
1220:Generated_Source\PSoC5/CyLib.c ****             }
1221:Generated_Source\PSoC5/CyLib.c **** 
1222:Generated_Source\PSoC5/CyLib.c **** 
1223:Generated_Source\PSoC5/CyLib.c ****             /*******************************************************************
1224:Generated_Source\PSoC5/CyLib.c ****             * High output indicates an oscillator failure.
1225:Generated_Source\PSoC5/CyLib.c ****             * Only can be used after a start-up interval (1 ms) is completed.
1226:Generated_Source\PSoC5/CyLib.c ****             *******************************************************************/
1227:Generated_Source\PSoC5/CyLib.c ****             if(0u == (CY_CLK_XMHZ_CSR_REG & CY_CLK_XMHZ_CSR_XERR))
 2406              		.loc 1 1227 0 is_stmt 1
 2407 0076 124B     		ldr	r3, .L182
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 65


 2408 0078 1B78     		ldrb	r3, [r3]
 2409 007a DBB2     		uxtb	r3, r3
 2410 007c DBB2     		uxtb	r3, r3
 2411 007e 5BB2     		sxtb	r3, r3
 2412 0080 002B     		cmp	r3, #0
 2413 0082 02DB     		blt	.L177
1228:Generated_Source\PSoC5/CyLib.c ****             {
1229:Generated_Source\PSoC5/CyLib.c ****                 status = CYRET_SUCCESS;
 2414              		.loc 1 1229 0
 2415 0084 0023     		movs	r3, #0
 2416 0086 7B61     		str	r3, [r7, #20]
1230:Generated_Source\PSoC5/CyLib.c ****                 break;
 2417              		.loc 1 1230 0
 2418 0088 08E0     		b	.L178
 2419              	.L177:
1208:Generated_Source\PSoC5/CyLib.c ****         {
 2420              		.loc 1 1208 0
 2421 008a 3B7C     		ldrb	r3, [r7, #16]
 2422 008c DBB2     		uxtb	r3, r3
 2423 008e 013B     		subs	r3, r3, #1
 2424 0090 DBB2     		uxtb	r3, r3
 2425 0092 3B74     		strb	r3, [r7, #16]
 2426              	.L173:
1208:Generated_Source\PSoC5/CyLib.c ****         {
 2427              		.loc 1 1208 0 is_stmt 0 discriminator 1
 2428 0094 3B7C     		ldrb	r3, [r7, #16]
 2429 0096 DBB2     		uxtb	r3, r3
 2430 0098 002B     		cmp	r3, #0
 2431 009a D4D1     		bne	.L179
 2432              	.L178:
1231:Generated_Source\PSoC5/CyLib.c ****             }
1232:Generated_Source\PSoC5/CyLib.c ****         }
1233:Generated_Source\PSoC5/CyLib.c **** 
1234:Generated_Source\PSoC5/CyLib.c **** 
1235:Generated_Source\PSoC5/CyLib.c ****         /* Restore 100 KHz ILO, FTW interval, enable and interrupt enable */
1236:Generated_Source\PSoC5/CyLib.c ****         if(0u == (iloEnableState & CY_LIB_SLOWCLK_ILO_CR0_EN_100KHZ))
 2433              		.loc 1 1236 0 is_stmt 1
 2434 009c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 2435 009e 03F00403 		and	r3, r3, #4
 2436 00a2 002B     		cmp	r3, #0
 2437 00a4 01D1     		bne	.L180
1237:Generated_Source\PSoC5/CyLib.c ****         {
1238:Generated_Source\PSoC5/CyLib.c ****             CyILO_Stop100K();
 2438              		.loc 1 1238 0
 2439 00a6 FFF7FEFF 		bl	CyILO_Stop100K
 2440              	.L180:
1239:Generated_Source\PSoC5/CyLib.c ****         }
1240:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_PM_TW_CFG0_REG = pmTwCfg0Tmp;
 2441              		.loc 1 1240 0
 2442 00aa 074A     		ldr	r2, .L182+8
 2443 00ac BB7C     		ldrb	r3, [r7, #18]
 2444 00ae 1370     		strb	r3, [r2]
1241:Generated_Source\PSoC5/CyLib.c ****         CY_LIB_PM_TW_CFG2_REG = pmTwCfg2Tmp;
 2445              		.loc 1 1241 0
 2446 00b0 064A     		ldr	r2, .L182+12
 2447 00b2 7B7C     		ldrb	r3, [r7, #17]
 2448 00b4 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 66


 2449              	.L172:
1242:Generated_Source\PSoC5/CyLib.c ****     }
1243:Generated_Source\PSoC5/CyLib.c **** 
1244:Generated_Source\PSoC5/CyLib.c ****     return(status);
 2450              		.loc 1 1244 0
 2451 00b6 7B69     		ldr	r3, [r7, #20]
1245:Generated_Source\PSoC5/CyLib.c **** }
 2452              		.loc 1 1245 0
 2453 00b8 1846     		mov	r0, r3
 2454 00ba 1837     		adds	r7, r7, #24
 2455              		.cfi_def_cfa_offset 8
 2456 00bc BD46     		mov	sp, r7
 2457              		.cfi_def_cfa_register 13
 2458              		@ sp needed
 2459 00be 80BD     		pop	{r7, pc}
 2460              	.L183:
 2461              		.align	2
 2462              	.L182:
 2463 00c0 10420040 		.word	1073758736
 2464 00c4 00430040 		.word	1073758976
 2465 00c8 80430040 		.word	1073759104
 2466 00cc 82430040 		.word	1073759106
 2467              		.cfi_endproc
 2468              	.LFE29:
 2469              		.size	CyXTAL_Start, .-CyXTAL_Start
 2470              		.section	.text.CyXTAL_Stop,"ax",%progbits
 2471              		.align	2
 2472              		.global	CyXTAL_Stop
 2473              		.thumb
 2474              		.thumb_func
 2475              		.type	CyXTAL_Stop, %function
 2476              	CyXTAL_Stop:
 2477              	.LFB30:
1246:Generated_Source\PSoC5/CyLib.c **** 
1247:Generated_Source\PSoC5/CyLib.c **** 
1248:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1249:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_Stop
1250:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1251:Generated_Source\PSoC5/CyLib.c **** *
1252:Generated_Source\PSoC5/CyLib.c **** *  Disables the megahertz crystal oscillator.
1253:Generated_Source\PSoC5/CyLib.c **** *
1254:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1255:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_Stop(void) 
1256:Generated_Source\PSoC5/CyLib.c **** {
 2478              		.loc 1 1256 0
 2479              		.cfi_startproc
 2480              		@ args = 0, pretend = 0, frame = 0
 2481              		@ frame_needed = 1, uses_anonymous_args = 0
 2482              		@ link register save eliminated.
 2483 0000 80B4     		push	{r7}
 2484              		.cfi_def_cfa_offset 4
 2485              		.cfi_offset 7, -4
 2486 0002 00AF     		add	r7, sp, #0
 2487              		.cfi_def_cfa_register 7
1257:Generated_Source\PSoC5/CyLib.c ****     /* Disable oscillator. */
1258:Generated_Source\PSoC5/CyLib.c ****     FASTCLK_XMHZ_CSR &= ((uint8)(~XMHZ_CONTROL_ENABLE));
 2488              		.loc 1 1258 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 67


 2489 0004 054A     		ldr	r2, .L185
 2490 0006 054B     		ldr	r3, .L185
 2491 0008 1B78     		ldrb	r3, [r3]
 2492 000a DBB2     		uxtb	r3, r3
 2493 000c 23F00103 		bic	r3, r3, #1
 2494 0010 DBB2     		uxtb	r3, r3
 2495 0012 1370     		strb	r3, [r2]
1259:Generated_Source\PSoC5/CyLib.c **** }
 2496              		.loc 1 1259 0
 2497 0014 BD46     		mov	sp, r7
 2498              		.cfi_def_cfa_register 13
 2499              		@ sp needed
 2500 0016 5DF8047B 		ldr	r7, [sp], #4
 2501              		.cfi_restore 7
 2502              		.cfi_def_cfa_offset 0
 2503 001a 7047     		bx	lr
 2504              	.L186:
 2505              		.align	2
 2506              	.L185:
 2507 001c 10420040 		.word	1073758736
 2508              		.cfi_endproc
 2509              	.LFE30:
 2510              		.size	CyXTAL_Stop, .-CyXTAL_Stop
 2511              		.section	.text.CyXTAL_EnableErrStatus,"ax",%progbits
 2512              		.align	2
 2513              		.global	CyXTAL_EnableErrStatus
 2514              		.thumb
 2515              		.thumb_func
 2516              		.type	CyXTAL_EnableErrStatus, %function
 2517              	CyXTAL_EnableErrStatus:
 2518              	.LFB31:
1260:Generated_Source\PSoC5/CyLib.c **** 
1261:Generated_Source\PSoC5/CyLib.c **** 
1262:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1263:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_EnableErrStatus
1264:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1265:Generated_Source\PSoC5/CyLib.c **** *
1266:Generated_Source\PSoC5/CyLib.c **** *  Enables the generation of the XERR status bit for the megahertz crystal.
1267:Generated_Source\PSoC5/CyLib.c **** *  This function is not available for PSoC5.
1268:Generated_Source\PSoC5/CyLib.c **** *
1269:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1270:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_EnableErrStatus(void) 
1271:Generated_Source\PSoC5/CyLib.c **** {
 2519              		.loc 1 1271 0
 2520              		.cfi_startproc
 2521              		@ args = 0, pretend = 0, frame = 0
 2522              		@ frame_needed = 1, uses_anonymous_args = 0
 2523              		@ link register save eliminated.
 2524 0000 80B4     		push	{r7}
 2525              		.cfi_def_cfa_offset 4
 2526              		.cfi_offset 7, -4
 2527 0002 00AF     		add	r7, sp, #0
 2528              		.cfi_def_cfa_register 7
1272:Generated_Source\PSoC5/CyLib.c ****     /* If oscillator has insufficient amplitude, XERR bit will be high. */
1273:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XMHZ_CSR_REG &= ((uint8)(~CY_CLK_XMHZ_CSR_XFB));
 2529              		.loc 1 1273 0
 2530 0004 054A     		ldr	r2, .L188
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 68


 2531 0006 054B     		ldr	r3, .L188
 2532 0008 1B78     		ldrb	r3, [r3]
 2533 000a DBB2     		uxtb	r3, r3
 2534 000c 23F00403 		bic	r3, r3, #4
 2535 0010 DBB2     		uxtb	r3, r3
 2536 0012 1370     		strb	r3, [r2]
1274:Generated_Source\PSoC5/CyLib.c **** }
 2537              		.loc 1 1274 0
 2538 0014 BD46     		mov	sp, r7
 2539              		.cfi_def_cfa_register 13
 2540              		@ sp needed
 2541 0016 5DF8047B 		ldr	r7, [sp], #4
 2542              		.cfi_restore 7
 2543              		.cfi_def_cfa_offset 0
 2544 001a 7047     		bx	lr
 2545              	.L189:
 2546              		.align	2
 2547              	.L188:
 2548 001c 10420040 		.word	1073758736
 2549              		.cfi_endproc
 2550              	.LFE31:
 2551              		.size	CyXTAL_EnableErrStatus, .-CyXTAL_EnableErrStatus
 2552              		.section	.text.CyXTAL_DisableErrStatus,"ax",%progbits
 2553              		.align	2
 2554              		.global	CyXTAL_DisableErrStatus
 2555              		.thumb
 2556              		.thumb_func
 2557              		.type	CyXTAL_DisableErrStatus, %function
 2558              	CyXTAL_DisableErrStatus:
 2559              	.LFB32:
1275:Generated_Source\PSoC5/CyLib.c **** 
1276:Generated_Source\PSoC5/CyLib.c **** 
1277:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1278:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_DisableErrStatus
1279:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1280:Generated_Source\PSoC5/CyLib.c **** *
1281:Generated_Source\PSoC5/CyLib.c **** *  Disables the generation of the XERR status bit for the megahertz crystal.
1282:Generated_Source\PSoC5/CyLib.c **** *  This function is not available for PSoC5.
1283:Generated_Source\PSoC5/CyLib.c **** *
1284:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1285:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_DisableErrStatus(void) 
1286:Generated_Source\PSoC5/CyLib.c **** {
 2560              		.loc 1 1286 0
 2561              		.cfi_startproc
 2562              		@ args = 0, pretend = 0, frame = 0
 2563              		@ frame_needed = 1, uses_anonymous_args = 0
 2564              		@ link register save eliminated.
 2565 0000 80B4     		push	{r7}
 2566              		.cfi_def_cfa_offset 4
 2567              		.cfi_offset 7, -4
 2568 0002 00AF     		add	r7, sp, #0
 2569              		.cfi_def_cfa_register 7
1287:Generated_Source\PSoC5/CyLib.c ****     /* If oscillator has insufficient amplitude, XERR bit will be high. */
1288:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XMHZ_CSR_REG |= CY_CLK_XMHZ_CSR_XFB;
 2570              		.loc 1 1288 0
 2571 0004 054A     		ldr	r2, .L191
 2572 0006 054B     		ldr	r3, .L191
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 69


 2573 0008 1B78     		ldrb	r3, [r3]
 2574 000a DBB2     		uxtb	r3, r3
 2575 000c 43F00403 		orr	r3, r3, #4
 2576 0010 DBB2     		uxtb	r3, r3
 2577 0012 1370     		strb	r3, [r2]
1289:Generated_Source\PSoC5/CyLib.c **** }
 2578              		.loc 1 1289 0
 2579 0014 BD46     		mov	sp, r7
 2580              		.cfi_def_cfa_register 13
 2581              		@ sp needed
 2582 0016 5DF8047B 		ldr	r7, [sp], #4
 2583              		.cfi_restore 7
 2584              		.cfi_def_cfa_offset 0
 2585 001a 7047     		bx	lr
 2586              	.L192:
 2587              		.align	2
 2588              	.L191:
 2589 001c 10420040 		.word	1073758736
 2590              		.cfi_endproc
 2591              	.LFE32:
 2592              		.size	CyXTAL_DisableErrStatus, .-CyXTAL_DisableErrStatus
 2593              		.section	.text.CyXTAL_ReadStatus,"ax",%progbits
 2594              		.align	2
 2595              		.global	CyXTAL_ReadStatus
 2596              		.thumb
 2597              		.thumb_func
 2598              		.type	CyXTAL_ReadStatus, %function
 2599              	CyXTAL_ReadStatus:
 2600              	.LFB33:
1290:Generated_Source\PSoC5/CyLib.c **** 
1291:Generated_Source\PSoC5/CyLib.c **** 
1292:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1293:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_ReadStatus
1294:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1295:Generated_Source\PSoC5/CyLib.c **** *
1296:Generated_Source\PSoC5/CyLib.c **** *  Reads the XERR status bit for the megahertz crystal. This status bit is a
1297:Generated_Source\PSoC5/CyLib.c **** *  sticky, clear on read. This function is not available for PSoC5.
1298:Generated_Source\PSoC5/CyLib.c **** *
1299:Generated_Source\PSoC5/CyLib.c **** * \return
1300:Generated_Source\PSoC5/CyLib.c **** *   Status
1301:Generated_Source\PSoC5/CyLib.c **** *    0: No error
1302:Generated_Source\PSoC5/CyLib.c **** *    1: Error
1303:Generated_Source\PSoC5/CyLib.c **** *
1304:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1305:Generated_Source\PSoC5/CyLib.c **** uint8 CyXTAL_ReadStatus(void) 
1306:Generated_Source\PSoC5/CyLib.c **** {
 2601              		.loc 1 1306 0
 2602              		.cfi_startproc
 2603              		@ args = 0, pretend = 0, frame = 0
 2604              		@ frame_needed = 1, uses_anonymous_args = 0
 2605              		@ link register save eliminated.
 2606 0000 80B4     		push	{r7}
 2607              		.cfi_def_cfa_offset 4
 2608              		.cfi_offset 7, -4
 2609 0002 00AF     		add	r7, sp, #0
 2610              		.cfi_def_cfa_register 7
1307:Generated_Source\PSoC5/CyLib.c ****     /***************************************************************************
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 70


1308:Generated_Source\PSoC5/CyLib.c ****     * High output indicates an oscillator failure. Only use this after a start-up
1309:Generated_Source\PSoC5/CyLib.c ****     * interval is completed. This can be used for the status and failure recovery.
1310:Generated_Source\PSoC5/CyLib.c ****     ***************************************************************************/
1311:Generated_Source\PSoC5/CyLib.c ****     return((0u != (CY_CLK_XMHZ_CSR_REG & CY_CLK_XMHZ_CSR_XERR)) ? 1u : 0u);
 2611              		.loc 1 1311 0
 2612 0004 074B     		ldr	r3, .L197
 2613 0006 1B78     		ldrb	r3, [r3]
 2614 0008 DBB2     		uxtb	r3, r3
 2615 000a DBB2     		uxtb	r3, r3
 2616 000c 5BB2     		sxtb	r3, r3
 2617 000e 002B     		cmp	r3, #0
 2618 0010 01DA     		bge	.L194
 2619              		.loc 1 1311 0 is_stmt 0 discriminator 1
 2620 0012 0123     		movs	r3, #1
 2621 0014 00E0     		b	.L195
 2622              	.L194:
 2623              		.loc 1 1311 0 discriminator 2
 2624 0016 0023     		movs	r3, #0
 2625              	.L195:
1312:Generated_Source\PSoC5/CyLib.c **** }
 2626              		.loc 1 1312 0 is_stmt 1 discriminator 4
 2627 0018 1846     		mov	r0, r3
 2628 001a BD46     		mov	sp, r7
 2629              		.cfi_def_cfa_register 13
 2630              		@ sp needed
 2631 001c 5DF8047B 		ldr	r7, [sp], #4
 2632              		.cfi_restore 7
 2633              		.cfi_def_cfa_offset 0
 2634 0020 7047     		bx	lr
 2635              	.L198:
 2636 0022 00BF     		.align	2
 2637              	.L197:
 2638 0024 10420040 		.word	1073758736
 2639              		.cfi_endproc
 2640              	.LFE33:
 2641              		.size	CyXTAL_ReadStatus, .-CyXTAL_ReadStatus
 2642              		.section	.text.CyXTAL_EnableFaultRecovery,"ax",%progbits
 2643              		.align	2
 2644              		.global	CyXTAL_EnableFaultRecovery
 2645              		.thumb
 2646              		.thumb_func
 2647              		.type	CyXTAL_EnableFaultRecovery, %function
 2648              	CyXTAL_EnableFaultRecovery:
 2649              	.LFB34:
1313:Generated_Source\PSoC5/CyLib.c **** 
1314:Generated_Source\PSoC5/CyLib.c **** 
1315:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1316:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_EnableFaultRecovery
1317:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1318:Generated_Source\PSoC5/CyLib.c **** *
1319:Generated_Source\PSoC5/CyLib.c **** *  Enables the fault recovery circuit which will switch to the IMO in the case
1320:Generated_Source\PSoC5/CyLib.c **** *  of a fault in the megahertz crystal circuit. The crystal must be up and
1321:Generated_Source\PSoC5/CyLib.c **** *  running with the XERR bit at 0, before calling this function to prevent
1322:Generated_Source\PSoC5/CyLib.c **** *  an immediate fault switchover. This function is not available for PSoC5.
1323:Generated_Source\PSoC5/CyLib.c **** *
1324:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1325:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_EnableFaultRecovery(void) 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 71


1326:Generated_Source\PSoC5/CyLib.c **** {
 2650              		.loc 1 1326 0
 2651              		.cfi_startproc
 2652              		@ args = 0, pretend = 0, frame = 0
 2653              		@ frame_needed = 1, uses_anonymous_args = 0
 2654              		@ link register save eliminated.
 2655 0000 80B4     		push	{r7}
 2656              		.cfi_def_cfa_offset 4
 2657              		.cfi_offset 7, -4
 2658 0002 00AF     		add	r7, sp, #0
 2659              		.cfi_def_cfa_register 7
1327:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XMHZ_CSR_REG |= CY_CLK_XMHZ_CSR_XPROT;
 2660              		.loc 1 1327 0
 2661 0004 054A     		ldr	r2, .L200
 2662 0006 054B     		ldr	r3, .L200
 2663 0008 1B78     		ldrb	r3, [r3]
 2664 000a DBB2     		uxtb	r3, r3
 2665 000c 43F04003 		orr	r3, r3, #64
 2666 0010 DBB2     		uxtb	r3, r3
 2667 0012 1370     		strb	r3, [r2]
1328:Generated_Source\PSoC5/CyLib.c **** }
 2668              		.loc 1 1328 0
 2669 0014 BD46     		mov	sp, r7
 2670              		.cfi_def_cfa_register 13
 2671              		@ sp needed
 2672 0016 5DF8047B 		ldr	r7, [sp], #4
 2673              		.cfi_restore 7
 2674              		.cfi_def_cfa_offset 0
 2675 001a 7047     		bx	lr
 2676              	.L201:
 2677              		.align	2
 2678              	.L200:
 2679 001c 10420040 		.word	1073758736
 2680              		.cfi_endproc
 2681              	.LFE34:
 2682              		.size	CyXTAL_EnableFaultRecovery, .-CyXTAL_EnableFaultRecovery
 2683              		.section	.text.CyXTAL_DisableFaultRecovery,"ax",%progbits
 2684              		.align	2
 2685              		.global	CyXTAL_DisableFaultRecovery
 2686              		.thumb
 2687              		.thumb_func
 2688              		.type	CyXTAL_DisableFaultRecovery, %function
 2689              	CyXTAL_DisableFaultRecovery:
 2690              	.LFB35:
1329:Generated_Source\PSoC5/CyLib.c **** 
1330:Generated_Source\PSoC5/CyLib.c **** 
1331:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1332:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_DisableFaultRecovery
1333:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1334:Generated_Source\PSoC5/CyLib.c **** *
1335:Generated_Source\PSoC5/CyLib.c **** *  Disables the fault recovery circuit which will switch to the IMO in the case
1336:Generated_Source\PSoC5/CyLib.c **** *  of a fault in the megahertz crystal circuit. This function is not available
1337:Generated_Source\PSoC5/CyLib.c **** *  for PSoC5.
1338:Generated_Source\PSoC5/CyLib.c **** *
1339:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1340:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_DisableFaultRecovery(void) 
1341:Generated_Source\PSoC5/CyLib.c **** {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 72


 2691              		.loc 1 1341 0
 2692              		.cfi_startproc
 2693              		@ args = 0, pretend = 0, frame = 0
 2694              		@ frame_needed = 1, uses_anonymous_args = 0
 2695              		@ link register save eliminated.
 2696 0000 80B4     		push	{r7}
 2697              		.cfi_def_cfa_offset 4
 2698              		.cfi_offset 7, -4
 2699 0002 00AF     		add	r7, sp, #0
 2700              		.cfi_def_cfa_register 7
1342:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XMHZ_CSR_REG &= ((uint8)(~CY_CLK_XMHZ_CSR_XPROT));
 2701              		.loc 1 1342 0
 2702 0004 054A     		ldr	r2, .L203
 2703 0006 054B     		ldr	r3, .L203
 2704 0008 1B78     		ldrb	r3, [r3]
 2705 000a DBB2     		uxtb	r3, r3
 2706 000c 23F04003 		bic	r3, r3, #64
 2707 0010 DBB2     		uxtb	r3, r3
 2708 0012 1370     		strb	r3, [r2]
1343:Generated_Source\PSoC5/CyLib.c **** }
 2709              		.loc 1 1343 0
 2710 0014 BD46     		mov	sp, r7
 2711              		.cfi_def_cfa_register 13
 2712              		@ sp needed
 2713 0016 5DF8047B 		ldr	r7, [sp], #4
 2714              		.cfi_restore 7
 2715              		.cfi_def_cfa_offset 0
 2716 001a 7047     		bx	lr
 2717              	.L204:
 2718              		.align	2
 2719              	.L203:
 2720 001c 10420040 		.word	1073758736
 2721              		.cfi_endproc
 2722              	.LFE35:
 2723              		.size	CyXTAL_DisableFaultRecovery, .-CyXTAL_DisableFaultRecovery
 2724              		.section	.text.CyXTAL_SetStartup,"ax",%progbits
 2725              		.align	2
 2726              		.global	CyXTAL_SetStartup
 2727              		.thumb
 2728              		.thumb_func
 2729              		.type	CyXTAL_SetStartup, %function
 2730              	CyXTAL_SetStartup:
 2731              	.LFB36:
1344:Generated_Source\PSoC5/CyLib.c **** 
1345:Generated_Source\PSoC5/CyLib.c **** 
1346:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1347:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_SetStartup
1348:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1349:Generated_Source\PSoC5/CyLib.c **** *
1350:Generated_Source\PSoC5/CyLib.c **** *  Sets the startup settings for the crystal. The logic model outputs a
1351:Generated_Source\PSoC5/CyLib.c **** *  frequency (setting + 4) MHz when enabled.
1352:Generated_Source\PSoC5/CyLib.c **** *
1353:Generated_Source\PSoC5/CyLib.c **** *  This is artificial as the actual frequency is determined by an attached
1354:Generated_Source\PSoC5/CyLib.c **** *  external crystal.
1355:Generated_Source\PSoC5/CyLib.c **** *
1356:Generated_Source\PSoC5/CyLib.c **** *  \param setting: Valid range [0-31].
1357:Generated_Source\PSoC5/CyLib.c **** *   The value is dependent on the frequency and quality of the crystal being
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 73


1358:Generated_Source\PSoC5/CyLib.c **** *   used. Refer to the device TRM and datasheet for more information.
1359:Generated_Source\PSoC5/CyLib.c **** *
1360:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1361:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_SetStartup(uint8 setting) 
1362:Generated_Source\PSoC5/CyLib.c **** {
 2732              		.loc 1 1362 0
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 8
 2735              		@ frame_needed = 1, uses_anonymous_args = 0
 2736              		@ link register save eliminated.
 2737 0000 80B4     		push	{r7}
 2738              		.cfi_def_cfa_offset 4
 2739              		.cfi_offset 7, -4
 2740 0002 83B0     		sub	sp, sp, #12
 2741              		.cfi_def_cfa_offset 16
 2742 0004 00AF     		add	r7, sp, #0
 2743              		.cfi_def_cfa_register 7
 2744 0006 0346     		mov	r3, r0
 2745 0008 FB71     		strb	r3, [r7, #7]
1363:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XMHZ_CFG0_REG = (CY_CLK_XMHZ_CFG0_REG & ((uint8)(~CY_CLK_XMHZ_CFG0_XCFG_MASK))) |
 2746              		.loc 1 1363 0
 2747 000a 0949     		ldr	r1, .L206
 2748 000c 084B     		ldr	r3, .L206
 2749 000e 1B78     		ldrb	r3, [r3]
 2750 0010 DBB2     		uxtb	r3, r3
 2751 0012 23F01F03 		bic	r3, r3, #31
 2752 0016 DAB2     		uxtb	r2, r3
 2753 0018 FB79     		ldrb	r3, [r7, #7]
 2754 001a 03F01F03 		and	r3, r3, #31
 2755 001e DBB2     		uxtb	r3, r3
 2756 0020 1343     		orrs	r3, r3, r2
 2757 0022 DBB2     		uxtb	r3, r3
 2758 0024 0B70     		strb	r3, [r1]
1364:Generated_Source\PSoC5/CyLib.c ****                            (setting & CY_CLK_XMHZ_CFG0_XCFG_MASK);
1365:Generated_Source\PSoC5/CyLib.c **** }
 2759              		.loc 1 1365 0
 2760 0026 0C37     		adds	r7, r7, #12
 2761              		.cfi_def_cfa_offset 4
 2762 0028 BD46     		mov	sp, r7
 2763              		.cfi_def_cfa_register 13
 2764              		@ sp needed
 2765 002a 5DF8047B 		ldr	r7, [sp], #4
 2766              		.cfi_restore 7
 2767              		.cfi_def_cfa_offset 0
 2768 002e 7047     		bx	lr
 2769              	.L207:
 2770              		.align	2
 2771              	.L206:
 2772 0030 12420040 		.word	1073758738
 2773              		.cfi_endproc
 2774              	.LFE36:
 2775              		.size	CyXTAL_SetStartup, .-CyXTAL_SetStartup
 2776              		.section	.text.CyXTAL_SetFbVoltage,"ax",%progbits
 2777              		.align	2
 2778              		.global	CyXTAL_SetFbVoltage
 2779              		.thumb
 2780              		.thumb_func
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 74


 2781              		.type	CyXTAL_SetFbVoltage, %function
 2782              	CyXTAL_SetFbVoltage:
 2783              	.LFB37:
1366:Generated_Source\PSoC5/CyLib.c **** 
1367:Generated_Source\PSoC5/CyLib.c **** 
1368:Generated_Source\PSoC5/CyLib.c **** 
1369:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1370:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_SetFbVoltage
1371:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1372:Generated_Source\PSoC5/CyLib.c **** *
1373:Generated_Source\PSoC5/CyLib.c **** *  Sets the feedback reference voltage to use for the crystal circuit.
1374:Generated_Source\PSoC5/CyLib.c **** *  This function is only available for PSoC3 and PSoC 5LP.
1375:Generated_Source\PSoC5/CyLib.c **** *
1376:Generated_Source\PSoC5/CyLib.c **** *  \param setting: Valid range [0-15].
1377:Generated_Source\PSoC5/CyLib.c **** *  Refer to the device TRM and datasheet for more information.
1378:Generated_Source\PSoC5/CyLib.c **** *
1379:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1380:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_SetFbVoltage(uint8 setting) 
1381:Generated_Source\PSoC5/CyLib.c **** {
 2784              		.loc 1 1381 0
 2785              		.cfi_startproc
 2786              		@ args = 0, pretend = 0, frame = 8
 2787              		@ frame_needed = 1, uses_anonymous_args = 0
 2788              		@ link register save eliminated.
 2789 0000 80B4     		push	{r7}
 2790              		.cfi_def_cfa_offset 4
 2791              		.cfi_offset 7, -4
 2792 0002 83B0     		sub	sp, sp, #12
 2793              		.cfi_def_cfa_offset 16
 2794 0004 00AF     		add	r7, sp, #0
 2795              		.cfi_def_cfa_register 7
 2796 0006 0346     		mov	r3, r0
 2797 0008 FB71     		strb	r3, [r7, #7]
1382:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XMHZ_CFG1_REG = ((CY_CLK_XMHZ_CFG1_REG & ((uint8)(~CY_CLK_XMHZ_CFG1_VREF_FB_MASK))) |
 2798              		.loc 1 1382 0
 2799 000a 0949     		ldr	r1, .L209
 2800 000c 084B     		ldr	r3, .L209
 2801 000e 1B78     		ldrb	r3, [r3]
 2802 0010 DBB2     		uxtb	r3, r3
 2803 0012 23F00F03 		bic	r3, r3, #15
 2804 0016 DAB2     		uxtb	r2, r3
 2805 0018 FB79     		ldrb	r3, [r7, #7]
 2806 001a 03F00F03 		and	r3, r3, #15
 2807 001e DBB2     		uxtb	r3, r3
 2808 0020 1343     		orrs	r3, r3, r2
 2809 0022 DBB2     		uxtb	r3, r3
 2810 0024 0B70     		strb	r3, [r1]
1383:Generated_Source\PSoC5/CyLib.c ****                             (setting & CY_CLK_XMHZ_CFG1_VREF_FB_MASK));
1384:Generated_Source\PSoC5/CyLib.c **** }
 2811              		.loc 1 1384 0
 2812 0026 0C37     		adds	r7, r7, #12
 2813              		.cfi_def_cfa_offset 4
 2814 0028 BD46     		mov	sp, r7
 2815              		.cfi_def_cfa_register 13
 2816              		@ sp needed
 2817 002a 5DF8047B 		ldr	r7, [sp], #4
 2818              		.cfi_restore 7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 75


 2819              		.cfi_def_cfa_offset 0
 2820 002e 7047     		bx	lr
 2821              	.L210:
 2822              		.align	2
 2823              	.L209:
 2824 0030 13420040 		.word	1073758739
 2825              		.cfi_endproc
 2826              	.LFE37:
 2827              		.size	CyXTAL_SetFbVoltage, .-CyXTAL_SetFbVoltage
 2828              		.section	.text.CyXTAL_SetWdVoltage,"ax",%progbits
 2829              		.align	2
 2830              		.global	CyXTAL_SetWdVoltage
 2831              		.thumb
 2832              		.thumb_func
 2833              		.type	CyXTAL_SetWdVoltage, %function
 2834              	CyXTAL_SetWdVoltage:
 2835              	.LFB38:
1385:Generated_Source\PSoC5/CyLib.c **** 
1386:Generated_Source\PSoC5/CyLib.c **** 
1387:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1388:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyXTAL_SetWdVoltage
1389:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1390:Generated_Source\PSoC5/CyLib.c **** *
1391:Generated_Source\PSoC5/CyLib.c **** *  Sets the reference voltage used by the watchdog to detect a failure in the
1392:Generated_Source\PSoC5/CyLib.c **** *  crystal circuit. This function is only available for PSoC3 and PSoC 5LP.
1393:Generated_Source\PSoC5/CyLib.c **** *
1394:Generated_Source\PSoC5/CyLib.c **** *  \param setting: Valid range [0-7].
1395:Generated_Source\PSoC5/CyLib.c **** *  Refer to the device TRM and datasheet for more information.
1396:Generated_Source\PSoC5/CyLib.c **** *
1397:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1398:Generated_Source\PSoC5/CyLib.c **** void CyXTAL_SetWdVoltage(uint8 setting) 
1399:Generated_Source\PSoC5/CyLib.c **** {
 2836              		.loc 1 1399 0
 2837              		.cfi_startproc
 2838              		@ args = 0, pretend = 0, frame = 8
 2839              		@ frame_needed = 1, uses_anonymous_args = 0
 2840              		@ link register save eliminated.
 2841 0000 80B4     		push	{r7}
 2842              		.cfi_def_cfa_offset 4
 2843              		.cfi_offset 7, -4
 2844 0002 83B0     		sub	sp, sp, #12
 2845              		.cfi_def_cfa_offset 16
 2846 0004 00AF     		add	r7, sp, #0
 2847              		.cfi_def_cfa_register 7
 2848 0006 0346     		mov	r3, r0
 2849 0008 FB71     		strb	r3, [r7, #7]
1400:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XMHZ_CFG1_REG = ((CY_CLK_XMHZ_CFG1_REG & ((uint8)(~CY_CLK_XMHZ_CFG1_VREF_WD_MASK))) |
 2850              		.loc 1 1400 0
 2851 000a 0A49     		ldr	r1, .L212
 2852 000c 094B     		ldr	r3, .L212
 2853 000e 1B78     		ldrb	r3, [r3]
 2854 0010 DBB2     		uxtb	r3, r3
 2855 0012 23F07003 		bic	r3, r3, #112
 2856 0016 DAB2     		uxtb	r2, r3
1401:Generated_Source\PSoC5/CyLib.c ****                             (((uint8)(setting << 4u)) & CY_CLK_XMHZ_CFG1_VREF_WD_MASK));
 2857              		.loc 1 1401 0
 2858 0018 FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 76


 2859 001a 1B01     		lsls	r3, r3, #4
 2860 001c DBB2     		uxtb	r3, r3
1400:Generated_Source\PSoC5/CyLib.c ****     CY_CLK_XMHZ_CFG1_REG = ((CY_CLK_XMHZ_CFG1_REG & ((uint8)(~CY_CLK_XMHZ_CFG1_VREF_WD_MASK))) |
 2861              		.loc 1 1400 0
 2862 001e 03F07003 		and	r3, r3, #112
 2863 0022 DBB2     		uxtb	r3, r3
 2864 0024 1343     		orrs	r3, r3, r2
 2865 0026 DBB2     		uxtb	r3, r3
 2866 0028 0B70     		strb	r3, [r1]
1402:Generated_Source\PSoC5/CyLib.c **** }
 2867              		.loc 1 1402 0
 2868 002a 0C37     		adds	r7, r7, #12
 2869              		.cfi_def_cfa_offset 4
 2870 002c BD46     		mov	sp, r7
 2871              		.cfi_def_cfa_register 13
 2872              		@ sp needed
 2873 002e 5DF8047B 		ldr	r7, [sp], #4
 2874              		.cfi_restore 7
 2875              		.cfi_def_cfa_offset 0
 2876 0032 7047     		bx	lr
 2877              	.L213:
 2878              		.align	2
 2879              	.L212:
 2880 0034 13420040 		.word	1073758739
 2881              		.cfi_endproc
 2882              	.LFE38:
 2883              		.size	CyXTAL_SetWdVoltage, .-CyXTAL_SetWdVoltage
 2884              		.section	.text.CyHalt,"ax",%progbits
 2885              		.align	2
 2886              		.global	CyHalt
 2887              		.thumb
 2888              		.thumb_func
 2889              		.type	CyHalt, %function
 2890              	CyHalt:
 2891              	.LFB39:
1403:Generated_Source\PSoC5/CyLib.c **** 
1404:Generated_Source\PSoC5/CyLib.c **** 
1405:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1406:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyHalt
1407:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1408:Generated_Source\PSoC5/CyLib.c **** *
1409:Generated_Source\PSoC5/CyLib.c **** *  Halts the CPU.
1410:Generated_Source\PSoC5/CyLib.c **** *
1411:Generated_Source\PSoC5/CyLib.c **** *  \param uint8 reason: Value to be used during debugging.
1412:Generated_Source\PSoC5/CyLib.c **** *
1413:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1414:Generated_Source\PSoC5/CyLib.c **** void CyHalt(uint8 reason) CYREENTRANT
1415:Generated_Source\PSoC5/CyLib.c **** {
 2892              		.loc 1 1415 0
 2893              		.cfi_startproc
 2894              		@ args = 0, pretend = 0, frame = 8
 2895              		@ frame_needed = 1, uses_anonymous_args = 0
 2896              		@ link register save eliminated.
 2897 0000 80B4     		push	{r7}
 2898              		.cfi_def_cfa_offset 4
 2899              		.cfi_offset 7, -4
 2900 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 77


 2901              		.cfi_def_cfa_offset 16
 2902 0004 00AF     		add	r7, sp, #0
 2903              		.cfi_def_cfa_register 7
 2904 0006 0346     		mov	r3, r0
 2905 0008 FB71     		strb	r3, [r7, #7]
1416:Generated_Source\PSoC5/CyLib.c ****     if(0u != reason)
1417:Generated_Source\PSoC5/CyLib.c ****     {
1418:Generated_Source\PSoC5/CyLib.c ****         /* To remove unreferenced local variable warning */
1419:Generated_Source\PSoC5/CyLib.c ****     }
1420:Generated_Source\PSoC5/CyLib.c **** 
1421:Generated_Source\PSoC5/CyLib.c ****     #if defined (__ARMCC_VERSION)
1422:Generated_Source\PSoC5/CyLib.c ****         __breakpoint(0x0);
1423:Generated_Source\PSoC5/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
1424:Generated_Source\PSoC5/CyLib.c ****         __asm("    bkpt    1");
 2906              		.loc 1 1424 0
 2907              	@ 1424 "Generated_Source\PSoC5\CyLib.c" 1
 2908 000a 01BE     		    bkpt    1
 2909              	@ 0 "" 2
1425:Generated_Source\PSoC5/CyLib.c ****     #elif defined(__C51__)
1426:Generated_Source\PSoC5/CyLib.c ****         CYDEV_HALT_CPU;
1427:Generated_Source\PSoC5/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
1428:Generated_Source\PSoC5/CyLib.c **** }
 2910              		.loc 1 1428 0
 2911              		.thumb
 2912 000c 0C37     		adds	r7, r7, #12
 2913              		.cfi_def_cfa_offset 4
 2914 000e BD46     		mov	sp, r7
 2915              		.cfi_def_cfa_register 13
 2916              		@ sp needed
 2917 0010 5DF8047B 		ldr	r7, [sp], #4
 2918              		.cfi_restore 7
 2919              		.cfi_def_cfa_offset 0
 2920 0014 7047     		bx	lr
 2921              		.cfi_endproc
 2922              	.LFE39:
 2923              		.size	CyHalt, .-CyHalt
 2924 0016 00BF     		.section	.text.CySoftwareReset,"ax",%progbits
 2925              		.align	2
 2926              		.global	CySoftwareReset
 2927              		.thumb
 2928              		.thumb_func
 2929              		.type	CySoftwareReset, %function
 2930              	CySoftwareReset:
 2931              	.LFB40:
1429:Generated_Source\PSoC5/CyLib.c **** 
1430:Generated_Source\PSoC5/CyLib.c **** 
1431:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1432:Generated_Source\PSoC5/CyLib.c **** * Function Name: CySoftwareReset
1433:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1434:Generated_Source\PSoC5/CyLib.c **** *
1435:Generated_Source\PSoC5/CyLib.c **** *  Forces a device software reset.
1436:Generated_Source\PSoC5/CyLib.c **** *
1437:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1438:Generated_Source\PSoC5/CyLib.c **** void CySoftwareReset(void) 
1439:Generated_Source\PSoC5/CyLib.c **** {
 2932              		.loc 1 1439 0
 2933              		.cfi_startproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 78


 2934              		@ args = 0, pretend = 0, frame = 0
 2935              		@ frame_needed = 1, uses_anonymous_args = 0
 2936              		@ link register save eliminated.
 2937 0000 80B4     		push	{r7}
 2938              		.cfi_def_cfa_offset 4
 2939              		.cfi_offset 7, -4
 2940 0002 00AF     		add	r7, sp, #0
 2941              		.cfi_def_cfa_register 7
1440:Generated_Source\PSoC5/CyLib.c ****     CY_LIB_RESET_CR2_REG |= CY_LIB_RESET_CR2_RESET;
 2942              		.loc 1 1440 0
 2943 0004 054A     		ldr	r2, .L216
 2944 0006 054B     		ldr	r3, .L216
 2945 0008 1B78     		ldrb	r3, [r3]
 2946 000a DBB2     		uxtb	r3, r3
 2947 000c 43F00103 		orr	r3, r3, #1
 2948 0010 DBB2     		uxtb	r3, r3
 2949 0012 1370     		strb	r3, [r2]
1441:Generated_Source\PSoC5/CyLib.c **** }
 2950              		.loc 1 1441 0
 2951 0014 BD46     		mov	sp, r7
 2952              		.cfi_def_cfa_register 13
 2953              		@ sp needed
 2954 0016 5DF8047B 		ldr	r7, [sp], #4
 2955              		.cfi_restore 7
 2956              		.cfi_def_cfa_offset 0
 2957 001a 7047     		bx	lr
 2958              	.L217:
 2959              		.align	2
 2960              	.L216:
 2961 001c F6460040 		.word	1073759990
 2962              		.cfi_endproc
 2963              	.LFE40:
 2964              		.size	CySoftwareReset, .-CySoftwareReset
 2965              		.section	.text.CyDelay,"ax",%progbits
 2966              		.align	2
 2967              		.global	CyDelay
 2968              		.thumb
 2969              		.thumb_func
 2970              		.type	CyDelay, %function
 2971              	CyDelay:
 2972              	.LFB41:
1442:Generated_Source\PSoC5/CyLib.c **** 
1443:Generated_Source\PSoC5/CyLib.c **** 
1444:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1445:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyDelay
1446:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1447:Generated_Source\PSoC5/CyLib.c **** *
1448:Generated_Source\PSoC5/CyLib.c **** *  Blocks for milliseconds.
1449:Generated_Source\PSoC5/CyLib.c **** *
1450:Generated_Source\PSoC5/CyLib.c **** *  Note:
1451:Generated_Source\PSoC5/CyLib.c **** *  CyDelay has been implemented with the instruction cache assumed enabled. When
1452:Generated_Source\PSoC5/CyLib.c **** *  the instruction cache is disabled on PSoC5, CyDelay will be two times larger.
1453:Generated_Source\PSoC5/CyLib.c **** *  For example, with instruction cache disabled CyDelay(100) would result in
1454:Generated_Source\PSoC5/CyLib.c **** *  about 200 ms delay instead of 100 ms.
1455:Generated_Source\PSoC5/CyLib.c **** *
1456:Generated_Source\PSoC5/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
1457:Generated_Source\PSoC5/CyLib.c **** *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 79


1458:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1459:Generated_Source\PSoC5/CyLib.c **** void CyDelay(uint32 milliseconds) CYREENTRANT
1460:Generated_Source\PSoC5/CyLib.c **** {
 2973              		.loc 1 1460 0
 2974              		.cfi_startproc
 2975              		@ args = 0, pretend = 0, frame = 8
 2976              		@ frame_needed = 1, uses_anonymous_args = 0
 2977 0000 80B5     		push	{r7, lr}
 2978              		.cfi_def_cfa_offset 8
 2979              		.cfi_offset 7, -8
 2980              		.cfi_offset 14, -4
 2981 0002 82B0     		sub	sp, sp, #8
 2982              		.cfi_def_cfa_offset 16
 2983 0004 00AF     		add	r7, sp, #0
 2984              		.cfi_def_cfa_register 7
 2985 0006 7860     		str	r0, [r7, #4]
1461:Generated_Source\PSoC5/CyLib.c ****     while (milliseconds > 32768u)
 2986              		.loc 1 1461 0
 2987 0008 08E0     		b	.L219
 2988              	.L220:
1462:Generated_Source\PSoC5/CyLib.c ****     {
1463:Generated_Source\PSoC5/CyLib.c ****         /***********************************************************************
1464:Generated_Source\PSoC5/CyLib.c ****         * This loop prevents overflow.At 100MHz, milliseconds * delay_freq_khz
1465:Generated_Source\PSoC5/CyLib.c ****         * overflows at about 42 seconds.
1466:Generated_Source\PSoC5/CyLib.c ****         ***********************************************************************/
1467:Generated_Source\PSoC5/CyLib.c ****         CyDelayCycles(cydelay_32k_ms);
 2989              		.loc 1 1467 0
 2990 000a 0C4B     		ldr	r3, .L221
 2991 000c 1B68     		ldr	r3, [r3]
 2992 000e 1846     		mov	r0, r3
 2993 0010 FFF7FEFF 		bl	CyDelayCycles
1468:Generated_Source\PSoC5/CyLib.c ****         milliseconds = ((uint32)(milliseconds - 32768u));
 2994              		.loc 1 1468 0
 2995 0014 7B68     		ldr	r3, [r7, #4]
 2996 0016 A3F50043 		sub	r3, r3, #32768
 2997 001a 7B60     		str	r3, [r7, #4]
 2998              	.L219:
1461:Generated_Source\PSoC5/CyLib.c ****     while (milliseconds > 32768u)
 2999              		.loc 1 1461 0
 3000 001c 7B68     		ldr	r3, [r7, #4]
 3001 001e B3F5004F 		cmp	r3, #32768
 3002 0022 F2D8     		bhi	.L220
1469:Generated_Source\PSoC5/CyLib.c ****     }
1470:Generated_Source\PSoC5/CyLib.c **** 
1471:Generated_Source\PSoC5/CyLib.c ****     CyDelayCycles(milliseconds * cydelay_freq_khz);
 3003              		.loc 1 1471 0
 3004 0024 064B     		ldr	r3, .L221+4
 3005 0026 1B68     		ldr	r3, [r3]
 3006 0028 7A68     		ldr	r2, [r7, #4]
 3007 002a 02FB03F3 		mul	r3, r2, r3
 3008 002e 1846     		mov	r0, r3
 3009 0030 FFF7FEFF 		bl	CyDelayCycles
1472:Generated_Source\PSoC5/CyLib.c **** }
 3010              		.loc 1 1472 0
 3011 0034 0837     		adds	r7, r7, #8
 3012              		.cfi_def_cfa_offset 8
 3013 0036 BD46     		mov	sp, r7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 80


 3014              		.cfi_def_cfa_register 13
 3015              		@ sp needed
 3016 0038 80BD     		pop	{r7, pc}
 3017              	.L222:
 3018 003a 00BF     		.align	2
 3019              	.L221:
 3020 003c 00000000 		.word	cydelay_32k_ms
 3021 0040 00000000 		.word	cydelay_freq_khz
 3022              		.cfi_endproc
 3023              	.LFE41:
 3024              		.size	CyDelay, .-CyDelay
 3025              		.section	.text.CyDelayUs,"ax",%progbits
 3026              		.align	2
 3027              		.global	CyDelayUs
 3028              		.thumb
 3029              		.thumb_func
 3030              		.type	CyDelayUs, %function
 3031              	CyDelayUs:
 3032              	.LFB42:
1473:Generated_Source\PSoC5/CyLib.c **** 
1474:Generated_Source\PSoC5/CyLib.c **** 
1475:Generated_Source\PSoC5/CyLib.c **** #if(!CY_PSOC3)
1476:Generated_Source\PSoC5/CyLib.c **** 
1477:Generated_Source\PSoC5/CyLib.c ****     /* For PSoC3 devices function is defined in CyBootAsmKeil.a51 file */
1478:Generated_Source\PSoC5/CyLib.c **** 
1479:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
1480:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyDelayUs
1481:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
1482:Generated_Source\PSoC5/CyLib.c ****     *
1483:Generated_Source\PSoC5/CyLib.c ****     *  Blocks for microseconds.
1484:Generated_Source\PSoC5/CyLib.c ****     *
1485:Generated_Source\PSoC5/CyLib.c ****     *  Note:
1486:Generated_Source\PSoC5/CyLib.c ****     *   CyDelay has been implemented with the instruction cache assumed enabled.
1487:Generated_Source\PSoC5/CyLib.c ****     *   When instruction cache is disabled on PSoC5, CyDelayUs will be two times
1488:Generated_Source\PSoC5/CyLib.c ****     *   larger. Ex: With instruction cache disabled CyDelayUs(100) would result
1489:Generated_Source\PSoC5/CyLib.c ****     *   in about 200us delay instead of 100us.
1490:Generated_Source\PSoC5/CyLib.c ****     *
1491:Generated_Source\PSoC5/CyLib.c ****     *  \param uint16 microseconds: number of microseconds to delay.
1492:Generated_Source\PSoC5/CyLib.c ****     *
1493:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
1494:Generated_Source\PSoC5/CyLib.c ****     *  CyDelayUS has been implemented with the instruction cache assumed enabled.
1495:Generated_Source\PSoC5/CyLib.c ****     *  When the instruction cache is disabled on PSoC 5, CyDelayUs will be two times
1496:Generated_Source\PSoC5/CyLib.c ****     *  larger. For example, with the instruction cache disabled CyDelayUs(100) would
1497:Generated_Source\PSoC5/CyLib.c ****     *  result in about 200 us delay instead of 100 us.
1498:Generated_Source\PSoC5/CyLib.c ****     *
1499:Generated_Source\PSoC5/CyLib.c ****     *  If the bus clock frequency is a small non-integer number, the actual delay
1500:Generated_Source\PSoC5/CyLib.c ****     *  can be up to twice as long as the nominal value. The actual delay cannot be
1501:Generated_Source\PSoC5/CyLib.c ****     *  shorter than the nominal one.
1502:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
1503:Generated_Source\PSoC5/CyLib.c ****     void CyDelayUs(uint16 microseconds) CYREENTRANT
1504:Generated_Source\PSoC5/CyLib.c ****     {
 3033              		.loc 1 1504 0
 3034              		.cfi_startproc
 3035              		@ args = 0, pretend = 0, frame = 8
 3036              		@ frame_needed = 1, uses_anonymous_args = 0
 3037 0000 80B5     		push	{r7, lr}
 3038              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 81


 3039              		.cfi_offset 7, -8
 3040              		.cfi_offset 14, -4
 3041 0002 82B0     		sub	sp, sp, #8
 3042              		.cfi_def_cfa_offset 16
 3043 0004 00AF     		add	r7, sp, #0
 3044              		.cfi_def_cfa_register 7
 3045 0006 0346     		mov	r3, r0
 3046 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1505:Generated_Source\PSoC5/CyLib.c ****         CyDelayCycles((uint32)microseconds * cydelay_freq_mhz);
 3047              		.loc 1 1505 0
 3048 000a FB88     		ldrh	r3, [r7, #6]
 3049 000c 044A     		ldr	r2, .L224
 3050 000e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3051 0010 02FB03F3 		mul	r3, r2, r3
 3052 0014 1846     		mov	r0, r3
 3053 0016 FFF7FEFF 		bl	CyDelayCycles
1506:Generated_Source\PSoC5/CyLib.c ****     }
 3054              		.loc 1 1506 0
 3055 001a 0837     		adds	r7, r7, #8
 3056              		.cfi_def_cfa_offset 8
 3057 001c BD46     		mov	sp, r7
 3058              		.cfi_def_cfa_register 13
 3059              		@ sp needed
 3060 001e 80BD     		pop	{r7, pc}
 3061              	.L225:
 3062              		.align	2
 3063              	.L224:
 3064 0020 00000000 		.word	cydelay_freq_mhz
 3065              		.cfi_endproc
 3066              	.LFE42:
 3067              		.size	CyDelayUs, .-CyDelayUs
 3068              		.section	.text.CyDelayFreq,"ax",%progbits
 3069              		.align	2
 3070              		.global	CyDelayFreq
 3071              		.thumb
 3072              		.thumb_func
 3073              		.type	CyDelayFreq, %function
 3074              	CyDelayFreq:
 3075              	.LFB43:
1507:Generated_Source\PSoC5/CyLib.c **** 
1508:Generated_Source\PSoC5/CyLib.c **** #endif  /* (!CY_PSOC3) */
1509:Generated_Source\PSoC5/CyLib.c **** 
1510:Generated_Source\PSoC5/CyLib.c **** 
1511:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1512:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyDelayFreq
1513:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1514:Generated_Source\PSoC5/CyLib.c **** *
1515:Generated_Source\PSoC5/CyLib.c **** *  Sets the clock frequency for CyDelay.
1516:Generated_Source\PSoC5/CyLib.c **** *
1517:Generated_Source\PSoC5/CyLib.c **** *  \param freq: The frequency of the bus clock in Hertz.
1518:Generated_Source\PSoC5/CyLib.c **** *
1519:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1520:Generated_Source\PSoC5/CyLib.c **** void CyDelayFreq(uint32 freq) CYREENTRANT
1521:Generated_Source\PSoC5/CyLib.c **** {
 3076              		.loc 1 1521 0
 3077              		.cfi_startproc
 3078              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 82


 3079              		@ frame_needed = 1, uses_anonymous_args = 0
 3080              		@ link register save eliminated.
 3081 0000 80B4     		push	{r7}
 3082              		.cfi_def_cfa_offset 4
 3083              		.cfi_offset 7, -4
 3084 0002 83B0     		sub	sp, sp, #12
 3085              		.cfi_def_cfa_offset 16
 3086 0004 00AF     		add	r7, sp, #0
 3087              		.cfi_def_cfa_register 7
 3088 0006 7860     		str	r0, [r7, #4]
1522:Generated_Source\PSoC5/CyLib.c ****     if (freq != 0u)
 3089              		.loc 1 1522 0
 3090 0008 7B68     		ldr	r3, [r7, #4]
 3091 000a 002B     		cmp	r3, #0
 3092 000c 03D0     		beq	.L227
1523:Generated_Source\PSoC5/CyLib.c ****     {
1524:Generated_Source\PSoC5/CyLib.c ****         cydelay_freq_hz = freq;
 3093              		.loc 1 1524 0
 3094 000e 144A     		ldr	r2, .L229
 3095 0010 7B68     		ldr	r3, [r7, #4]
 3096 0012 1360     		str	r3, [r2]
 3097 0014 02E0     		b	.L228
 3098              	.L227:
1525:Generated_Source\PSoC5/CyLib.c ****     }
1526:Generated_Source\PSoC5/CyLib.c ****     else
1527:Generated_Source\PSoC5/CyLib.c ****     {
1528:Generated_Source\PSoC5/CyLib.c ****         cydelay_freq_hz = BCLK__BUS_CLK__HZ;
 3099              		.loc 1 1528 0
 3100 0016 124B     		ldr	r3, .L229
 3101 0018 124A     		ldr	r2, .L229+4
 3102 001a 1A60     		str	r2, [r3]
 3103              	.L228:
1529:Generated_Source\PSoC5/CyLib.c ****     }
1530:Generated_Source\PSoC5/CyLib.c **** 
1531:Generated_Source\PSoC5/CyLib.c ****     cydelay_freq_mhz = (uint8)((cydelay_freq_hz + 999999u) / 1000000u);
 3104              		.loc 1 1531 0
 3105 001c 104B     		ldr	r3, .L229
 3106 001e 1B68     		ldr	r3, [r3]
 3107 0020 03F57423 		add	r3, r3, #999424
 3108 0024 03F23F23 		addw	r3, r3, #575
 3109 0028 0F4A     		ldr	r2, .L229+8
 3110 002a A2FB0323 		umull	r2, r3, r2, r3
 3111 002e 9B0C     		lsrs	r3, r3, #18
 3112 0030 DAB2     		uxtb	r2, r3
 3113 0032 0E4B     		ldr	r3, .L229+12
 3114 0034 1A70     		strb	r2, [r3]
1532:Generated_Source\PSoC5/CyLib.c ****     cydelay_freq_khz = (cydelay_freq_hz + 999u) / 1000u;
 3115              		.loc 1 1532 0
 3116 0036 0A4B     		ldr	r3, .L229
 3117 0038 1B68     		ldr	r3, [r3]
 3118 003a 03F2E733 		addw	r3, r3, #999
 3119 003e 0C4A     		ldr	r2, .L229+16
 3120 0040 A2FB0323 		umull	r2, r3, r2, r3
 3121 0044 9B09     		lsrs	r3, r3, #6
 3122 0046 0B4A     		ldr	r2, .L229+20
 3123 0048 1360     		str	r3, [r2]
1533:Generated_Source\PSoC5/CyLib.c ****     cydelay_32k_ms   = 32768u * cydelay_freq_khz;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 83


 3124              		.loc 1 1533 0
 3125 004a 0A4B     		ldr	r3, .L229+20
 3126 004c 1B68     		ldr	r3, [r3]
 3127 004e DB03     		lsls	r3, r3, #15
 3128 0050 094A     		ldr	r2, .L229+24
 3129 0052 1360     		str	r3, [r2]
1534:Generated_Source\PSoC5/CyLib.c **** }
 3130              		.loc 1 1534 0
 3131 0054 0C37     		adds	r7, r7, #12
 3132              		.cfi_def_cfa_offset 4
 3133 0056 BD46     		mov	sp, r7
 3134              		.cfi_def_cfa_register 13
 3135              		@ sp needed
 3136 0058 5DF8047B 		ldr	r7, [sp], #4
 3137              		.cfi_restore 7
 3138              		.cfi_def_cfa_offset 0
 3139 005c 7047     		bx	lr
 3140              	.L230:
 3141 005e 00BF     		.align	2
 3142              	.L229:
 3143 0060 00000000 		.word	cydelay_freq_hz
 3144 0064 00512502 		.word	36000000
 3145 0068 83DE1B43 		.word	1125899907
 3146 006c 00000000 		.word	cydelay_freq_mhz
 3147 0070 D34D6210 		.word	274877907
 3148 0074 00000000 		.word	cydelay_freq_khz
 3149 0078 00000000 		.word	cydelay_32k_ms
 3150              		.cfi_endproc
 3151              	.LFE43:
 3152              		.size	CyDelayFreq, .-CyDelayFreq
 3153              		.section	.text.CyWdtStart,"ax",%progbits
 3154              		.align	2
 3155              		.global	CyWdtStart
 3156              		.thumb
 3157              		.thumb_func
 3158              		.type	CyWdtStart, %function
 3159              	CyWdtStart:
 3160              	.LFB44:
1535:Generated_Source\PSoC5/CyLib.c **** 
1536:Generated_Source\PSoC5/CyLib.c **** 
1537:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1538:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyWdtStart
1539:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1540:Generated_Source\PSoC5/CyLib.c **** *
1541:Generated_Source\PSoC5/CyLib.c **** *  Enables the watchdog timer.
1542:Generated_Source\PSoC5/CyLib.c **** *
1543:Generated_Source\PSoC5/CyLib.c **** *  The timer is configured for the specified count interval, the central
1544:Generated_Source\PSoC5/CyLib.c **** *  timewheel is cleared, the setting for the low power mode is configured and
1545:Generated_Source\PSoC5/CyLib.c **** *  the watchdog timer is enabled.
1546:Generated_Source\PSoC5/CyLib.c **** *
1547:Generated_Source\PSoC5/CyLib.c **** *  Once enabled the watchdog cannot be disabled. The watchdog counts each time
1548:Generated_Source\PSoC5/CyLib.c **** *  the Central Time Wheel (CTW) reaches the period specified. The watchdog must
1549:Generated_Source\PSoC5/CyLib.c **** *  be cleared using the CyWdtClear() function before three ticks of the watchdog
1550:Generated_Source\PSoC5/CyLib.c **** *  timer occur. The CTW is free running, so this will occur after between 2 and
1551:Generated_Source\PSoC5/CyLib.c **** *  3 timer periods elapse.
1552:Generated_Source\PSoC5/CyLib.c **** *
1553:Generated_Source\PSoC5/CyLib.c **** *  PSoC5: The watchdog timer should not be used during sleep modes. Since the
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 84


1554:Generated_Source\PSoC5/CyLib.c **** *  WDT cannot be disabled after it is enabled, the WDT timeout period can be
1555:Generated_Source\PSoC5/CyLib.c **** *  set to be greater than the sleep wakeup period, then feed the dog on each
1556:Generated_Source\PSoC5/CyLib.c **** *  wakeup from Sleep.
1557:Generated_Source\PSoC5/CyLib.c **** *
1558:Generated_Source\PSoC5/CyLib.c **** *  \param ticks: One of the four available timer periods. Once WDT enabled, the
1559:Generated_Source\PSoC5/CyLib.c ****    interval cannot be changed.
1560:Generated_Source\PSoC5/CyLib.c **** *         CYWDT_2_TICKS     -     4 - 6     ms
1561:Generated_Source\PSoC5/CyLib.c **** *         CYWDT_16_TICKS    -    32 - 48    ms
1562:Generated_Source\PSoC5/CyLib.c **** *         CYWDT_128_TICKS   -   256 - 384   ms
1563:Generated_Source\PSoC5/CyLib.c **** *         CYWDT_1024_TICKS  - 2.048 - 3.072 s
1564:Generated_Source\PSoC5/CyLib.c **** *
1565:Generated_Source\PSoC5/CyLib.c **** *  \param lpMode: Low power mode configuration. This parameter is ignored for PSoC 5.
1566:Generated_Source\PSoC5/CyLib.c **** *          The WDT always acts as if CYWDT_LPMODE_NOCHANGE is passed.
1567:Generated_Source\PSoC5/CyLib.c **** *
1568:Generated_Source\PSoC5/CyLib.c **** *          CYWDT_LPMODE_NOCHANGE - No Change
1569:Generated_Source\PSoC5/CyLib.c **** *          CYWDT_LPMODE_MAXINTER - Switch to longest timer mode during low power
1570:Generated_Source\PSoC5/CyLib.c **** *                                 mode
1571:Generated_Source\PSoC5/CyLib.c **** *          CYWDT_LPMODE_DISABLED - Disable WDT during low power mode
1572:Generated_Source\PSoC5/CyLib.c **** *
1573:Generated_Source\PSoC5/CyLib.c **** * \sideeffect
1574:Generated_Source\PSoC5/CyLib.c **** *  PSoC5: The ILO 1 KHz must be enabled for proper WDT operation. Stopping the
1575:Generated_Source\PSoC5/CyLib.c **** *  ILO 1 kHz could break the active WDT functionality.
1576:Generated_Source\PSoC5/CyLib.c **** *
1577:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1578:Generated_Source\PSoC5/CyLib.c **** void CyWdtStart(uint8 ticks, uint8 lpMode) 
1579:Generated_Source\PSoC5/CyLib.c **** {
 3161              		.loc 1 1579 0
 3162              		.cfi_startproc
 3163              		@ args = 0, pretend = 0, frame = 8
 3164              		@ frame_needed = 1, uses_anonymous_args = 0
 3165              		@ link register save eliminated.
 3166 0000 80B4     		push	{r7}
 3167              		.cfi_def_cfa_offset 4
 3168              		.cfi_offset 7, -4
 3169 0002 83B0     		sub	sp, sp, #12
 3170              		.cfi_def_cfa_offset 16
 3171 0004 00AF     		add	r7, sp, #0
 3172              		.cfi_def_cfa_register 7
 3173 0006 0346     		mov	r3, r0
 3174 0008 0A46     		mov	r2, r1
 3175 000a FB71     		strb	r3, [r7, #7]
 3176 000c 1346     		mov	r3, r2
 3177 000e BB71     		strb	r3, [r7, #6]
1580:Generated_Source\PSoC5/CyLib.c ****     /* Set WDT interval */
1581:Generated_Source\PSoC5/CyLib.c ****     CY_WDT_CFG_REG = (CY_WDT_CFG_REG & ((uint8)(~CY_WDT_CFG_INTERVAL_MASK))) | (ticks & CY_WDT_CFG_
 3178              		.loc 1 1581 0
 3179 0010 1D49     		ldr	r1, .L232
 3180 0012 1D4B     		ldr	r3, .L232
 3181 0014 1B78     		ldrb	r3, [r3]
 3182 0016 DBB2     		uxtb	r3, r3
 3183 0018 23F00303 		bic	r3, r3, #3
 3184 001c DAB2     		uxtb	r2, r3
 3185 001e FB79     		ldrb	r3, [r7, #7]
 3186 0020 03F00303 		and	r3, r3, #3
 3187 0024 DBB2     		uxtb	r3, r3
 3188 0026 1343     		orrs	r3, r3, r2
 3189 0028 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 85


 3190 002a 0B70     		strb	r3, [r1]
1582:Generated_Source\PSoC5/CyLib.c **** 
1583:Generated_Source\PSoC5/CyLib.c ****     /* Reset CTW to ensure that first watchdog period is full */
1584:Generated_Source\PSoC5/CyLib.c ****     CY_WDT_CFG_REG |= CY_WDT_CFG_CTW_RESET;
 3191              		.loc 1 1584 0
 3192 002c 164A     		ldr	r2, .L232
 3193 002e 164B     		ldr	r3, .L232
 3194 0030 1B78     		ldrb	r3, [r3]
 3195 0032 DBB2     		uxtb	r3, r3
 3196 0034 63F07F03 		orn	r3, r3, #127
 3197 0038 DBB2     		uxtb	r3, r3
 3198 003a 1370     		strb	r3, [r2]
1585:Generated_Source\PSoC5/CyLib.c ****     CY_WDT_CFG_REG &= ((uint8)(~CY_WDT_CFG_CTW_RESET));
 3199              		.loc 1 1585 0
 3200 003c 124A     		ldr	r2, .L232
 3201 003e 124B     		ldr	r3, .L232
 3202 0040 1B78     		ldrb	r3, [r3]
 3203 0042 DBB2     		uxtb	r3, r3
 3204 0044 03F07F03 		and	r3, r3, #127
 3205 0048 DBB2     		uxtb	r3, r3
 3206 004a 1370     		strb	r3, [r2]
1586:Generated_Source\PSoC5/CyLib.c **** 
1587:Generated_Source\PSoC5/CyLib.c ****     /* Setting low power mode */
1588:Generated_Source\PSoC5/CyLib.c ****     CY_WDT_CFG_REG = (((uint8)(lpMode << CY_WDT_CFG_LPMODE_SHIFT)) & CY_WDT_CFG_LPMODE_MASK) |
 3207              		.loc 1 1588 0
 3208 004c 0E49     		ldr	r1, .L232
 3209 004e BB79     		ldrb	r3, [r7, #6]
 3210 0050 5B01     		lsls	r3, r3, #5
 3211 0052 DBB2     		uxtb	r3, r3
 3212 0054 03F06003 		and	r3, r3, #96
 3213 0058 DAB2     		uxtb	r2, r3
1589:Generated_Source\PSoC5/CyLib.c ****                        (CY_WDT_CFG_REG & ((uint8)(~CY_WDT_CFG_LPMODE_MASK)));
 3214              		.loc 1 1589 0
 3215 005a 0B4B     		ldr	r3, .L232
 3216 005c 1B78     		ldrb	r3, [r3]
 3217 005e DBB2     		uxtb	r3, r3
1588:Generated_Source\PSoC5/CyLib.c ****                        (CY_WDT_CFG_REG & ((uint8)(~CY_WDT_CFG_LPMODE_MASK)));
 3218              		.loc 1 1588 0
 3219 0060 23F06003 		bic	r3, r3, #96
 3220 0064 DBB2     		uxtb	r3, r3
 3221 0066 1343     		orrs	r3, r3, r2
 3222 0068 DBB2     		uxtb	r3, r3
 3223 006a 0B70     		strb	r3, [r1]
1590:Generated_Source\PSoC5/CyLib.c **** 
1591:Generated_Source\PSoC5/CyLib.c ****     /* Enables watchdog reset */
1592:Generated_Source\PSoC5/CyLib.c ****     CY_WDT_CFG_REG |= CY_WDT_CFG_WDR_EN;
 3224              		.loc 1 1592 0
 3225 006c 064A     		ldr	r2, .L232
 3226 006e 064B     		ldr	r3, .L232
 3227 0070 1B78     		ldrb	r3, [r3]
 3228 0072 DBB2     		uxtb	r3, r3
 3229 0074 43F01003 		orr	r3, r3, #16
 3230 0078 DBB2     		uxtb	r3, r3
 3231 007a 1370     		strb	r3, [r2]
1593:Generated_Source\PSoC5/CyLib.c **** }
 3232              		.loc 1 1593 0
 3233 007c 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 86


 3234              		.cfi_def_cfa_offset 4
 3235 007e BD46     		mov	sp, r7
 3236              		.cfi_def_cfa_register 13
 3237              		@ sp needed
 3238 0080 5DF8047B 		ldr	r7, [sp], #4
 3239              		.cfi_restore 7
 3240              		.cfi_def_cfa_offset 0
 3241 0084 7047     		bx	lr
 3242              	.L233:
 3243 0086 00BF     		.align	2
 3244              	.L232:
 3245 0088 83430040 		.word	1073759107
 3246              		.cfi_endproc
 3247              	.LFE44:
 3248              		.size	CyWdtStart, .-CyWdtStart
 3249              		.section	.text.CyWdtClear,"ax",%progbits
 3250              		.align	2
 3251              		.global	CyWdtClear
 3252              		.thumb
 3253              		.thumb_func
 3254              		.type	CyWdtClear, %function
 3255              	CyWdtClear:
 3256              	.LFB45:
1594:Generated_Source\PSoC5/CyLib.c **** 
1595:Generated_Source\PSoC5/CyLib.c **** 
1596:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1597:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyWdtClear
1598:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1599:Generated_Source\PSoC5/CyLib.c **** *
1600:Generated_Source\PSoC5/CyLib.c **** *  Clears (feeds) the watchdog timer.
1601:Generated_Source\PSoC5/CyLib.c **** *
1602:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1603:Generated_Source\PSoC5/CyLib.c **** void CyWdtClear(void) 
1604:Generated_Source\PSoC5/CyLib.c **** {
 3257              		.loc 1 1604 0
 3258              		.cfi_startproc
 3259              		@ args = 0, pretend = 0, frame = 0
 3260              		@ frame_needed = 1, uses_anonymous_args = 0
 3261              		@ link register save eliminated.
 3262 0000 80B4     		push	{r7}
 3263              		.cfi_def_cfa_offset 4
 3264              		.cfi_offset 7, -4
 3265 0002 00AF     		add	r7, sp, #0
 3266              		.cfi_def_cfa_register 7
1605:Generated_Source\PSoC5/CyLib.c ****     CY_WDT_CR_REG = CY_WDT_CR_FEED;
 3267              		.loc 1 1605 0
 3268 0004 034B     		ldr	r3, .L235
 3269 0006 0122     		movs	r2, #1
 3270 0008 1A70     		strb	r2, [r3]
1606:Generated_Source\PSoC5/CyLib.c **** }
 3271              		.loc 1 1606 0
 3272 000a BD46     		mov	sp, r7
 3273              		.cfi_def_cfa_register 13
 3274              		@ sp needed
 3275 000c 5DF8047B 		ldr	r7, [sp], #4
 3276              		.cfi_restore 7
 3277              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 87


 3278 0010 7047     		bx	lr
 3279              	.L236:
 3280 0012 00BF     		.align	2
 3281              	.L235:
 3282 0014 84430040 		.word	1073759108
 3283              		.cfi_endproc
 3284              	.LFE45:
 3285              		.size	CyWdtClear, .-CyWdtClear
 3286              		.section	.text.CyVdLvDigitEnable,"ax",%progbits
 3287              		.align	2
 3288              		.global	CyVdLvDigitEnable
 3289              		.thumb
 3290              		.thumb_func
 3291              		.type	CyVdLvDigitEnable, %function
 3292              	CyVdLvDigitEnable:
 3293              	.LFB46:
1607:Generated_Source\PSoC5/CyLib.c **** 
1608:Generated_Source\PSoC5/CyLib.c **** 
1609:Generated_Source\PSoC5/CyLib.c **** 
1610:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1611:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyVdLvDigitEnable
1612:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1613:Generated_Source\PSoC5/CyLib.c **** *
1614:Generated_Source\PSoC5/CyLib.c **** *  Sets the voltage trip level, enables the output of the digital low-voltage
1615:Generated_Source\PSoC5/CyLib.c **** *  monitor, and optionally configures voltage monitor to reset device upon the
1616:Generated_Source\PSoC5/CyLib.c **** *  low-voltage event instead of generating an interrupt.
1617:Generated_Source\PSoC5/CyLib.c **** *
1618:Generated_Source\PSoC5/CyLib.c **** *  Note The associated interrupt enable/disable state is not changed by the
1619:Generated_Source\PSoC5/CyLib.c **** *  function. The Interrupt component API should be used to register the
1620:Generated_Source\PSoC5/CyLib.c **** *  interrupt service routine and to enable/disable associated interrupt.
1621:Generated_Source\PSoC5/CyLib.c **** *
1622:Generated_Source\PSoC5/CyLib.c **** *  \param reset: Enables device reset on digital low-voltage event:
1623:Generated_Source\PSoC5/CyLib.c **** *   Zero - Interrupt on digital low-voltage event
1624:Generated_Source\PSoC5/CyLib.c **** *   Non-zero - Reset on digital low-voltage event
1625:Generated_Source\PSoC5/CyLib.c **** *
1626:Generated_Source\PSoC5/CyLib.c **** *  \param threshold: Sets the trip point of the digital low-voltage monitoring circuit
1627:Generated_Source\PSoC5/CyLib.c **** *   in steps of approximately 250 mV in range from 1.70 V (0x00) to 5.45 V
1628:Generated_Source\PSoC5/CyLib.c **** *   (0x0F). For example, the trip point is set to 1.80 V when the threshold
1629:Generated_Source\PSoC5/CyLib.c **** *   parameter value is 0x04. Refer to the device TRM for the exact trip voltage
1630:Generated_Source\PSoC5/CyLib.c **** *   values.
1631:Generated_Source\PSoC5/CyLib.c **** *
1632:Generated_Source\PSoC5/CyLib.c **** * Side Effects and Restrictions:
1633:Generated_Source\PSoC5/CyLib.c **** *  The voltage resets are momentary. When a voltage reset (analog/digital
1634:Generated_Source\PSoC5/CyLib.c **** *  low-voltage and analog high-voltage) occurs, the RESET_CR1 and RESET_CR3
1635:Generated_Source\PSoC5/CyLib.c **** *  registers are restored to their default values. This means that the voltage
1636:Generated_Source\PSoC5/CyLib.c **** *  monitor circuit is no longer enabled and the device exits reset. If the
1637:Generated_Source\PSoC5/CyLib.c **** *  supply is below the trip level and firmware enables the voltage reset
1638:Generated_Source\PSoC5/CyLib.c **** *  functionality, the device will reset again. This will continue as long as the
1639:Generated_Source\PSoC5/CyLib.c **** *  supply is below the trip level or as long as the user enables the reset
1640:Generated_Source\PSoC5/CyLib.c **** *  functionality of the voltage monitor functionality.
1641:Generated_Source\PSoC5/CyLib.c **** *
1642:Generated_Source\PSoC5/CyLib.c **** *  When any voltage reset occurs, the RESET_SR0 and RESET_SR2 status registers
1643:Generated_Source\PSoC5/CyLib.c **** *  are cleared. This means that analog low-voltage, digital low-voltage and
1644:Generated_Source\PSoC5/CyLib.c **** *  analog high-voltage status bits are not persistent across any voltage reset.
1645:Generated_Source\PSoC5/CyLib.c **** *
1646:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1647:Generated_Source\PSoC5/CyLib.c **** void CyVdLvDigitEnable(uint8 reset, uint8 threshold) 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 88


1648:Generated_Source\PSoC5/CyLib.c **** {
 3294              		.loc 1 1648 0
 3295              		.cfi_startproc
 3296              		@ args = 0, pretend = 0, frame = 16
 3297              		@ frame_needed = 1, uses_anonymous_args = 0
 3298 0000 80B5     		push	{r7, lr}
 3299              		.cfi_def_cfa_offset 8
 3300              		.cfi_offset 7, -8
 3301              		.cfi_offset 14, -4
 3302 0002 84B0     		sub	sp, sp, #16
 3303              		.cfi_def_cfa_offset 24
 3304 0004 00AF     		add	r7, sp, #0
 3305              		.cfi_def_cfa_register 7
 3306 0006 0346     		mov	r3, r0
 3307 0008 0A46     		mov	r2, r1
 3308 000a FB71     		strb	r3, [r7, #7]
 3309 000c 1346     		mov	r3, r2
 3310 000e BB71     		strb	r3, [r7, #6]
1649:Generated_Source\PSoC5/CyLib.c ****     uint32 intRegTmp;
1650:Generated_Source\PSoC5/CyLib.c ****     uint8 interruptState;
1651:Generated_Source\PSoC5/CyLib.c **** 
1652:Generated_Source\PSoC5/CyLib.c ****     interruptState = CyEnterCriticalSection();
 3311              		.loc 1 1652 0
 3312 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 3313 0014 0346     		mov	r3, r0
 3314 0016 FB73     		strb	r3, [r7, #15]
1653:Generated_Source\PSoC5/CyLib.c **** 
1654:Generated_Source\PSoC5/CyLib.c ****     /* Store interrupt enable state */
1655:Generated_Source\PSoC5/CyLib.c ****     intRegTmp = CY_INT_ENABLE_REG & CY_VD_INT_MASK;
 3315              		.loc 1 1655 0
 3316 0018 264B     		ldr	r3, .L240
 3317 001a 1B68     		ldr	r3, [r3]
 3318 001c 03F00103 		and	r3, r3, #1
 3319 0020 BB60     		str	r3, [r7, #8]
1656:Generated_Source\PSoC5/CyLib.c **** 
1657:Generated_Source\PSoC5/CyLib.c ****     /* Disable VD interrupt (write 1) to protect against glitches */
1658:Generated_Source\PSoC5/CyLib.c ****     CY_INT_CLEAR_REG = CY_VD_INT_MASK;
 3320              		.loc 1 1658 0
 3321 0022 254B     		ldr	r3, .L240+4
 3322 0024 0122     		movs	r2, #1
 3323 0026 1A60     		str	r2, [r3]
1659:Generated_Source\PSoC5/CyLib.c **** 
1660:Generated_Source\PSoC5/CyLib.c ****     CY_VD_PRES_CONTROL_REG &= ((uint8)(~CY_VD_PRESD_EN));
 3324              		.loc 1 1660 0
 3325 0028 244A     		ldr	r2, .L240+8
 3326 002a 244B     		ldr	r3, .L240+8
 3327 002c 1B78     		ldrb	r3, [r3]
 3328 002e DBB2     		uxtb	r3, r3
 3329 0030 23F04003 		bic	r3, r3, #64
 3330 0034 DBB2     		uxtb	r3, r3
 3331 0036 1370     		strb	r3, [r2]
1661:Generated_Source\PSoC5/CyLib.c **** 
1662:Generated_Source\PSoC5/CyLib.c ****     CY_VD_LVI_TRIP_REG = (threshold & CY_VD_LVI_TRIP_LVID_MASK) |
 3332              		.loc 1 1662 0
 3333 0038 2149     		ldr	r1, .L240+12
 3334 003a BB79     		ldrb	r3, [r7, #6]
 3335 003c 03F00F03 		and	r3, r3, #15
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 89


 3336 0040 DAB2     		uxtb	r2, r3
1663:Generated_Source\PSoC5/CyLib.c ****                             (CY_VD_LVI_TRIP_REG & ((uint8)(~CY_VD_LVI_TRIP_LVID_MASK)));
 3337              		.loc 1 1663 0
 3338 0042 1F4B     		ldr	r3, .L240+12
 3339 0044 1B78     		ldrb	r3, [r3]
 3340 0046 DBB2     		uxtb	r3, r3
1662:Generated_Source\PSoC5/CyLib.c ****                             (CY_VD_LVI_TRIP_REG & ((uint8)(~CY_VD_LVI_TRIP_LVID_MASK)));
 3341              		.loc 1 1662 0
 3342 0048 23F00F03 		bic	r3, r3, #15
 3343 004c DBB2     		uxtb	r3, r3
 3344 004e 1343     		orrs	r3, r3, r2
 3345 0050 DBB2     		uxtb	r3, r3
 3346 0052 0B70     		strb	r3, [r1]
1664:Generated_Source\PSoC5/CyLib.c ****     CY_VD_LVI_HVI_CONTROL_REG |= CY_VD_LVID_EN;
 3347              		.loc 1 1664 0
 3348 0054 1B4A     		ldr	r2, .L240+16
 3349 0056 1B4B     		ldr	r3, .L240+16
 3350 0058 1B78     		ldrb	r3, [r3]
 3351 005a DBB2     		uxtb	r3, r3
 3352 005c 43F00103 		orr	r3, r3, #1
 3353 0060 DBB2     		uxtb	r3, r3
 3354 0062 1370     		strb	r3, [r2]
1665:Generated_Source\PSoC5/CyLib.c **** 
1666:Generated_Source\PSoC5/CyLib.c ****     /* Timeout to eliminate glitches on LVI/HVI when enabling (ID # 127412) */
1667:Generated_Source\PSoC5/CyLib.c ****     CyDelayUs(1u);
 3355              		.loc 1 1667 0
 3356 0064 0120     		movs	r0, #1
 3357 0066 FFF7FEFF 		bl	CyDelayUs
1668:Generated_Source\PSoC5/CyLib.c **** 
1669:Generated_Source\PSoC5/CyLib.c ****     (void) CyVdStickyStatus(CY_VD_LVID);
 3358              		.loc 1 1669 0
 3359 006a 0120     		movs	r0, #1
 3360 006c FFF7FEFF 		bl	CyVdStickyStatus
1670:Generated_Source\PSoC5/CyLib.c **** 
1671:Generated_Source\PSoC5/CyLib.c ****     if(0u != reset)
 3361              		.loc 1 1671 0
 3362 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3363 0072 002B     		cmp	r3, #0
 3364 0074 08D0     		beq	.L238
1672:Generated_Source\PSoC5/CyLib.c ****     {
1673:Generated_Source\PSoC5/CyLib.c ****         CY_VD_PRES_CONTROL_REG |= CY_VD_PRESD_EN;
 3365              		.loc 1 1673 0
 3366 0076 114A     		ldr	r2, .L240+8
 3367 0078 104B     		ldr	r3, .L240+8
 3368 007a 1B78     		ldrb	r3, [r3]
 3369 007c DBB2     		uxtb	r3, r3
 3370 007e 43F04003 		orr	r3, r3, #64
 3371 0082 DBB2     		uxtb	r3, r3
 3372 0084 1370     		strb	r3, [r2]
 3373 0086 07E0     		b	.L239
 3374              	.L238:
1674:Generated_Source\PSoC5/CyLib.c ****     }
1675:Generated_Source\PSoC5/CyLib.c ****     else
1676:Generated_Source\PSoC5/CyLib.c ****     {
1677:Generated_Source\PSoC5/CyLib.c ****         CY_VD_PRES_CONTROL_REG &= ((uint8)(~CY_VD_PRESD_EN));
 3375              		.loc 1 1677 0
 3376 0088 0C4A     		ldr	r2, .L240+8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 90


 3377 008a 0C4B     		ldr	r3, .L240+8
 3378 008c 1B78     		ldrb	r3, [r3]
 3379 008e DBB2     		uxtb	r3, r3
 3380 0090 23F04003 		bic	r3, r3, #64
 3381 0094 DBB2     		uxtb	r3, r3
 3382 0096 1370     		strb	r3, [r2]
 3383              	.L239:
1678:Generated_Source\PSoC5/CyLib.c ****     }
1679:Generated_Source\PSoC5/CyLib.c **** 
1680:Generated_Source\PSoC5/CyLib.c ****     /* Clear pending interrupt */
1681:Generated_Source\PSoC5/CyLib.c ****     CY_INT_CLR_PEND_REG = CY_VD_INT_MASK;
 3384              		.loc 1 1681 0
 3385 0098 0B4B     		ldr	r3, .L240+20
 3386 009a 0122     		movs	r2, #1
 3387 009c 1A60     		str	r2, [r3]
1682:Generated_Source\PSoC5/CyLib.c **** 
1683:Generated_Source\PSoC5/CyLib.c ****     /* Restore interrupt enable state */
1684:Generated_Source\PSoC5/CyLib.c ****     CY_INT_ENABLE_REG = intRegTmp;
 3388              		.loc 1 1684 0
 3389 009e 054A     		ldr	r2, .L240
 3390 00a0 BB68     		ldr	r3, [r7, #8]
 3391 00a2 1360     		str	r3, [r2]
1685:Generated_Source\PSoC5/CyLib.c **** 
1686:Generated_Source\PSoC5/CyLib.c ****     CyExitCriticalSection(interruptState);
 3392              		.loc 1 1686 0
 3393 00a4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3394 00a6 1846     		mov	r0, r3
 3395 00a8 FFF7FEFF 		bl	CyExitCriticalSection
1687:Generated_Source\PSoC5/CyLib.c **** }
 3396              		.loc 1 1687 0
 3397 00ac 1037     		adds	r7, r7, #16
 3398              		.cfi_def_cfa_offset 8
 3399 00ae BD46     		mov	sp, r7
 3400              		.cfi_def_cfa_register 13
 3401              		@ sp needed
 3402 00b0 80BD     		pop	{r7, pc}
 3403              	.L241:
 3404 00b2 00BF     		.align	2
 3405              	.L240:
 3406 00b4 00E100E0 		.word	-536813312
 3407 00b8 80E100E0 		.word	-536813184
 3408 00bc F7460040 		.word	1073759991
 3409 00c0 F4460040 		.word	1073759988
 3410 00c4 F5460040 		.word	1073759989
 3411 00c8 80E200E0 		.word	-536812928
 3412              		.cfi_endproc
 3413              	.LFE46:
 3414              		.size	CyVdLvDigitEnable, .-CyVdLvDigitEnable
 3415              		.section	.text.CyVdLvAnalogEnable,"ax",%progbits
 3416              		.align	2
 3417              		.global	CyVdLvAnalogEnable
 3418              		.thumb
 3419              		.thumb_func
 3420              		.type	CyVdLvAnalogEnable, %function
 3421              	CyVdLvAnalogEnable:
 3422              	.LFB47:
1688:Generated_Source\PSoC5/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 91


1689:Generated_Source\PSoC5/CyLib.c **** 
1690:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1691:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyVdLvAnalogEnable
1692:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1693:Generated_Source\PSoC5/CyLib.c **** *
1694:Generated_Source\PSoC5/CyLib.c **** *  Sets the voltage trip level, enables the output of the analog low-voltage
1695:Generated_Source\PSoC5/CyLib.c **** *  monitor, and optionally configures voltage monitor to reset device upon the
1696:Generated_Source\PSoC5/CyLib.c **** *  low-voltage event instead of generating an interrupt.
1697:Generated_Source\PSoC5/CyLib.c **** *
1698:Generated_Source\PSoC5/CyLib.c **** *  Note The associated interrupt enable/disable state is not changed by the
1699:Generated_Source\PSoC5/CyLib.c **** *  function. The Interrupt component API should be used to register the
1700:Generated_Source\PSoC5/CyLib.c **** *  interrupt service routine and to enable/disable associated interrupt.
1701:Generated_Source\PSoC5/CyLib.c **** *
1702:Generated_Source\PSoC5/CyLib.c **** *  \param reset: Enables device reset on analog low-voltage event:
1703:Generated_Source\PSoC5/CyLib.c **** *  Zero - Interrupt on analog low-voltage event
1704:Generated_Source\PSoC5/CyLib.c **** *  Non-zero - Reset on analog low-voltage event
1705:Generated_Source\PSoC5/CyLib.c **** *
1706:Generated_Source\PSoC5/CyLib.c **** *  \param threshold: Sets the trip point of the analog low-voltage monitoring circuit
1707:Generated_Source\PSoC5/CyLib.c **** *  in steps of approximately 250 mV in range from 1.70 V (0x00) to 5.45 V
1708:Generated_Source\PSoC5/CyLib.c **** *  (0x0F). For example, the trip point is set to 1.80 V when value of the
1709:Generated_Source\PSoC5/CyLib.c **** *  threshold parameter is 0x04. Please refer to the device TRM for the exact
1710:Generated_Source\PSoC5/CyLib.c **** *  trip voltage values.
1711:Generated_Source\PSoC5/CyLib.c **** *
1712:Generated_Source\PSoC5/CyLib.c **** * Side Effects and Restrictions:
1713:Generated_Source\PSoC5/CyLib.c **** *  The voltage resets are momentary. When a voltage reset (analog/digital
1714:Generated_Source\PSoC5/CyLib.c **** *  low-voltage and analog high-voltage) occurs, the RESET_CR1 and RESET_CR3
1715:Generated_Source\PSoC5/CyLib.c **** *  registers are restored to their default values. This means that the voltage
1716:Generated_Source\PSoC5/CyLib.c **** *  monitor circuit is no longer enabled and the device exits reset. If the
1717:Generated_Source\PSoC5/CyLib.c **** *  supply is below the trip level and firmware enables the voltage reset
1718:Generated_Source\PSoC5/CyLib.c **** *  functionality, the device will reset again. This will continue as long as
1719:Generated_Source\PSoC5/CyLib.c **** *  the supply is below the trip level or as long as the user enables the reset
1720:Generated_Source\PSoC5/CyLib.c **** *  functionality of the voltage monitor functionality.
1721:Generated_Source\PSoC5/CyLib.c **** *
1722:Generated_Source\PSoC5/CyLib.c **** *  When any voltage reset occurs, the RESET_SR0 and RESET_SR2 status registers
1723:Generated_Source\PSoC5/CyLib.c **** *  are cleared. This means that analog low-voltage, digital low-voltage and
1724:Generated_Source\PSoC5/CyLib.c **** *  analog high-voltage status bits are not persistent across any voltage reset.
1725:Generated_Source\PSoC5/CyLib.c **** *
1726:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1727:Generated_Source\PSoC5/CyLib.c **** void CyVdLvAnalogEnable(uint8 reset, uint8 threshold) 
1728:Generated_Source\PSoC5/CyLib.c **** {
 3423              		.loc 1 1728 0
 3424              		.cfi_startproc
 3425              		@ args = 0, pretend = 0, frame = 16
 3426              		@ frame_needed = 1, uses_anonymous_args = 0
 3427 0000 80B5     		push	{r7, lr}
 3428              		.cfi_def_cfa_offset 8
 3429              		.cfi_offset 7, -8
 3430              		.cfi_offset 14, -4
 3431 0002 84B0     		sub	sp, sp, #16
 3432              		.cfi_def_cfa_offset 24
 3433 0004 00AF     		add	r7, sp, #0
 3434              		.cfi_def_cfa_register 7
 3435 0006 0346     		mov	r3, r0
 3436 0008 0A46     		mov	r2, r1
 3437 000a FB71     		strb	r3, [r7, #7]
 3438 000c 1346     		mov	r3, r2
 3439 000e BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 92


1729:Generated_Source\PSoC5/CyLib.c ****     uint32 intRegTmp;
1730:Generated_Source\PSoC5/CyLib.c ****     uint8 interruptState;
1731:Generated_Source\PSoC5/CyLib.c **** 
1732:Generated_Source\PSoC5/CyLib.c ****     interruptState = CyEnterCriticalSection();
 3440              		.loc 1 1732 0
 3441 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 3442 0014 0346     		mov	r3, r0
 3443 0016 FB73     		strb	r3, [r7, #15]
1733:Generated_Source\PSoC5/CyLib.c **** 
1734:Generated_Source\PSoC5/CyLib.c ****     /* Store interrupt enable state */
1735:Generated_Source\PSoC5/CyLib.c ****     intRegTmp = CY_INT_ENABLE_REG & CY_VD_INT_MASK;
 3444              		.loc 1 1735 0
 3445 0018 254B     		ldr	r3, .L245
 3446 001a 1B68     		ldr	r3, [r3]
 3447 001c 03F00103 		and	r3, r3, #1
 3448 0020 BB60     		str	r3, [r7, #8]
1736:Generated_Source\PSoC5/CyLib.c **** 
1737:Generated_Source\PSoC5/CyLib.c ****     /* Disable VD interrupt (write 1) to protect against glitches */
1738:Generated_Source\PSoC5/CyLib.c ****     CY_INT_CLEAR_REG = CY_VD_INT_MASK;
 3449              		.loc 1 1738 0
 3450 0022 244B     		ldr	r3, .L245+4
 3451 0024 0122     		movs	r2, #1
 3452 0026 1A60     		str	r2, [r3]
1739:Generated_Source\PSoC5/CyLib.c **** 
1740:Generated_Source\PSoC5/CyLib.c ****     CY_VD_PRES_CONTROL_REG &= ((uint8)(~CY_VD_PRESA_EN));
 3453              		.loc 1 1740 0
 3454 0028 234A     		ldr	r2, .L245+8
 3455 002a 234B     		ldr	r3, .L245+8
 3456 002c 1B78     		ldrb	r3, [r3]
 3457 002e DBB2     		uxtb	r3, r3
 3458 0030 03F07F03 		and	r3, r3, #127
 3459 0034 DBB2     		uxtb	r3, r3
 3460 0036 1370     		strb	r3, [r2]
1741:Generated_Source\PSoC5/CyLib.c **** 
1742:Generated_Source\PSoC5/CyLib.c ****     CY_VD_LVI_TRIP_REG = ((uint8)(threshold << 4u)) | (CY_VD_LVI_TRIP_REG & 0x0Fu);
 3461              		.loc 1 1742 0
 3462 0038 2049     		ldr	r1, .L245+12
 3463 003a BB79     		ldrb	r3, [r7, #6]
 3464 003c 1B01     		lsls	r3, r3, #4
 3465 003e DAB2     		uxtb	r2, r3
 3466 0040 1E4B     		ldr	r3, .L245+12
 3467 0042 1B78     		ldrb	r3, [r3]
 3468 0044 DBB2     		uxtb	r3, r3
 3469 0046 03F00F03 		and	r3, r3, #15
 3470 004a DBB2     		uxtb	r3, r3
 3471 004c 1343     		orrs	r3, r3, r2
 3472 004e DBB2     		uxtb	r3, r3
 3473 0050 0B70     		strb	r3, [r1]
1743:Generated_Source\PSoC5/CyLib.c ****     CY_VD_LVI_HVI_CONTROL_REG |= CY_VD_LVIA_EN;
 3474              		.loc 1 1743 0
 3475 0052 1B4A     		ldr	r2, .L245+16
 3476 0054 1A4B     		ldr	r3, .L245+16
 3477 0056 1B78     		ldrb	r3, [r3]
 3478 0058 DBB2     		uxtb	r3, r3
 3479 005a 43F00203 		orr	r3, r3, #2
 3480 005e DBB2     		uxtb	r3, r3
 3481 0060 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 93


1744:Generated_Source\PSoC5/CyLib.c **** 
1745:Generated_Source\PSoC5/CyLib.c ****     /* Timeout to eliminate glitches on LVI/HVI when enabling (ID # 127412) */
1746:Generated_Source\PSoC5/CyLib.c ****     CyDelayUs(1u);
 3482              		.loc 1 1746 0
 3483 0062 0120     		movs	r0, #1
 3484 0064 FFF7FEFF 		bl	CyDelayUs
1747:Generated_Source\PSoC5/CyLib.c **** 
1748:Generated_Source\PSoC5/CyLib.c ****     (void) CyVdStickyStatus(CY_VD_LVIA);
 3485              		.loc 1 1748 0
 3486 0068 0220     		movs	r0, #2
 3487 006a FFF7FEFF 		bl	CyVdStickyStatus
1749:Generated_Source\PSoC5/CyLib.c **** 
1750:Generated_Source\PSoC5/CyLib.c ****     if(0u != reset)
 3488              		.loc 1 1750 0
 3489 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3490 0070 002B     		cmp	r3, #0
 3491 0072 08D0     		beq	.L243
1751:Generated_Source\PSoC5/CyLib.c ****     {
1752:Generated_Source\PSoC5/CyLib.c ****         CY_VD_PRES_CONTROL_REG |= CY_VD_PRESA_EN;
 3492              		.loc 1 1752 0
 3493 0074 104A     		ldr	r2, .L245+8
 3494 0076 104B     		ldr	r3, .L245+8
 3495 0078 1B78     		ldrb	r3, [r3]
 3496 007a DBB2     		uxtb	r3, r3
 3497 007c 63F07F03 		orn	r3, r3, #127
 3498 0080 DBB2     		uxtb	r3, r3
 3499 0082 1370     		strb	r3, [r2]
 3500 0084 07E0     		b	.L244
 3501              	.L243:
1753:Generated_Source\PSoC5/CyLib.c ****     }
1754:Generated_Source\PSoC5/CyLib.c ****     else
1755:Generated_Source\PSoC5/CyLib.c ****     {
1756:Generated_Source\PSoC5/CyLib.c ****         CY_VD_PRES_CONTROL_REG &= ((uint8)(~CY_VD_PRESA_EN));
 3502              		.loc 1 1756 0
 3503 0086 0C4A     		ldr	r2, .L245+8
 3504 0088 0B4B     		ldr	r3, .L245+8
 3505 008a 1B78     		ldrb	r3, [r3]
 3506 008c DBB2     		uxtb	r3, r3
 3507 008e 03F07F03 		and	r3, r3, #127
 3508 0092 DBB2     		uxtb	r3, r3
 3509 0094 1370     		strb	r3, [r2]
 3510              	.L244:
1757:Generated_Source\PSoC5/CyLib.c ****     }
1758:Generated_Source\PSoC5/CyLib.c **** 
1759:Generated_Source\PSoC5/CyLib.c ****     /* Clear pending interrupt */
1760:Generated_Source\PSoC5/CyLib.c ****     CY_INT_CLR_PEND_REG = CY_VD_INT_MASK;
 3511              		.loc 1 1760 0
 3512 0096 0B4B     		ldr	r3, .L245+20
 3513 0098 0122     		movs	r2, #1
 3514 009a 1A60     		str	r2, [r3]
1761:Generated_Source\PSoC5/CyLib.c **** 
1762:Generated_Source\PSoC5/CyLib.c ****     /* Restore interrupt enable state */
1763:Generated_Source\PSoC5/CyLib.c ****     CY_INT_ENABLE_REG = intRegTmp;
 3515              		.loc 1 1763 0
 3516 009c 044A     		ldr	r2, .L245
 3517 009e BB68     		ldr	r3, [r7, #8]
 3518 00a0 1360     		str	r3, [r2]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 94


1764:Generated_Source\PSoC5/CyLib.c **** 
1765:Generated_Source\PSoC5/CyLib.c ****     CyExitCriticalSection(interruptState);
 3519              		.loc 1 1765 0
 3520 00a2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3521 00a4 1846     		mov	r0, r3
 3522 00a6 FFF7FEFF 		bl	CyExitCriticalSection
1766:Generated_Source\PSoC5/CyLib.c **** }
 3523              		.loc 1 1766 0
 3524 00aa 1037     		adds	r7, r7, #16
 3525              		.cfi_def_cfa_offset 8
 3526 00ac BD46     		mov	sp, r7
 3527              		.cfi_def_cfa_register 13
 3528              		@ sp needed
 3529 00ae 80BD     		pop	{r7, pc}
 3530              	.L246:
 3531              		.align	2
 3532              	.L245:
 3533 00b0 00E100E0 		.word	-536813312
 3534 00b4 80E100E0 		.word	-536813184
 3535 00b8 F7460040 		.word	1073759991
 3536 00bc F4460040 		.word	1073759988
 3537 00c0 F5460040 		.word	1073759989
 3538 00c4 80E200E0 		.word	-536812928
 3539              		.cfi_endproc
 3540              	.LFE47:
 3541              		.size	CyVdLvAnalogEnable, .-CyVdLvAnalogEnable
 3542              		.section	.text.CyVdLvDigitDisable,"ax",%progbits
 3543              		.align	2
 3544              		.global	CyVdLvDigitDisable
 3545              		.thumb
 3546              		.thumb_func
 3547              		.type	CyVdLvDigitDisable, %function
 3548              	CyVdLvDigitDisable:
 3549              	.LFB48:
1767:Generated_Source\PSoC5/CyLib.c **** 
1768:Generated_Source\PSoC5/CyLib.c **** 
1769:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1770:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyVdLvDigitDisable
1771:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1772:Generated_Source\PSoC5/CyLib.c **** *
1773:Generated_Source\PSoC5/CyLib.c **** *  Disables the digital low-voltage monitor, turns off device reset upon the
1774:Generated_Source\PSoC5/CyLib.c **** *  digital low-voltage event, and clears the associated persistent status bit.
1775:Generated_Source\PSoC5/CyLib.c **** *
1776:Generated_Source\PSoC5/CyLib.c **** *  Note The associated interrupt enable/disable state is not changed by the
1777:Generated_Source\PSoC5/CyLib.c **** *  function. The pending interrupt status is not cleared. The Interrupt
1778:Generated_Source\PSoC5/CyLib.c **** *  component API should be used to manipulate with the associated interrupts.
1779:Generated_Source\PSoC5/CyLib.c **** *
1780:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1781:Generated_Source\PSoC5/CyLib.c **** void CyVdLvDigitDisable(void) 
1782:Generated_Source\PSoC5/CyLib.c **** {
 3550              		.loc 1 1782 0
 3551              		.cfi_startproc
 3552              		@ args = 0, pretend = 0, frame = 0
 3553              		@ frame_needed = 1, uses_anonymous_args = 0
 3554 0000 80B5     		push	{r7, lr}
 3555              		.cfi_def_cfa_offset 8
 3556              		.cfi_offset 7, -8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 95


 3557              		.cfi_offset 14, -4
 3558 0002 00AF     		add	r7, sp, #0
 3559              		.cfi_def_cfa_register 7
1783:Generated_Source\PSoC5/CyLib.c ****     CY_VD_LVI_HVI_CONTROL_REG &= ((uint8)(~CY_VD_LVID_EN));
 3560              		.loc 1 1783 0
 3561 0004 0E4A     		ldr	r2, .L249
 3562 0006 0E4B     		ldr	r3, .L249
 3563 0008 1B78     		ldrb	r3, [r3]
 3564 000a DBB2     		uxtb	r3, r3
 3565 000c 23F00103 		bic	r3, r3, #1
 3566 0010 DBB2     		uxtb	r3, r3
 3567 0012 1370     		strb	r3, [r2]
1784:Generated_Source\PSoC5/CyLib.c ****     CY_VD_PRES_CONTROL_REG &= ((uint8)(~CY_VD_PRESD_EN));
 3568              		.loc 1 1784 0
 3569 0014 0B4A     		ldr	r2, .L249+4
 3570 0016 0B4B     		ldr	r3, .L249+4
 3571 0018 1B78     		ldrb	r3, [r3]
 3572 001a DBB2     		uxtb	r3, r3
 3573 001c 23F04003 		bic	r3, r3, #64
 3574 0020 DBB2     		uxtb	r3, r3
 3575 0022 1370     		strb	r3, [r2]
1785:Generated_Source\PSoC5/CyLib.c ****     (void) CyVdStickyStatus(CY_VD_LVID);
 3576              		.loc 1 1785 0
 3577 0024 0120     		movs	r0, #1
 3578 0026 FFF7FEFF 		bl	CyVdStickyStatus
1786:Generated_Source\PSoC5/CyLib.c **** 
1787:Generated_Source\PSoC5/CyLib.c ****     while(0u != (CyVdStickyStatus(CY_VD_LVID) & CY_VD_LVID))
 3579              		.loc 1 1787 0
 3580 002a 00BF     		nop
 3581              	.L248:
 3582              		.loc 1 1787 0 is_stmt 0 discriminator 1
 3583 002c 0120     		movs	r0, #1
 3584 002e FFF7FEFF 		bl	CyVdStickyStatus
 3585 0032 0346     		mov	r3, r0
 3586 0034 03F00103 		and	r3, r3, #1
 3587 0038 002B     		cmp	r3, #0
 3588 003a F7D1     		bne	.L248
1788:Generated_Source\PSoC5/CyLib.c ****     {
1789:Generated_Source\PSoC5/CyLib.c **** 
1790:Generated_Source\PSoC5/CyLib.c ****     }
1791:Generated_Source\PSoC5/CyLib.c **** }
 3589              		.loc 1 1791 0 is_stmt 1
 3590 003c 80BD     		pop	{r7, pc}
 3591              	.L250:
 3592 003e 00BF     		.align	2
 3593              	.L249:
 3594 0040 F5460040 		.word	1073759989
 3595 0044 F7460040 		.word	1073759991
 3596              		.cfi_endproc
 3597              	.LFE48:
 3598              		.size	CyVdLvDigitDisable, .-CyVdLvDigitDisable
 3599              		.section	.text.CyVdLvAnalogDisable,"ax",%progbits
 3600              		.align	2
 3601              		.global	CyVdLvAnalogDisable
 3602              		.thumb
 3603              		.thumb_func
 3604              		.type	CyVdLvAnalogDisable, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 96


 3605              	CyVdLvAnalogDisable:
 3606              	.LFB49:
1792:Generated_Source\PSoC5/CyLib.c **** 
1793:Generated_Source\PSoC5/CyLib.c **** 
1794:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1795:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyVdLvAnalogDisable
1796:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1797:Generated_Source\PSoC5/CyLib.c **** *
1798:Generated_Source\PSoC5/CyLib.c **** *  Disables the analog low-voltage monitor, turns off device reset upon the
1799:Generated_Source\PSoC5/CyLib.c **** *  analog low-voltage event, and clears the associated persistent status bit.
1800:Generated_Source\PSoC5/CyLib.c **** *
1801:Generated_Source\PSoC5/CyLib.c **** *  Note The associated interrupt enable/disable state is not changed by the
1802:Generated_Source\PSoC5/CyLib.c **** *  function. The pending interrupt status is not cleared. The Interrupt
1803:Generated_Source\PSoC5/CyLib.c **** *  component API should be used to manipulate with the associated interrupts.
1804:Generated_Source\PSoC5/CyLib.c **** *
1805:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1806:Generated_Source\PSoC5/CyLib.c **** void CyVdLvAnalogDisable(void) 
1807:Generated_Source\PSoC5/CyLib.c **** {
 3607              		.loc 1 1807 0
 3608              		.cfi_startproc
 3609              		@ args = 0, pretend = 0, frame = 0
 3610              		@ frame_needed = 1, uses_anonymous_args = 0
 3611 0000 80B5     		push	{r7, lr}
 3612              		.cfi_def_cfa_offset 8
 3613              		.cfi_offset 7, -8
 3614              		.cfi_offset 14, -4
 3615 0002 00AF     		add	r7, sp, #0
 3616              		.cfi_def_cfa_register 7
1808:Generated_Source\PSoC5/CyLib.c ****     CY_VD_LVI_HVI_CONTROL_REG &= ((uint8)(~CY_VD_LVIA_EN));
 3617              		.loc 1 1808 0
 3618 0004 0C4A     		ldr	r2, .L253
 3619 0006 0C4B     		ldr	r3, .L253
 3620 0008 1B78     		ldrb	r3, [r3]
 3621 000a DBB2     		uxtb	r3, r3
 3622 000c 23F00203 		bic	r3, r3, #2
 3623 0010 DBB2     		uxtb	r3, r3
 3624 0012 1370     		strb	r3, [r2]
1809:Generated_Source\PSoC5/CyLib.c ****     CY_VD_PRES_CONTROL_REG &= ((uint8)(~CY_VD_PRESA_EN));
 3625              		.loc 1 1809 0
 3626 0014 094A     		ldr	r2, .L253+4
 3627 0016 094B     		ldr	r3, .L253+4
 3628 0018 1B78     		ldrb	r3, [r3]
 3629 001a DBB2     		uxtb	r3, r3
 3630 001c 03F07F03 		and	r3, r3, #127
 3631 0020 DBB2     		uxtb	r3, r3
 3632 0022 1370     		strb	r3, [r2]
1810:Generated_Source\PSoC5/CyLib.c ****     while(0u != (CyVdStickyStatus(CY_VD_LVIA) & CY_VD_LVIA))
 3633              		.loc 1 1810 0
 3634 0024 00BF     		nop
 3635              	.L252:
 3636              		.loc 1 1810 0 is_stmt 0 discriminator 1
 3637 0026 0220     		movs	r0, #2
 3638 0028 FFF7FEFF 		bl	CyVdStickyStatus
 3639 002c 0346     		mov	r3, r0
 3640 002e 03F00203 		and	r3, r3, #2
 3641 0032 002B     		cmp	r3, #0
 3642 0034 F7D1     		bne	.L252
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 97


1811:Generated_Source\PSoC5/CyLib.c ****     {
1812:Generated_Source\PSoC5/CyLib.c **** 
1813:Generated_Source\PSoC5/CyLib.c ****     }
1814:Generated_Source\PSoC5/CyLib.c **** }
 3643              		.loc 1 1814 0 is_stmt 1
 3644 0036 80BD     		pop	{r7, pc}
 3645              	.L254:
 3646              		.align	2
 3647              	.L253:
 3648 0038 F5460040 		.word	1073759989
 3649 003c F7460040 		.word	1073759991
 3650              		.cfi_endproc
 3651              	.LFE49:
 3652              		.size	CyVdLvAnalogDisable, .-CyVdLvAnalogDisable
 3653              		.section	.text.CyVdHvAnalogEnable,"ax",%progbits
 3654              		.align	2
 3655              		.global	CyVdHvAnalogEnable
 3656              		.thumb
 3657              		.thumb_func
 3658              		.type	CyVdHvAnalogEnable, %function
 3659              	CyVdHvAnalogEnable:
 3660              	.LFB50:
1815:Generated_Source\PSoC5/CyLib.c **** 
1816:Generated_Source\PSoC5/CyLib.c **** 
1817:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1818:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyVdHvAnalogEnable
1819:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1820:Generated_Source\PSoC5/CyLib.c **** *
1821:Generated_Source\PSoC5/CyLib.c **** *  Enables the output of the analog high-voltage monitor and sets 5.75 V
1822:Generated_Source\PSoC5/CyLib.c **** *  threshold detection for Vdda.
1823:Generated_Source\PSoC5/CyLib.c **** *
1824:Generated_Source\PSoC5/CyLib.c **** *  Note The associated interrupt enable/disable state is not changed by the
1825:Generated_Source\PSoC5/CyLib.c **** *  function. The Interrupt component API should be used to register the
1826:Generated_Source\PSoC5/CyLib.c **** *  interrupt service routine and to enable/disable associated interrupt.
1827:Generated_Source\PSoC5/CyLib.c **** *
1828:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1829:Generated_Source\PSoC5/CyLib.c **** void CyVdHvAnalogEnable(void) 
1830:Generated_Source\PSoC5/CyLib.c **** {
 3661              		.loc 1 1830 0
 3662              		.cfi_startproc
 3663              		@ args = 0, pretend = 0, frame = 8
 3664              		@ frame_needed = 1, uses_anonymous_args = 0
 3665 0000 80B5     		push	{r7, lr}
 3666              		.cfi_def_cfa_offset 8
 3667              		.cfi_offset 7, -8
 3668              		.cfi_offset 14, -4
 3669 0002 82B0     		sub	sp, sp, #8
 3670              		.cfi_def_cfa_offset 16
 3671 0004 00AF     		add	r7, sp, #0
 3672              		.cfi_def_cfa_register 7
1831:Generated_Source\PSoC5/CyLib.c ****     uint32 intRegTmp;
1832:Generated_Source\PSoC5/CyLib.c ****     uint8 interruptState;
1833:Generated_Source\PSoC5/CyLib.c **** 
1834:Generated_Source\PSoC5/CyLib.c ****     interruptState = CyEnterCriticalSection();
 3673              		.loc 1 1834 0
 3674 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 3675 000a 0346     		mov	r3, r0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 98


 3676 000c FB71     		strb	r3, [r7, #7]
1835:Generated_Source\PSoC5/CyLib.c **** 
1836:Generated_Source\PSoC5/CyLib.c ****     /* Store interrupt enable state */
1837:Generated_Source\PSoC5/CyLib.c ****     intRegTmp = CY_INT_ENABLE_REG & CY_VD_INT_MASK;
 3677              		.loc 1 1837 0
 3678 000e 154B     		ldr	r3, .L256
 3679 0010 1B68     		ldr	r3, [r3]
 3680 0012 03F00103 		and	r3, r3, #1
 3681 0016 3B60     		str	r3, [r7]
1838:Generated_Source\PSoC5/CyLib.c **** 
1839:Generated_Source\PSoC5/CyLib.c ****     /* Disable VD interrupt (write 1) to protect against glitches */
1840:Generated_Source\PSoC5/CyLib.c ****     CY_INT_CLEAR_REG = CY_VD_INT_MASK;
 3682              		.loc 1 1840 0
 3683 0018 134B     		ldr	r3, .L256+4
 3684 001a 0122     		movs	r2, #1
 3685 001c 1A60     		str	r2, [r3]
1841:Generated_Source\PSoC5/CyLib.c **** 
1842:Generated_Source\PSoC5/CyLib.c ****     CY_VD_PRES_CONTROL_REG &= ((uint8)(~CY_VD_PRESA_EN));
 3686              		.loc 1 1842 0
 3687 001e 134A     		ldr	r2, .L256+8
 3688 0020 124B     		ldr	r3, .L256+8
 3689 0022 1B78     		ldrb	r3, [r3]
 3690 0024 DBB2     		uxtb	r3, r3
 3691 0026 03F07F03 		and	r3, r3, #127
 3692 002a DBB2     		uxtb	r3, r3
 3693 002c 1370     		strb	r3, [r2]
1843:Generated_Source\PSoC5/CyLib.c **** 
1844:Generated_Source\PSoC5/CyLib.c ****     CY_VD_LVI_HVI_CONTROL_REG |= CY_VD_HVIA_EN;
 3694              		.loc 1 1844 0
 3695 002e 104A     		ldr	r2, .L256+12
 3696 0030 0F4B     		ldr	r3, .L256+12
 3697 0032 1B78     		ldrb	r3, [r3]
 3698 0034 DBB2     		uxtb	r3, r3
 3699 0036 43F00403 		orr	r3, r3, #4
 3700 003a DBB2     		uxtb	r3, r3
 3701 003c 1370     		strb	r3, [r2]
1845:Generated_Source\PSoC5/CyLib.c **** 
1846:Generated_Source\PSoC5/CyLib.c ****     /* Timeout to eliminate glitches on the LVI/HVI when enabling (ID # 127412)  */
1847:Generated_Source\PSoC5/CyLib.c ****     CyDelayUs(1u);
 3702              		.loc 1 1847 0
 3703 003e 0120     		movs	r0, #1
 3704 0040 FFF7FEFF 		bl	CyDelayUs
1848:Generated_Source\PSoC5/CyLib.c **** 
1849:Generated_Source\PSoC5/CyLib.c ****     (void) CyVdStickyStatus(CY_VD_HVIA);
 3705              		.loc 1 1849 0
 3706 0044 0420     		movs	r0, #4
 3707 0046 FFF7FEFF 		bl	CyVdStickyStatus
1850:Generated_Source\PSoC5/CyLib.c **** 
1851:Generated_Source\PSoC5/CyLib.c ****     /* Clear pending interrupt */
1852:Generated_Source\PSoC5/CyLib.c ****     CY_INT_CLR_PEND_REG = CY_VD_INT_MASK;
 3708              		.loc 1 1852 0
 3709 004a 0A4B     		ldr	r3, .L256+16
 3710 004c 0122     		movs	r2, #1
 3711 004e 1A60     		str	r2, [r3]
1853:Generated_Source\PSoC5/CyLib.c **** 
1854:Generated_Source\PSoC5/CyLib.c ****     /* Restore interrupt enable state */
1855:Generated_Source\PSoC5/CyLib.c ****     CY_INT_ENABLE_REG = intRegTmp;
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 99


 3712              		.loc 1 1855 0
 3713 0050 044A     		ldr	r2, .L256
 3714 0052 3B68     		ldr	r3, [r7]
 3715 0054 1360     		str	r3, [r2]
1856:Generated_Source\PSoC5/CyLib.c **** 
1857:Generated_Source\PSoC5/CyLib.c ****     CyExitCriticalSection(interruptState);
 3716              		.loc 1 1857 0
 3717 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3718 0058 1846     		mov	r0, r3
 3719 005a FFF7FEFF 		bl	CyExitCriticalSection
1858:Generated_Source\PSoC5/CyLib.c **** }
 3720              		.loc 1 1858 0
 3721 005e 0837     		adds	r7, r7, #8
 3722              		.cfi_def_cfa_offset 8
 3723 0060 BD46     		mov	sp, r7
 3724              		.cfi_def_cfa_register 13
 3725              		@ sp needed
 3726 0062 80BD     		pop	{r7, pc}
 3727              	.L257:
 3728              		.align	2
 3729              	.L256:
 3730 0064 00E100E0 		.word	-536813312
 3731 0068 80E100E0 		.word	-536813184
 3732 006c F7460040 		.word	1073759991
 3733 0070 F5460040 		.word	1073759989
 3734 0074 80E200E0 		.word	-536812928
 3735              		.cfi_endproc
 3736              	.LFE50:
 3737              		.size	CyVdHvAnalogEnable, .-CyVdHvAnalogEnable
 3738              		.section	.text.CyVdHvAnalogDisable,"ax",%progbits
 3739              		.align	2
 3740              		.global	CyVdHvAnalogDisable
 3741              		.thumb
 3742              		.thumb_func
 3743              		.type	CyVdHvAnalogDisable, %function
 3744              	CyVdHvAnalogDisable:
 3745              	.LFB51:
1859:Generated_Source\PSoC5/CyLib.c **** 
1860:Generated_Source\PSoC5/CyLib.c **** 
1861:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1862:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyVdHvAnalogDisable
1863:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1864:Generated_Source\PSoC5/CyLib.c **** *
1865:Generated_Source\PSoC5/CyLib.c **** *  Disables the analog high-voltage monitor and clears the associated persistent
1866:Generated_Source\PSoC5/CyLib.c **** *  status bit.
1867:Generated_Source\PSoC5/CyLib.c **** *
1868:Generated_Source\PSoC5/CyLib.c **** *  Note The associated interrupt enable/disable state is not changed by the
1869:Generated_Source\PSoC5/CyLib.c **** *  function. The pending interrupt status is not cleared. The Interrupt
1870:Generated_Source\PSoC5/CyLib.c **** *  component API should be used to manipulate with the associated interrupts.
1871:Generated_Source\PSoC5/CyLib.c **** *
1872:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1873:Generated_Source\PSoC5/CyLib.c **** void CyVdHvAnalogDisable(void) 
1874:Generated_Source\PSoC5/CyLib.c **** {
 3746              		.loc 1 1874 0
 3747              		.cfi_startproc
 3748              		@ args = 0, pretend = 0, frame = 0
 3749              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 100


 3750 0000 80B5     		push	{r7, lr}
 3751              		.cfi_def_cfa_offset 8
 3752              		.cfi_offset 7, -8
 3753              		.cfi_offset 14, -4
 3754 0002 00AF     		add	r7, sp, #0
 3755              		.cfi_def_cfa_register 7
1875:Generated_Source\PSoC5/CyLib.c ****     CY_VD_LVI_HVI_CONTROL_REG &= ((uint8)(~CY_VD_HVIA_EN));
 3756              		.loc 1 1875 0
 3757 0004 084A     		ldr	r2, .L260
 3758 0006 084B     		ldr	r3, .L260
 3759 0008 1B78     		ldrb	r3, [r3]
 3760 000a DBB2     		uxtb	r3, r3
 3761 000c 23F00403 		bic	r3, r3, #4
 3762 0010 DBB2     		uxtb	r3, r3
 3763 0012 1370     		strb	r3, [r2]
1876:Generated_Source\PSoC5/CyLib.c ****     while(0u != (CyVdStickyStatus(CY_VD_HVIA) & CY_VD_HVIA))
 3764              		.loc 1 1876 0
 3765 0014 00BF     		nop
 3766              	.L259:
 3767              		.loc 1 1876 0 is_stmt 0 discriminator 1
 3768 0016 0420     		movs	r0, #4
 3769 0018 FFF7FEFF 		bl	CyVdStickyStatus
 3770 001c 0346     		mov	r3, r0
 3771 001e 03F00403 		and	r3, r3, #4
 3772 0022 002B     		cmp	r3, #0
 3773 0024 F7D1     		bne	.L259
1877:Generated_Source\PSoC5/CyLib.c ****     {
1878:Generated_Source\PSoC5/CyLib.c **** 
1879:Generated_Source\PSoC5/CyLib.c ****     }
1880:Generated_Source\PSoC5/CyLib.c **** }
 3774              		.loc 1 1880 0 is_stmt 1
 3775 0026 80BD     		pop	{r7, pc}
 3776              	.L261:
 3777              		.align	2
 3778              	.L260:
 3779 0028 F5460040 		.word	1073759989
 3780              		.cfi_endproc
 3781              	.LFE51:
 3782              		.size	CyVdHvAnalogDisable, .-CyVdHvAnalogDisable
 3783              		.section	.text.CyVdStickyStatus,"ax",%progbits
 3784              		.align	2
 3785              		.global	CyVdStickyStatus
 3786              		.thumb
 3787              		.thumb_func
 3788              		.type	CyVdStickyStatus, %function
 3789              	CyVdStickyStatus:
 3790              	.LFB52:
1881:Generated_Source\PSoC5/CyLib.c **** 
1882:Generated_Source\PSoC5/CyLib.c **** 
1883:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1884:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyVdStickyStatus
1885:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1886:Generated_Source\PSoC5/CyLib.c **** *
1887:Generated_Source\PSoC5/CyLib.c **** *  Reads and clears the voltage detection status bits in the RESET_SR0 register.
1888:Generated_Source\PSoC5/CyLib.c **** *  The bits are set to 1 by the voltage monitor circuit when the supply is
1889:Generated_Source\PSoC5/CyLib.c **** *  outside the detector trip point. They stay set to 1 until they are read or
1890:Generated_Source\PSoC5/CyLib.c **** *  a POR / LVI / PRES reset occurs. This function uses a shadow register, so
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 101


1891:Generated_Source\PSoC5/CyLib.c **** *  only the bits passed in the parameter will be cleared in the shadow register.
1892:Generated_Source\PSoC5/CyLib.c **** *
1893:Generated_Source\PSoC5/CyLib.c **** *  \param mask: Bits in the RESET_SR0 shadow register to clear and return.
1894:Generated_Source\PSoC5/CyLib.c **** *   Define                  Definition
1895:Generated_Source\PSoC5/CyLib.c **** *   CY_VD_LVID            Persistent status of digital LVI.
1896:Generated_Source\PSoC5/CyLib.c **** *   CY_VD_LVIA            Persistent status of analog LVI.
1897:Generated_Source\PSoC5/CyLib.c **** *   CY_VD_HVIA            Persistent status of analog HVI.
1898:Generated_Source\PSoC5/CyLib.c **** *
1899:Generated_Source\PSoC5/CyLib.c **** * \return
1900:Generated_Source\PSoC5/CyLib.c **** *  Status. Same enumerated bit values as used for the mask parameter. A zero is
1901:Generated_Source\PSoC5/CyLib.c **** *  returned for bits not used in the mask parameter.
1902:Generated_Source\PSoC5/CyLib.c **** *
1903:Generated_Source\PSoC5/CyLib.c **** * Side Effects and Restrictions:
1904:Generated_Source\PSoC5/CyLib.c **** *  When an LVI reset occurs, the RESET_SR0 status registers are cleared. This
1905:Generated_Source\PSoC5/CyLib.c **** *  means that the voltage detection status bits are not persistent across an LVI
1906:Generated_Source\PSoC5/CyLib.c **** *  reset and cannot be used to determine a reset source.
1907:Generated_Source\PSoC5/CyLib.c **** *
1908:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1909:Generated_Source\PSoC5/CyLib.c **** uint8 CyVdStickyStatus(uint8 mask) 
1910:Generated_Source\PSoC5/CyLib.c **** {
 3791              		.loc 1 1910 0
 3792              		.cfi_startproc
 3793              		@ args = 0, pretend = 0, frame = 16
 3794              		@ frame_needed = 1, uses_anonymous_args = 0
 3795 0000 80B5     		push	{r7, lr}
 3796              		.cfi_def_cfa_offset 8
 3797              		.cfi_offset 7, -8
 3798              		.cfi_offset 14, -4
 3799 0002 84B0     		sub	sp, sp, #16
 3800              		.cfi_def_cfa_offset 24
 3801 0004 00AF     		add	r7, sp, #0
 3802              		.cfi_def_cfa_register 7
 3803 0006 0346     		mov	r3, r0
 3804 0008 FB71     		strb	r3, [r7, #7]
1911:Generated_Source\PSoC5/CyLib.c ****     static uint8 interruptStatus;
1912:Generated_Source\PSoC5/CyLib.c ****     uint8 interruptState;
1913:Generated_Source\PSoC5/CyLib.c ****     uint8 tmpStatus;
1914:Generated_Source\PSoC5/CyLib.c **** 
1915:Generated_Source\PSoC5/CyLib.c ****     interruptState = CyEnterCriticalSection();
 3805              		.loc 1 1915 0
 3806 000a FFF7FEFF 		bl	CyEnterCriticalSection
 3807 000e 0346     		mov	r3, r0
 3808 0010 FB73     		strb	r3, [r7, #15]
1916:Generated_Source\PSoC5/CyLib.c **** 
1917:Generated_Source\PSoC5/CyLib.c ****     interruptStatus |= CY_VD_PERSISTENT_STATUS_REG;
 3809              		.loc 1 1917 0
 3810 0012 104B     		ldr	r3, .L264
 3811 0014 1B78     		ldrb	r3, [r3]
 3812 0016 DAB2     		uxtb	r2, r3
 3813 0018 0F4B     		ldr	r3, .L264+4
 3814 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3815 001c 1343     		orrs	r3, r3, r2
 3816 001e DAB2     		uxtb	r2, r3
 3817 0020 0D4B     		ldr	r3, .L264+4
 3818 0022 1A70     		strb	r2, [r3]
1918:Generated_Source\PSoC5/CyLib.c ****     tmpStatus = interruptStatus & (uint8)(CY_VD_LVID | CY_VD_LVIA | CY_VD_HVIA);
 3819              		.loc 1 1918 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 102


 3820 0024 0C4B     		ldr	r3, .L264+4
 3821 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3822 0028 03F00703 		and	r3, r3, #7
 3823 002c BB73     		strb	r3, [r7, #14]
1919:Generated_Source\PSoC5/CyLib.c ****     interruptStatus &= ((uint8)(~mask));
 3824              		.loc 1 1919 0
 3825 002e FB79     		ldrb	r3, [r7, #7]
 3826 0030 DB43     		mvns	r3, r3
 3827 0032 DAB2     		uxtb	r2, r3
 3828 0034 084B     		ldr	r3, .L264+4
 3829 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3830 0038 1340     		ands	r3, r3, r2
 3831 003a DAB2     		uxtb	r2, r3
 3832 003c 064B     		ldr	r3, .L264+4
 3833 003e 1A70     		strb	r2, [r3]
1920:Generated_Source\PSoC5/CyLib.c **** 
1921:Generated_Source\PSoC5/CyLib.c ****     CyExitCriticalSection(interruptState);
 3834              		.loc 1 1921 0
 3835 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3836 0042 1846     		mov	r0, r3
 3837 0044 FFF7FEFF 		bl	CyExitCriticalSection
1922:Generated_Source\PSoC5/CyLib.c **** 
1923:Generated_Source\PSoC5/CyLib.c ****     return(tmpStatus);
 3838              		.loc 1 1923 0
 3839 0048 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
1924:Generated_Source\PSoC5/CyLib.c **** }
 3840              		.loc 1 1924 0
 3841 004a 1846     		mov	r0, r3
 3842 004c 1037     		adds	r7, r7, #16
 3843              		.cfi_def_cfa_offset 8
 3844 004e BD46     		mov	sp, r7
 3845              		.cfi_def_cfa_register 13
 3846              		@ sp needed
 3847 0050 80BD     		pop	{r7, pc}
 3848              	.L265:
 3849 0052 00BF     		.align	2
 3850              	.L264:
 3851 0054 FA460040 		.word	1073759994
 3852 0058 18000000 		.word	interruptStatus.5074
 3853              		.cfi_endproc
 3854              	.LFE52:
 3855              		.size	CyVdStickyStatus, .-CyVdStickyStatus
 3856              		.section	.text.CyVdRealTimeStatus,"ax",%progbits
 3857              		.align	2
 3858              		.global	CyVdRealTimeStatus
 3859              		.thumb
 3860              		.thumb_func
 3861              		.type	CyVdRealTimeStatus, %function
 3862              	CyVdRealTimeStatus:
 3863              	.LFB53:
1925:Generated_Source\PSoC5/CyLib.c **** 
1926:Generated_Source\PSoC5/CyLib.c **** 
1927:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1928:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyVdRealTimeStatus
1929:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1930:Generated_Source\PSoC5/CyLib.c **** *
1931:Generated_Source\PSoC5/CyLib.c **** *  Reads the real-time voltage detection status bits in the RESET_SR2 register.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 103


1932:Generated_Source\PSoC5/CyLib.c **** *  The bits are set to 1 by the voltage monitor circuit when the supply is
1933:Generated_Source\PSoC5/CyLib.c **** *  outside the detector’s trip point, and set to 0 when the supply is inside the
1934:Generated_Source\PSoC5/CyLib.c **** *  trip point.
1935:Generated_Source\PSoC5/CyLib.c **** *
1936:Generated_Source\PSoC5/CyLib.c **** * \return
1937:Generated_Source\PSoC5/CyLib.c **** *  Status of the LVID, LVIA, and HVIA bits in the RESET_SR2 register.
1938:Generated_Source\PSoC5/CyLib.c **** *   Define                  Definition
1939:Generated_Source\PSoC5/CyLib.c **** *   CY_VD_LVID            Real-time status of digital LVI.
1940:Generated_Source\PSoC5/CyLib.c **** *   CY_VD_LVIA            Real-time status of analog LVI.
1941:Generated_Source\PSoC5/CyLib.c **** *   CY_VD_HVIA            Real-time status of analog HVI.
1942:Generated_Source\PSoC5/CyLib.c **** *
1943:Generated_Source\PSoC5/CyLib.c **** * Side Effects and Restrictions:
1944:Generated_Source\PSoC5/CyLib.c **** *  When an LVI reset occurs, the RESET_SR2 status registers are cleared. This
1945:Generated_Source\PSoC5/CyLib.c **** *  means that the voltage detection status bits are not persistent across an LVI
1946:Generated_Source\PSoC5/CyLib.c **** *  reset and cannot be used to determine a reset source.
1947:Generated_Source\PSoC5/CyLib.c **** *
1948:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1949:Generated_Source\PSoC5/CyLib.c **** uint8 CyVdRealTimeStatus(void) 
1950:Generated_Source\PSoC5/CyLib.c **** {
 3864              		.loc 1 1950 0
 3865              		.cfi_startproc
 3866              		@ args = 0, pretend = 0, frame = 8
 3867              		@ frame_needed = 1, uses_anonymous_args = 0
 3868 0000 80B5     		push	{r7, lr}
 3869              		.cfi_def_cfa_offset 8
 3870              		.cfi_offset 7, -8
 3871              		.cfi_offset 14, -4
 3872 0002 82B0     		sub	sp, sp, #8
 3873              		.cfi_def_cfa_offset 16
 3874 0004 00AF     		add	r7, sp, #0
 3875              		.cfi_def_cfa_register 7
1951:Generated_Source\PSoC5/CyLib.c ****     uint8 interruptState;
1952:Generated_Source\PSoC5/CyLib.c ****     uint8 vdFlagsState;
1953:Generated_Source\PSoC5/CyLib.c **** 
1954:Generated_Source\PSoC5/CyLib.c ****     interruptState = CyEnterCriticalSection();
 3876              		.loc 1 1954 0
 3877 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 3878 000a 0346     		mov	r3, r0
 3879 000c FB71     		strb	r3, [r7, #7]
1955:Generated_Source\PSoC5/CyLib.c ****     vdFlagsState = CY_VD_RT_STATUS_REG & (CY_VD_LVID | CY_VD_LVIA | CY_VD_HVIA);
 3880              		.loc 1 1955 0
 3881 000e 074B     		ldr	r3, .L268
 3882 0010 1B78     		ldrb	r3, [r3]
 3883 0012 DBB2     		uxtb	r3, r3
 3884 0014 03F00703 		and	r3, r3, #7
 3885 0018 BB71     		strb	r3, [r7, #6]
1956:Generated_Source\PSoC5/CyLib.c ****     CyExitCriticalSection(interruptState);
 3886              		.loc 1 1956 0
 3887 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3888 001c 1846     		mov	r0, r3
 3889 001e FFF7FEFF 		bl	CyExitCriticalSection
1957:Generated_Source\PSoC5/CyLib.c **** 
1958:Generated_Source\PSoC5/CyLib.c ****     return(vdFlagsState);
 3890              		.loc 1 1958 0
 3891 0022 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
1959:Generated_Source\PSoC5/CyLib.c **** }
 3892              		.loc 1 1959 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 104


 3893 0024 1846     		mov	r0, r3
 3894 0026 0837     		adds	r7, r7, #8
 3895              		.cfi_def_cfa_offset 8
 3896 0028 BD46     		mov	sp, r7
 3897              		.cfi_def_cfa_register 13
 3898              		@ sp needed
 3899 002a 80BD     		pop	{r7, pc}
 3900              	.L269:
 3901              		.align	2
 3902              	.L268:
 3903 002c FC460040 		.word	1073759996
 3904              		.cfi_endproc
 3905              	.LFE53:
 3906              		.size	CyVdRealTimeStatus, .-CyVdRealTimeStatus
 3907              		.section	.text.CyDisableInts,"ax",%progbits
 3908              		.align	2
 3909              		.global	CyDisableInts
 3910              		.thumb
 3911              		.thumb_func
 3912              		.type	CyDisableInts, %function
 3913              	CyDisableInts:
 3914              	.LFB54:
1960:Generated_Source\PSoC5/CyLib.c **** 
1961:Generated_Source\PSoC5/CyLib.c **** 
1962:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
1963:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyDisableInts
1964:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
1965:Generated_Source\PSoC5/CyLib.c **** *
1966:Generated_Source\PSoC5/CyLib.c **** *  Disables the interrupt enable for each interrupt.
1967:Generated_Source\PSoC5/CyLib.c **** *
1968:Generated_Source\PSoC5/CyLib.c **** * \return
1969:Generated_Source\PSoC5/CyLib.c **** *  32 bit mask of previously enabled interrupts.
1970:Generated_Source\PSoC5/CyLib.c **** *
1971:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
1972:Generated_Source\PSoC5/CyLib.c **** uint32 CyDisableInts(void) 
1973:Generated_Source\PSoC5/CyLib.c **** {
 3915              		.loc 1 1973 0
 3916              		.cfi_startproc
 3917              		@ args = 0, pretend = 0, frame = 8
 3918              		@ frame_needed = 1, uses_anonymous_args = 0
 3919 0000 80B5     		push	{r7, lr}
 3920              		.cfi_def_cfa_offset 8
 3921              		.cfi_offset 7, -8
 3922              		.cfi_offset 14, -4
 3923 0002 82B0     		sub	sp, sp, #8
 3924              		.cfi_def_cfa_offset 16
 3925 0004 00AF     		add	r7, sp, #0
 3926              		.cfi_def_cfa_register 7
1974:Generated_Source\PSoC5/CyLib.c ****     uint32 intState;
1975:Generated_Source\PSoC5/CyLib.c ****     uint8 interruptState;
1976:Generated_Source\PSoC5/CyLib.c **** 
1977:Generated_Source\PSoC5/CyLib.c ****     interruptState = CyEnterCriticalSection();
 3927              		.loc 1 1977 0
 3928 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 3929 000a 0346     		mov	r3, r0
 3930 000c FB71     		strb	r3, [r7, #7]
1978:Generated_Source\PSoC5/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 105


1979:Generated_Source\PSoC5/CyLib.c ****     #if(CY_PSOC3)
1980:Generated_Source\PSoC5/CyLib.c **** 
1981:Generated_Source\PSoC5/CyLib.c ****         /* Get the current interrupt state. */
1982:Generated_Source\PSoC5/CyLib.c ****         intState  = ((uint32) CY_GET_REG8(CY_INT_CLR_EN0_PTR));
1983:Generated_Source\PSoC5/CyLib.c ****         intState |= ((uint32) (((uint32) CY_GET_REG8(CY_INT_CLR_EN1_PTR)) << 8u));
1984:Generated_Source\PSoC5/CyLib.c ****         intState |= ((uint32) (((uint32) CY_GET_REG8(CY_INT_CLR_EN2_PTR)) << 16u));
1985:Generated_Source\PSoC5/CyLib.c ****         intState |= ((uint32) (((uint32) CY_GET_REG8(CY_INT_CLR_EN3_PTR)) << 24u));
1986:Generated_Source\PSoC5/CyLib.c **** 
1987:Generated_Source\PSoC5/CyLib.c **** 
1988:Generated_Source\PSoC5/CyLib.c ****         /* Disable all of the interrupts. */
1989:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG8(CY_INT_CLR_EN0_PTR, 0xFFu);
1990:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG8(CY_INT_CLR_EN1_PTR, 0xFFu);
1991:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG8(CY_INT_CLR_EN2_PTR, 0xFFu);
1992:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG8(CY_INT_CLR_EN3_PTR, 0xFFu);
1993:Generated_Source\PSoC5/CyLib.c **** 
1994:Generated_Source\PSoC5/CyLib.c ****     #else
1995:Generated_Source\PSoC5/CyLib.c **** 
1996:Generated_Source\PSoC5/CyLib.c ****         /* Get the current interrupt state. */
1997:Generated_Source\PSoC5/CyLib.c ****         intState = CY_GET_REG32(CY_INT_CLEAR_PTR);
 3931              		.loc 1 1997 0
 3932 000e 084B     		ldr	r3, .L272
 3933 0010 1B68     		ldr	r3, [r3]
 3934 0012 3B60     		str	r3, [r7]
1998:Generated_Source\PSoC5/CyLib.c **** 
1999:Generated_Source\PSoC5/CyLib.c ****         /* Disable all of the interrupts. */
2000:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG32(CY_INT_CLEAR_PTR, 0xFFFFFFFFu);
 3935              		.loc 1 2000 0
 3936 0014 064B     		ldr	r3, .L272
 3937 0016 4FF0FF32 		mov	r2, #-1
 3938 001a 1A60     		str	r2, [r3]
2001:Generated_Source\PSoC5/CyLib.c **** 
2002:Generated_Source\PSoC5/CyLib.c ****     #endif /* (CY_PSOC3) */
2003:Generated_Source\PSoC5/CyLib.c **** 
2004:Generated_Source\PSoC5/CyLib.c ****     CyExitCriticalSection(interruptState);
 3939              		.loc 1 2004 0
 3940 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3941 001e 1846     		mov	r0, r3
 3942 0020 FFF7FEFF 		bl	CyExitCriticalSection
2005:Generated_Source\PSoC5/CyLib.c **** 
2006:Generated_Source\PSoC5/CyLib.c ****     return (intState);
 3943              		.loc 1 2006 0
 3944 0024 3B68     		ldr	r3, [r7]
2007:Generated_Source\PSoC5/CyLib.c **** }
 3945              		.loc 1 2007 0
 3946 0026 1846     		mov	r0, r3
 3947 0028 0837     		adds	r7, r7, #8
 3948              		.cfi_def_cfa_offset 8
 3949 002a BD46     		mov	sp, r7
 3950              		.cfi_def_cfa_register 13
 3951              		@ sp needed
 3952 002c 80BD     		pop	{r7, pc}
 3953              	.L273:
 3954 002e 00BF     		.align	2
 3955              	.L272:
 3956 0030 80E100E0 		.word	-536813184
 3957              		.cfi_endproc
 3958              	.LFE54:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 106


 3959              		.size	CyDisableInts, .-CyDisableInts
 3960              		.section	.text.CyEnableInts,"ax",%progbits
 3961              		.align	2
 3962              		.global	CyEnableInts
 3963              		.thumb
 3964              		.thumb_func
 3965              		.type	CyEnableInts, %function
 3966              	CyEnableInts:
 3967              	.LFB55:
2008:Generated_Source\PSoC5/CyLib.c **** 
2009:Generated_Source\PSoC5/CyLib.c **** 
2010:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
2011:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyEnableInts
2012:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
2013:Generated_Source\PSoC5/CyLib.c **** *
2014:Generated_Source\PSoC5/CyLib.c **** *  Enables interrupts to a given state.
2015:Generated_Source\PSoC5/CyLib.c **** *
2016:Generated_Source\PSoC5/CyLib.c **** *  \param uint32 mask: 32 bit mask of interrupts to enable.
2017:Generated_Source\PSoC5/CyLib.c **** *
2018:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
2019:Generated_Source\PSoC5/CyLib.c **** void CyEnableInts(uint32 mask) 
2020:Generated_Source\PSoC5/CyLib.c **** {
 3968              		.loc 1 2020 0
 3969              		.cfi_startproc
 3970              		@ args = 0, pretend = 0, frame = 16
 3971              		@ frame_needed = 1, uses_anonymous_args = 0
 3972 0000 80B5     		push	{r7, lr}
 3973              		.cfi_def_cfa_offset 8
 3974              		.cfi_offset 7, -8
 3975              		.cfi_offset 14, -4
 3976 0002 84B0     		sub	sp, sp, #16
 3977              		.cfi_def_cfa_offset 24
 3978 0004 00AF     		add	r7, sp, #0
 3979              		.cfi_def_cfa_register 7
 3980 0006 7860     		str	r0, [r7, #4]
2021:Generated_Source\PSoC5/CyLib.c **** 
2022:Generated_Source\PSoC5/CyLib.c ****     uint8 interruptState;
2023:Generated_Source\PSoC5/CyLib.c **** 
2024:Generated_Source\PSoC5/CyLib.c ****     interruptState = CyEnterCriticalSection();
 3981              		.loc 1 2024 0
 3982 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 3983 000c 0346     		mov	r3, r0
 3984 000e FB73     		strb	r3, [r7, #15]
2025:Generated_Source\PSoC5/CyLib.c **** 
2026:Generated_Source\PSoC5/CyLib.c ****     #if(CY_PSOC3)
2027:Generated_Source\PSoC5/CyLib.c **** 
2028:Generated_Source\PSoC5/CyLib.c ****         /* Set interrupts as enabled. */
2029:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG8(CY_INT_SET_EN3_PTR, ((uint8) (mask >> 24u)));
2030:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG8(CY_INT_SET_EN2_PTR, ((uint8) (mask >> 16u)));
2031:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG8(CY_INT_SET_EN1_PTR, ((uint8) (mask >> 8u )));
2032:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG8(CY_INT_SET_EN0_PTR, ((uint8) (mask )));
2033:Generated_Source\PSoC5/CyLib.c **** 
2034:Generated_Source\PSoC5/CyLib.c ****     #else
2035:Generated_Source\PSoC5/CyLib.c **** 
2036:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG32(CY_INT_ENABLE_PTR, mask);
 3985              		.loc 1 2036 0
 3986 0010 044A     		ldr	r2, .L275
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 107


 3987 0012 7B68     		ldr	r3, [r7, #4]
 3988 0014 1360     		str	r3, [r2]
2037:Generated_Source\PSoC5/CyLib.c **** 
2038:Generated_Source\PSoC5/CyLib.c ****     #endif /* (CY_PSOC3) */
2039:Generated_Source\PSoC5/CyLib.c **** 
2040:Generated_Source\PSoC5/CyLib.c ****     CyExitCriticalSection(interruptState);
 3989              		.loc 1 2040 0
 3990 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3991 0018 1846     		mov	r0, r3
 3992 001a FFF7FEFF 		bl	CyExitCriticalSection
2041:Generated_Source\PSoC5/CyLib.c **** 
2042:Generated_Source\PSoC5/CyLib.c **** }
 3993              		.loc 1 2042 0
 3994 001e 1037     		adds	r7, r7, #16
 3995              		.cfi_def_cfa_offset 8
 3996 0020 BD46     		mov	sp, r7
 3997              		.cfi_def_cfa_register 13
 3998              		@ sp needed
 3999 0022 80BD     		pop	{r7, pc}
 4000              	.L276:
 4001              		.align	2
 4002              	.L275:
 4003 0024 00E100E0 		.word	-536813312
 4004              		.cfi_endproc
 4005              	.LFE55:
 4006              		.size	CyEnableInts, .-CyEnableInts
 4007              		.section	.text.CyFlushCache,"ax",%progbits
 4008              		.align	2
 4009              		.global	CyFlushCache
 4010              		.thumb
 4011              		.thumb_func
 4012              		.type	CyFlushCache, %function
 4013              	CyFlushCache:
 4014              	.LFB56:
2043:Generated_Source\PSoC5/CyLib.c **** 
2044:Generated_Source\PSoC5/CyLib.c **** #if(CY_PSOC5)
2045:Generated_Source\PSoC5/CyLib.c **** 
2046:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2047:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyFlushCache
2048:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2049:Generated_Source\PSoC5/CyLib.c ****     *  Call this API after a flash row erase/write operation to invalidate or flush
2050:Generated_Source\PSoC5/CyLib.c ****     *  any of that particular flash region content already present in the cache.
2051:Generated_Source\PSoC5/CyLib.c ****     *  After a cache flush operation, any access to that flash region after the
2052:Generated_Source\PSoC5/CyLib.c ****     *  erase/write operation would reload the cache with the modified data from the
2053:Generated_Source\PSoC5/CyLib.c ****     *  flash region. If the flash region update involves multiple flash row write
2054:Generated_Source\PSoC5/CyLib.c ****     *  operations, then the flushing of the cache can be done once at the end of
2055:Generated_Source\PSoC5/CyLib.c ****     *  the operation as long as the flash data would not be accessed in the middle
2056:Generated_Source\PSoC5/CyLib.c ****     *  of the multiple row update process. Else, flush the cache after every flash
2057:Generated_Source\PSoC5/CyLib.c ****     *  row write.
2058:Generated_Source\PSoC5/CyLib.c ****     *
2059:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2060:Generated_Source\PSoC5/CyLib.c ****     void CyFlushCache(void)
2061:Generated_Source\PSoC5/CyLib.c ****     {
 4015              		.loc 1 2061 0
 4016              		.cfi_startproc
 4017              		@ args = 0, pretend = 0, frame = 8
 4018              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 108


 4019 0000 80B5     		push	{r7, lr}
 4020              		.cfi_def_cfa_offset 8
 4021              		.cfi_offset 7, -8
 4022              		.cfi_offset 14, -4
 4023 0002 82B0     		sub	sp, sp, #8
 4024              		.cfi_def_cfa_offset 16
 4025 0004 00AF     		add	r7, sp, #0
 4026              		.cfi_def_cfa_register 7
2062:Generated_Source\PSoC5/CyLib.c ****         uint8 interruptState;
2063:Generated_Source\PSoC5/CyLib.c **** 
2064:Generated_Source\PSoC5/CyLib.c ****         /* Save current global interrupt enable and disable it */
2065:Generated_Source\PSoC5/CyLib.c ****         interruptState = CyEnterCriticalSection();
 4027              		.loc 1 2065 0
 4028 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 4029 000a 0346     		mov	r3, r0
 4030 000c FB71     		strb	r3, [r7, #7]
2066:Generated_Source\PSoC5/CyLib.c **** 
2067:Generated_Source\PSoC5/CyLib.c ****         /* Fill instruction prefectch unit to insure data integrity */
2068:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4031              		.loc 1 2068 0
 4032              	@ 2068 "Generated_Source\PSoC5\CyLib.c" 1
 4033 000e 00BF     		NOP
 4034              	
 4035              	@ 0 "" 2
2069:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4036              		.loc 1 2069 0
 4037              	@ 2069 "Generated_Source\PSoC5\CyLib.c" 1
 4038 0010 00BF     		NOP
 4039              	
 4040              	@ 0 "" 2
2070:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4041              		.loc 1 2070 0
 4042              	@ 2070 "Generated_Source\PSoC5\CyLib.c" 1
 4043 0012 00BF     		NOP
 4044              	
 4045              	@ 0 "" 2
2071:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4046              		.loc 1 2071 0
 4047              	@ 2071 "Generated_Source\PSoC5\CyLib.c" 1
 4048 0014 00BF     		NOP
 4049              	
 4050              	@ 0 "" 2
2072:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4051              		.loc 1 2072 0
 4052              	@ 2072 "Generated_Source\PSoC5\CyLib.c" 1
 4053 0016 00BF     		NOP
 4054              	
 4055              	@ 0 "" 2
2073:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4056              		.loc 1 2073 0
 4057              	@ 2073 "Generated_Source\PSoC5\CyLib.c" 1
 4058 0018 00BF     		NOP
 4059              	
 4060              	@ 0 "" 2
2074:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4061              		.loc 1 2074 0
 4062              	@ 2074 "Generated_Source\PSoC5\CyLib.c" 1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 109


 4063 001a 00BF     		NOP
 4064              	
 4065              	@ 0 "" 2
2075:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4066              		.loc 1 2075 0
 4067              	@ 2075 "Generated_Source\PSoC5\CyLib.c" 1
 4068 001c 00BF     		NOP
 4069              	
 4070              	@ 0 "" 2
2076:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4071              		.loc 1 2076 0
 4072              	@ 2076 "Generated_Source\PSoC5\CyLib.c" 1
 4073 001e 00BF     		NOP
 4074              	
 4075              	@ 0 "" 2
2077:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4076              		.loc 1 2077 0
 4077              	@ 2077 "Generated_Source\PSoC5\CyLib.c" 1
 4078 0020 00BF     		NOP
 4079              	
 4080              	@ 0 "" 2
2078:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4081              		.loc 1 2078 0
 4082              	@ 2078 "Generated_Source\PSoC5\CyLib.c" 1
 4083 0022 00BF     		NOP
 4084              	
 4085              	@ 0 "" 2
2079:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4086              		.loc 1 2079 0
 4087              	@ 2079 "Generated_Source\PSoC5\CyLib.c" 1
 4088 0024 00BF     		NOP
 4089              	
 4090              	@ 0 "" 2
2080:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4091              		.loc 1 2080 0
 4092              	@ 2080 "Generated_Source\PSoC5\CyLib.c" 1
 4093 0026 00BF     		NOP
 4094              	
 4095              	@ 0 "" 2
2081:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4096              		.loc 1 2081 0
 4097              	@ 2081 "Generated_Source\PSoC5\CyLib.c" 1
 4098 0028 00BF     		NOP
 4099              	
 4100              	@ 0 "" 2
2082:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4101              		.loc 1 2082 0
 4102              	@ 2082 "Generated_Source\PSoC5\CyLib.c" 1
 4103 002a 00BF     		NOP
 4104              	
 4105              	@ 0 "" 2
2083:Generated_Source\PSoC5/CyLib.c ****         CY_NOP;
 4106              		.loc 1 2083 0
 4107              	@ 2083 "Generated_Source\PSoC5\CyLib.c" 1
 4108 002c 00BF     		NOP
 4109              	
 4110              	@ 0 "" 2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 110


2084:Generated_Source\PSoC5/CyLib.c **** 
2085:Generated_Source\PSoC5/CyLib.c ****         /* All entries in cache are invalidated on next clock cycle. */
2086:Generated_Source\PSoC5/CyLib.c ****         CY_CACHE_CONTROL_REG |= CY_CACHE_CONTROL_FLUSH;
 4111              		.loc 1 2086 0
 4112              		.thumb
 4113 002e 094A     		ldr	r2, .L278
 4114 0030 084B     		ldr	r3, .L278
 4115 0032 1B88     		ldrh	r3, [r3]	@ movhi
 4116 0034 9BB2     		uxth	r3, r3
 4117 0036 43F00403 		orr	r3, r3, #4
 4118 003a 9BB2     		uxth	r3, r3
 4119 003c 1380     		strh	r3, [r2]	@ movhi
2087:Generated_Source\PSoC5/CyLib.c **** 
2088:Generated_Source\PSoC5/CyLib.c ****         /* Once this is executed it's guaranteed the cache has been flushed */
2089:Generated_Source\PSoC5/CyLib.c ****         (void) CY_CACHE_CONTROL_REG;
 4120              		.loc 1 2089 0
 4121 003e 054B     		ldr	r3, .L278
 4122 0040 1B88     		ldrh	r3, [r3]	@ movhi
2090:Generated_Source\PSoC5/CyLib.c **** 
2091:Generated_Source\PSoC5/CyLib.c ****         /* Flush the pipeline */
2092:Generated_Source\PSoC5/CyLib.c ****         CY_SYS_ISB;
 4123              		.loc 1 2092 0
 4124              	@ 2092 "Generated_Source\PSoC5\CyLib.c" 1
 4125 0042 BFF36F8F 		isb 
 4126              	
 4127              	@ 0 "" 2
2093:Generated_Source\PSoC5/CyLib.c **** 
2094:Generated_Source\PSoC5/CyLib.c ****         /* Restore global interrupt enable state */
2095:Generated_Source\PSoC5/CyLib.c ****         CyExitCriticalSection(interruptState);
 4128              		.loc 1 2095 0
 4129              		.thumb
 4130 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4131 0048 1846     		mov	r0, r3
 4132 004a FFF7FEFF 		bl	CyExitCriticalSection
2096:Generated_Source\PSoC5/CyLib.c ****     }
 4133              		.loc 1 2096 0
 4134 004e 0837     		adds	r7, r7, #8
 4135              		.cfi_def_cfa_offset 8
 4136 0050 BD46     		mov	sp, r7
 4137              		.cfi_def_cfa_register 13
 4138              		@ sp needed
 4139 0052 80BD     		pop	{r7, pc}
 4140              	.L279:
 4141              		.align	2
 4142              	.L278:
 4143 0054 00480040 		.word	1073760256
 4144              		.cfi_endproc
 4145              	.LFE56:
 4146              		.size	CyFlushCache, .-CyFlushCache
 4147              		.section	.text.CyIntSetSysVector,"ax",%progbits
 4148              		.align	2
 4149              		.global	CyIntSetSysVector
 4150              		.thumb
 4151              		.thumb_func
 4152              		.type	CyIntSetSysVector, %function
 4153              	CyIntSetSysVector:
 4154              	.LFB57:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 111


2097:Generated_Source\PSoC5/CyLib.c **** 
2098:Generated_Source\PSoC5/CyLib.c **** 
2099:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2100:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntSetSysVector
2101:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2102:Generated_Source\PSoC5/CyLib.c ****     *  Sets the interrupt vector of the specified system interrupt number. System
2103:Generated_Source\PSoC5/CyLib.c ****     *  interrupts are present only for the ARM platform. These interrupts are for
2104:Generated_Source\PSoC5/CyLib.c ****     *  SysTick, PendSV and others.
2105:Generated_Source\PSoC5/CyLib.c ****     *
2106:Generated_Source\PSoC5/CyLib.c ****     *  \param number: System interrupt number:
2107:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_NMI_IRQN                - Non Maskable Interrupt
2108:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_HARD_FAULT_IRQN         - Hard Fault Interrupt
2109:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_MEM_MANAGE_IRQN         - Memory Management Interrupt
2110:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_BUS_FAULT_IRQN          - Bus Fault Interrupt
2111:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_USAGE_FAULT_IRQN        - Usage Fault Interrupt
2112:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_SVCALL_IRQN             - SV Call Interrupt
2113:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_DEBUG_MONITOR_IRQN      - Debug Monitor Interrupt
2114:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_PEND_SV_IRQN            - Pend SV Interrupt
2115:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_SYSTICK_IRQN            - System Tick Interrupt
2116:Generated_Source\PSoC5/CyLib.c ****     *
2117:Generated_Source\PSoC5/CyLib.c ****     *  \param address: Pointer to an interrupt service routine.
2118:Generated_Source\PSoC5/CyLib.c ****     *
2119:Generated_Source\PSoC5/CyLib.c ****     * \return
2120:Generated_Source\PSoC5/CyLib.c ****     *   The old ISR vector at this location.
2121:Generated_Source\PSoC5/CyLib.c ****     *
2122:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2123:Generated_Source\PSoC5/CyLib.c ****     cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2124:Generated_Source\PSoC5/CyLib.c ****     {
 4155              		.loc 1 2124 0
 4156              		.cfi_startproc
 4157              		@ args = 0, pretend = 0, frame = 16
 4158              		@ frame_needed = 1, uses_anonymous_args = 0
 4159 0000 80B5     		push	{r7, lr}
 4160              		.cfi_def_cfa_offset 8
 4161              		.cfi_offset 7, -8
 4162              		.cfi_offset 14, -4
 4163 0002 84B0     		sub	sp, sp, #16
 4164              		.cfi_def_cfa_offset 24
 4165 0004 00AF     		add	r7, sp, #0
 4166              		.cfi_def_cfa_register 7
 4167 0006 0346     		mov	r3, r0
 4168 0008 3960     		str	r1, [r7]
 4169 000a FB71     		strb	r3, [r7, #7]
2125:Generated_Source\PSoC5/CyLib.c ****         cyisraddress oldIsr;
2126:Generated_Source\PSoC5/CyLib.c ****         cyisraddress *ramVectorTable = *CY_INT_VECT_TABLE;
 4170              		.loc 1 2126 0
 4171 000c 0E4B     		ldr	r3, .L283
 4172 000e 1B68     		ldr	r3, [r3]
 4173 0010 FB60     		str	r3, [r7, #12]
2127:Generated_Source\PSoC5/CyLib.c **** 
2128:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_SYS_NUMBER_MAX);
 4174              		.loc 1 2128 0
 4175 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4176 0014 0F2B     		cmp	r3, #15
 4177 0016 02D9     		bls	.L281
 4178              		.loc 1 2128 0 is_stmt 0 discriminator 1
 4179 0018 0020     		movs	r0, #0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 112


 4180 001a FFF7FEFF 		bl	CyHalt
 4181              	.L281:
2129:Generated_Source\PSoC5/CyLib.c **** 
2130:Generated_Source\PSoC5/CyLib.c ****         /* Save old Interrupt service routine. */
2131:Generated_Source\PSoC5/CyLib.c ****         oldIsr = ramVectorTable[number & CY_INT_SYS_NUMBER_MASK];
 4182              		.loc 1 2131 0 is_stmt 1
 4183 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4184 0020 03F00F03 		and	r3, r3, #15
 4185 0024 9B00     		lsls	r3, r3, #2
 4186 0026 FA68     		ldr	r2, [r7, #12]
 4187 0028 1344     		add	r3, r3, r2
 4188 002a 1B68     		ldr	r3, [r3]
 4189 002c BB60     		str	r3, [r7, #8]
2132:Generated_Source\PSoC5/CyLib.c **** 
2133:Generated_Source\PSoC5/CyLib.c ****         /* Set new Interrupt service routine. */
2134:Generated_Source\PSoC5/CyLib.c ****         ramVectorTable[number & CY_INT_SYS_NUMBER_MASK] = address;
 4190              		.loc 1 2134 0
 4191 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4192 0030 03F00F03 		and	r3, r3, #15
 4193 0034 9B00     		lsls	r3, r3, #2
 4194 0036 FA68     		ldr	r2, [r7, #12]
 4195 0038 1344     		add	r3, r3, r2
 4196 003a 3A68     		ldr	r2, [r7]
 4197 003c 1A60     		str	r2, [r3]
2135:Generated_Source\PSoC5/CyLib.c **** 
2136:Generated_Source\PSoC5/CyLib.c ****         return (oldIsr);
 4198              		.loc 1 2136 0
 4199 003e BB68     		ldr	r3, [r7, #8]
2137:Generated_Source\PSoC5/CyLib.c ****     }
 4200              		.loc 1 2137 0
 4201 0040 1846     		mov	r0, r3
 4202 0042 1037     		adds	r7, r7, #16
 4203              		.cfi_def_cfa_offset 8
 4204 0044 BD46     		mov	sp, r7
 4205              		.cfi_def_cfa_register 13
 4206              		@ sp needed
 4207 0046 80BD     		pop	{r7, pc}
 4208              	.L284:
 4209              		.align	2
 4210              	.L283:
 4211 0048 08ED00E0 		.word	-536810232
 4212              		.cfi_endproc
 4213              	.LFE57:
 4214              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 4215              		.section	.text.CyIntGetSysVector,"ax",%progbits
 4216              		.align	2
 4217              		.global	CyIntGetSysVector
 4218              		.thumb
 4219              		.thumb_func
 4220              		.type	CyIntGetSysVector, %function
 4221              	CyIntGetSysVector:
 4222              	.LFB58:
2138:Generated_Source\PSoC5/CyLib.c **** 
2139:Generated_Source\PSoC5/CyLib.c **** 
2140:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2141:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntGetSysVector
2142:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 113


2143:Generated_Source\PSoC5/CyLib.c ****     *
2144:Generated_Source\PSoC5/CyLib.c ****     *  Gets the interrupt vector of the specified system interrupt number. System
2145:Generated_Source\PSoC5/CyLib.c ****     *  interrupts are present only for the ARM platform. These interrupts are for
2146:Generated_Source\PSoC5/CyLib.c ****     *  SysTick, PendSV and others.
2147:Generated_Source\PSoC5/CyLib.c ****     *
2148:Generated_Source\PSoC5/CyLib.c ****     *  \param number: System interrupt number:
2149:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_NMI_IRQN                - Non Maskable Interrupt
2150:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_HARD_FAULT_IRQN         - Hard Fault Interrupt
2151:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_MEMORY_MANAGEMENT_IRQN  - Memory Management Interrupt
2152:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_BUS_FAULT_IRQN          - Bus Fault Interrupt
2153:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_USAGE_FAULT_IRQN        - Usage Fault Interrupt
2154:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_SVCALL_IRQN             - SV Call Interrupt
2155:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_DEBUG_MONITOR_IRQN      - Debug Monitor Interrupt
2156:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_PEND_SV_IRQN            - Pend SV Interrupt
2157:Generated_Source\PSoC5/CyLib.c ****     *    CY_INT_SYSTICK_IRQN            - System Tick Interrupt
2158:Generated_Source\PSoC5/CyLib.c ****     *
2159:Generated_Source\PSoC5/CyLib.c ****     * \return
2160:Generated_Source\PSoC5/CyLib.c ****     *   Address of the ISR in the interrupt vector table.
2161:Generated_Source\PSoC5/CyLib.c ****     *
2162:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2163:Generated_Source\PSoC5/CyLib.c ****     cyisraddress CyIntGetSysVector(uint8 number)
2164:Generated_Source\PSoC5/CyLib.c ****     {
 4223              		.loc 1 2164 0
 4224              		.cfi_startproc
 4225              		@ args = 0, pretend = 0, frame = 16
 4226              		@ frame_needed = 1, uses_anonymous_args = 0
 4227 0000 80B5     		push	{r7, lr}
 4228              		.cfi_def_cfa_offset 8
 4229              		.cfi_offset 7, -8
 4230              		.cfi_offset 14, -4
 4231 0002 84B0     		sub	sp, sp, #16
 4232              		.cfi_def_cfa_offset 24
 4233 0004 00AF     		add	r7, sp, #0
 4234              		.cfi_def_cfa_register 7
 4235 0006 0346     		mov	r3, r0
 4236 0008 FB71     		strb	r3, [r7, #7]
2165:Generated_Source\PSoC5/CyLib.c ****         cyisraddress *ramVectorTable = *CY_INT_VECT_TABLE;
 4237              		.loc 1 2165 0
 4238 000a 0A4B     		ldr	r3, .L288
 4239 000c 1B68     		ldr	r3, [r3]
 4240 000e FB60     		str	r3, [r7, #12]
2166:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_SYS_NUMBER_MAX);
 4241              		.loc 1 2166 0
 4242 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4243 0012 0F2B     		cmp	r3, #15
 4244 0014 02D9     		bls	.L286
 4245              		.loc 1 2166 0 is_stmt 0 discriminator 1
 4246 0016 0020     		movs	r0, #0
 4247 0018 FFF7FEFF 		bl	CyHalt
 4248              	.L286:
2167:Generated_Source\PSoC5/CyLib.c **** 
2168:Generated_Source\PSoC5/CyLib.c ****         return ramVectorTable[number & CY_INT_SYS_NUMBER_MASK];
 4249              		.loc 1 2168 0 is_stmt 1
 4250 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4251 001e 03F00F03 		and	r3, r3, #15
 4252 0022 9B00     		lsls	r3, r3, #2
 4253 0024 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 114


 4254 0026 1344     		add	r3, r3, r2
 4255 0028 1B68     		ldr	r3, [r3]
2169:Generated_Source\PSoC5/CyLib.c ****     }
 4256              		.loc 1 2169 0
 4257 002a 1846     		mov	r0, r3
 4258 002c 1037     		adds	r7, r7, #16
 4259              		.cfi_def_cfa_offset 8
 4260 002e BD46     		mov	sp, r7
 4261              		.cfi_def_cfa_register 13
 4262              		@ sp needed
 4263 0030 80BD     		pop	{r7, pc}
 4264              	.L289:
 4265 0032 00BF     		.align	2
 4266              	.L288:
 4267 0034 08ED00E0 		.word	-536810232
 4268              		.cfi_endproc
 4269              	.LFE58:
 4270              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 4271              		.section	.text.CyIntSetVector,"ax",%progbits
 4272              		.align	2
 4273              		.global	CyIntSetVector
 4274              		.thumb
 4275              		.thumb_func
 4276              		.type	CyIntSetVector, %function
 4277              	CyIntSetVector:
 4278              	.LFB59:
2170:Generated_Source\PSoC5/CyLib.c **** 
2171:Generated_Source\PSoC5/CyLib.c **** 
2172:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntSetVector
2174:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC5/CyLib.c ****     *
2176:Generated_Source\PSoC5/CyLib.c ****     *  Sets the interrupt vector of the specified interrupt number.
2177:Generated_Source\PSoC5/CyLib.c ****     *
2178:Generated_Source\PSoC5/CyLib.c ****     *  \param number: Valid range [0-31].  Interrupt number
2179:Generated_Source\PSoC5/CyLib.c ****     *  \param address: Pointer to an interrupt service routine
2180:Generated_Source\PSoC5/CyLib.c ****     *
2181:Generated_Source\PSoC5/CyLib.c ****     * \return
2182:Generated_Source\PSoC5/CyLib.c ****     *   Previous interrupt vector value.
2183:Generated_Source\PSoC5/CyLib.c ****     *
2184:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2185:Generated_Source\PSoC5/CyLib.c ****     cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2186:Generated_Source\PSoC5/CyLib.c ****     {
 4279              		.loc 1 2186 0
 4280              		.cfi_startproc
 4281              		@ args = 0, pretend = 0, frame = 16
 4282              		@ frame_needed = 1, uses_anonymous_args = 0
 4283 0000 80B5     		push	{r7, lr}
 4284              		.cfi_def_cfa_offset 8
 4285              		.cfi_offset 7, -8
 4286              		.cfi_offset 14, -4
 4287 0002 84B0     		sub	sp, sp, #16
 4288              		.cfi_def_cfa_offset 24
 4289 0004 00AF     		add	r7, sp, #0
 4290              		.cfi_def_cfa_register 7
 4291 0006 0346     		mov	r3, r0
 4292 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 115


 4293 000a FB71     		strb	r3, [r7, #7]
2187:Generated_Source\PSoC5/CyLib.c ****         cyisraddress oldIsr;
2188:Generated_Source\PSoC5/CyLib.c ****         cyisraddress *ramVectorTable = *CY_INT_VECT_TABLE;
 4294              		.loc 1 2188 0
 4295 000c 0F4B     		ldr	r3, .L293
 4296 000e 1B68     		ldr	r3, [r3]
 4297 0010 FB60     		str	r3, [r7, #12]
2189:Generated_Source\PSoC5/CyLib.c **** 
2190:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
 4298              		.loc 1 2190 0
 4299 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4300 0014 1F2B     		cmp	r3, #31
 4301 0016 02D9     		bls	.L291
 4302              		.loc 1 2190 0 is_stmt 0 discriminator 1
 4303 0018 0020     		movs	r0, #0
 4304 001a FFF7FEFF 		bl	CyHalt
 4305              	.L291:
2191:Generated_Source\PSoC5/CyLib.c **** 
2192:Generated_Source\PSoC5/CyLib.c ****         /* Save old Interrupt service routine. */
2193:Generated_Source\PSoC5/CyLib.c ****         oldIsr = ramVectorTable[CY_INT_IRQ_BASE + (number & CY_INT_NUMBER_MASK)];
 4306              		.loc 1 2193 0 is_stmt 1
 4307 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4308 0020 03F01F03 		and	r3, r3, #31
 4309 0024 1033     		adds	r3, r3, #16
 4310 0026 9B00     		lsls	r3, r3, #2
 4311 0028 FA68     		ldr	r2, [r7, #12]
 4312 002a 1344     		add	r3, r3, r2
 4313 002c 1B68     		ldr	r3, [r3]
 4314 002e BB60     		str	r3, [r7, #8]
2194:Generated_Source\PSoC5/CyLib.c **** 
2195:Generated_Source\PSoC5/CyLib.c ****         /* Set new Interrupt service routine. */
2196:Generated_Source\PSoC5/CyLib.c ****         ramVectorTable[CY_INT_IRQ_BASE + (number & CY_INT_NUMBER_MASK)] = address;
 4315              		.loc 1 2196 0
 4316 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4317 0032 03F01F03 		and	r3, r3, #31
 4318 0036 1033     		adds	r3, r3, #16
 4319 0038 9B00     		lsls	r3, r3, #2
 4320 003a FA68     		ldr	r2, [r7, #12]
 4321 003c 1344     		add	r3, r3, r2
 4322 003e 3A68     		ldr	r2, [r7]
 4323 0040 1A60     		str	r2, [r3]
2197:Generated_Source\PSoC5/CyLib.c **** 
2198:Generated_Source\PSoC5/CyLib.c ****         return (oldIsr);
 4324              		.loc 1 2198 0
 4325 0042 BB68     		ldr	r3, [r7, #8]
2199:Generated_Source\PSoC5/CyLib.c ****     }
 4326              		.loc 1 2199 0
 4327 0044 1846     		mov	r0, r3
 4328 0046 1037     		adds	r7, r7, #16
 4329              		.cfi_def_cfa_offset 8
 4330 0048 BD46     		mov	sp, r7
 4331              		.cfi_def_cfa_register 13
 4332              		@ sp needed
 4333 004a 80BD     		pop	{r7, pc}
 4334              	.L294:
 4335              		.align	2
 4336              	.L293:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 116


 4337 004c 08ED00E0 		.word	-536810232
 4338              		.cfi_endproc
 4339              	.LFE59:
 4340              		.size	CyIntSetVector, .-CyIntSetVector
 4341              		.section	.text.CyIntGetVector,"ax",%progbits
 4342              		.align	2
 4343              		.global	CyIntGetVector
 4344              		.thumb
 4345              		.thumb_func
 4346              		.type	CyIntGetVector, %function
 4347              	CyIntGetVector:
 4348              	.LFB60:
2200:Generated_Source\PSoC5/CyLib.c **** 
2201:Generated_Source\PSoC5/CyLib.c **** 
2202:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2203:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntGetVector
2204:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2205:Generated_Source\PSoC5/CyLib.c ****     *
2206:Generated_Source\PSoC5/CyLib.c ****     *  Gets the interrupt vector of the specified interrupt number.
2207:Generated_Source\PSoC5/CyLib.c ****     *
2208:Generated_Source\PSoC5/CyLib.c ****     *  \param number: Valid range [0-31].  Interrupt number
2209:Generated_Source\PSoC5/CyLib.c ****     *
2210:Generated_Source\PSoC5/CyLib.c ****     * \return
2211:Generated_Source\PSoC5/CyLib.c ****     *  The address of the ISR in the interrupt vector table.
2212:Generated_Source\PSoC5/CyLib.c ****     *
2213:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2214:Generated_Source\PSoC5/CyLib.c ****     cyisraddress CyIntGetVector(uint8 number)
2215:Generated_Source\PSoC5/CyLib.c ****     {
 4349              		.loc 1 2215 0
 4350              		.cfi_startproc
 4351              		@ args = 0, pretend = 0, frame = 16
 4352              		@ frame_needed = 1, uses_anonymous_args = 0
 4353 0000 80B5     		push	{r7, lr}
 4354              		.cfi_def_cfa_offset 8
 4355              		.cfi_offset 7, -8
 4356              		.cfi_offset 14, -4
 4357 0002 84B0     		sub	sp, sp, #16
 4358              		.cfi_def_cfa_offset 24
 4359 0004 00AF     		add	r7, sp, #0
 4360              		.cfi_def_cfa_register 7
 4361 0006 0346     		mov	r3, r0
 4362 0008 FB71     		strb	r3, [r7, #7]
2216:Generated_Source\PSoC5/CyLib.c ****         cyisraddress *ramVectorTable = *CY_INT_VECT_TABLE;
 4363              		.loc 1 2216 0
 4364 000a 0A4B     		ldr	r3, .L298
 4365 000c 1B68     		ldr	r3, [r3]
 4366 000e FB60     		str	r3, [r7, #12]
2217:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
 4367              		.loc 1 2217 0
 4368 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4369 0012 1F2B     		cmp	r3, #31
 4370 0014 02D9     		bls	.L296
 4371              		.loc 1 2217 0 is_stmt 0 discriminator 1
 4372 0016 0020     		movs	r0, #0
 4373 0018 FFF7FEFF 		bl	CyHalt
 4374              	.L296:
2218:Generated_Source\PSoC5/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 117


2219:Generated_Source\PSoC5/CyLib.c ****         return (ramVectorTable[CY_INT_IRQ_BASE + (number & CY_INT_NUMBER_MASK)]);
 4375              		.loc 1 2219 0 is_stmt 1
 4376 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4377 001e 03F01F03 		and	r3, r3, #31
 4378 0022 1033     		adds	r3, r3, #16
 4379 0024 9B00     		lsls	r3, r3, #2
 4380 0026 FA68     		ldr	r2, [r7, #12]
 4381 0028 1344     		add	r3, r3, r2
 4382 002a 1B68     		ldr	r3, [r3]
2220:Generated_Source\PSoC5/CyLib.c ****     }
 4383              		.loc 1 2220 0
 4384 002c 1846     		mov	r0, r3
 4385 002e 1037     		adds	r7, r7, #16
 4386              		.cfi_def_cfa_offset 8
 4387 0030 BD46     		mov	sp, r7
 4388              		.cfi_def_cfa_register 13
 4389              		@ sp needed
 4390 0032 80BD     		pop	{r7, pc}
 4391              	.L299:
 4392              		.align	2
 4393              	.L298:
 4394 0034 08ED00E0 		.word	-536810232
 4395              		.cfi_endproc
 4396              	.LFE60:
 4397              		.size	CyIntGetVector, .-CyIntGetVector
 4398              		.section	.text.CyIntSetPriority,"ax",%progbits
 4399              		.align	2
 4400              		.global	CyIntSetPriority
 4401              		.thumb
 4402              		.thumb_func
 4403              		.type	CyIntSetPriority, %function
 4404              	CyIntSetPriority:
 4405              	.LFB61:
2221:Generated_Source\PSoC5/CyLib.c **** 
2222:Generated_Source\PSoC5/CyLib.c **** 
2223:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2224:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntSetPriority
2225:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2226:Generated_Source\PSoC5/CyLib.c ****     *
2227:Generated_Source\PSoC5/CyLib.c ****     *  Sets the Priority of the Interrupt.
2228:Generated_Source\PSoC5/CyLib.c ****     *
2229:Generated_Source\PSoC5/CyLib.c ****     *  \param priority: Priority of the interrupt. 0 - 7, 0 being the highest.
2230:Generated_Source\PSoC5/CyLib.c ****     *  \param number: The number of the interrupt, 0 - 31.
2231:Generated_Source\PSoC5/CyLib.c ****     *
2232:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2233:Generated_Source\PSoC5/CyLib.c ****     void CyIntSetPriority(uint8 number, uint8 priority)
2234:Generated_Source\PSoC5/CyLib.c ****     {
 4406              		.loc 1 2234 0
 4407              		.cfi_startproc
 4408              		@ args = 0, pretend = 0, frame = 8
 4409              		@ frame_needed = 1, uses_anonymous_args = 0
 4410 0000 80B5     		push	{r7, lr}
 4411              		.cfi_def_cfa_offset 8
 4412              		.cfi_offset 7, -8
 4413              		.cfi_offset 14, -4
 4414 0002 82B0     		sub	sp, sp, #8
 4415              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 118


 4416 0004 00AF     		add	r7, sp, #0
 4417              		.cfi_def_cfa_register 7
 4418 0006 0346     		mov	r3, r0
 4419 0008 0A46     		mov	r2, r1
 4420 000a FB71     		strb	r3, [r7, #7]
 4421 000c 1346     		mov	r3, r2
 4422 000e BB71     		strb	r3, [r7, #6]
2235:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(priority <= CY_INT_PRIORITY_MAX);
 4423              		.loc 1 2235 0
 4424 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4425 0012 072B     		cmp	r3, #7
 4426 0014 02D9     		bls	.L301
 4427              		.loc 1 2235 0 is_stmt 0 discriminator 1
 4428 0016 0020     		movs	r0, #0
 4429 0018 FFF7FEFF 		bl	CyHalt
 4430              	.L301:
2236:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
 4431              		.loc 1 2236 0 is_stmt 1
 4432 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4433 001e 1F2B     		cmp	r3, #31
 4434 0020 02D9     		bls	.L302
 4435              		.loc 1 2236 0 is_stmt 0 discriminator 1
 4436 0022 0020     		movs	r0, #0
 4437 0024 FFF7FEFF 		bl	CyHalt
 4438              	.L302:
2237:Generated_Source\PSoC5/CyLib.c ****         CY_INT_PRIORITY_PTR[number & CY_INT_NUMBER_MASK] = (priority & CY_INT_PRIORITY_MASK)<< 5;
 4439              		.loc 1 2237 0 is_stmt 1
 4440 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4441 002a 03F01F03 		and	r3, r3, #31
 4442 002e 03F16043 		add	r3, r3, #-536870912
 4443 0032 03F56443 		add	r3, r3, #58368
 4444 0036 BA79     		ldrb	r2, [r7, #6]
 4445 0038 5201     		lsls	r2, r2, #5
 4446 003a D2B2     		uxtb	r2, r2
 4447 003c 1A70     		strb	r2, [r3]
2238:Generated_Source\PSoC5/CyLib.c ****     }
 4448              		.loc 1 2238 0
 4449 003e 0837     		adds	r7, r7, #8
 4450              		.cfi_def_cfa_offset 8
 4451 0040 BD46     		mov	sp, r7
 4452              		.cfi_def_cfa_register 13
 4453              		@ sp needed
 4454 0042 80BD     		pop	{r7, pc}
 4455              		.cfi_endproc
 4456              	.LFE61:
 4457              		.size	CyIntSetPriority, .-CyIntSetPriority
 4458              		.section	.text.CyIntGetPriority,"ax",%progbits
 4459              		.align	2
 4460              		.global	CyIntGetPriority
 4461              		.thumb
 4462              		.thumb_func
 4463              		.type	CyIntGetPriority, %function
 4464              	CyIntGetPriority:
 4465              	.LFB62:
2239:Generated_Source\PSoC5/CyLib.c **** 
2240:Generated_Source\PSoC5/CyLib.c **** 
2241:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 119


2242:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntGetPriority
2243:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2244:Generated_Source\PSoC5/CyLib.c ****     *
2245:Generated_Source\PSoC5/CyLib.c ****     *  Gets the Priority of the Interrupt.
2246:Generated_Source\PSoC5/CyLib.c ****     *
2247:Generated_Source\PSoC5/CyLib.c ****     *  \param number: The number of the interrupt, 0 - 31.
2248:Generated_Source\PSoC5/CyLib.c ****     *
2249:Generated_Source\PSoC5/CyLib.c ****     * \return
2250:Generated_Source\PSoC5/CyLib.c ****     *  Priority of the interrupt. 0 - 7, 0 being the highest.
2251:Generated_Source\PSoC5/CyLib.c ****     *
2252:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2253:Generated_Source\PSoC5/CyLib.c ****     uint8 CyIntGetPriority(uint8 number)
2254:Generated_Source\PSoC5/CyLib.c ****     {
 4466              		.loc 1 2254 0
 4467              		.cfi_startproc
 4468              		@ args = 0, pretend = 0, frame = 16
 4469              		@ frame_needed = 1, uses_anonymous_args = 0
 4470 0000 80B5     		push	{r7, lr}
 4471              		.cfi_def_cfa_offset 8
 4472              		.cfi_offset 7, -8
 4473              		.cfi_offset 14, -4
 4474 0002 84B0     		sub	sp, sp, #16
 4475              		.cfi_def_cfa_offset 24
 4476 0004 00AF     		add	r7, sp, #0
 4477              		.cfi_def_cfa_register 7
 4478 0006 0346     		mov	r3, r0
 4479 0008 FB71     		strb	r3, [r7, #7]
2255:Generated_Source\PSoC5/CyLib.c ****         uint8 priority;
2256:Generated_Source\PSoC5/CyLib.c **** 
2257:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
 4480              		.loc 1 2257 0
 4481 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4482 000c 1F2B     		cmp	r3, #31
 4483 000e 02D9     		bls	.L304
 4484              		.loc 1 2257 0 is_stmt 0 discriminator 1
 4485 0010 0020     		movs	r0, #0
 4486 0012 FFF7FEFF 		bl	CyHalt
 4487              	.L304:
2258:Generated_Source\PSoC5/CyLib.c **** 
2259:Generated_Source\PSoC5/CyLib.c ****         priority = CY_INT_PRIORITY_PTR[number & CY_INT_NUMBER_MASK] >> 5;
 4488              		.loc 1 2259 0 is_stmt 1
 4489 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4490 0018 03F01F03 		and	r3, r3, #31
 4491 001c 03F16043 		add	r3, r3, #-536870912
 4492 0020 03F56443 		add	r3, r3, #58368
 4493 0024 1B78     		ldrb	r3, [r3]
 4494 0026 DBB2     		uxtb	r3, r3
 4495 0028 5B09     		lsrs	r3, r3, #5
 4496 002a FB73     		strb	r3, [r7, #15]
2260:Generated_Source\PSoC5/CyLib.c **** 
2261:Generated_Source\PSoC5/CyLib.c ****         return (priority);
 4497              		.loc 1 2261 0
 4498 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2262:Generated_Source\PSoC5/CyLib.c ****     }
 4499              		.loc 1 2262 0
 4500 002e 1846     		mov	r0, r3
 4501 0030 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 120


 4502              		.cfi_def_cfa_offset 8
 4503 0032 BD46     		mov	sp, r7
 4504              		.cfi_def_cfa_register 13
 4505              		@ sp needed
 4506 0034 80BD     		pop	{r7, pc}
 4507              		.cfi_endproc
 4508              	.LFE62:
 4509              		.size	CyIntGetPriority, .-CyIntGetPriority
 4510 0036 00BF     		.section	.text.CyIntGetState,"ax",%progbits
 4511              		.align	2
 4512              		.global	CyIntGetState
 4513              		.thumb
 4514              		.thumb_func
 4515              		.type	CyIntGetState, %function
 4516              	CyIntGetState:
 4517              	.LFB63:
2263:Generated_Source\PSoC5/CyLib.c **** 
2264:Generated_Source\PSoC5/CyLib.c **** 
2265:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2266:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntGetState
2267:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2268:Generated_Source\PSoC5/CyLib.c ****     *
2269:Generated_Source\PSoC5/CyLib.c ****     *   Gets the enable state of the specified interrupt number.
2270:Generated_Source\PSoC5/CyLib.c ****     *
2271:Generated_Source\PSoC5/CyLib.c ****     *   \param number: Valid range [0-31].  Interrupt number.
2272:Generated_Source\PSoC5/CyLib.c ****     *
2273:Generated_Source\PSoC5/CyLib.c ****     * \return
2274:Generated_Source\PSoC5/CyLib.c ****     *   Enable status: 1 if enabled, 0 if disabled
2275:Generated_Source\PSoC5/CyLib.c ****     *
2276:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2277:Generated_Source\PSoC5/CyLib.c ****     uint8 CyIntGetState(uint8 number)
2278:Generated_Source\PSoC5/CyLib.c ****     {
 4518              		.loc 1 2278 0
 4519              		.cfi_startproc
 4520              		@ args = 0, pretend = 0, frame = 16
 4521              		@ frame_needed = 1, uses_anonymous_args = 0
 4522 0000 80B5     		push	{r7, lr}
 4523              		.cfi_def_cfa_offset 8
 4524              		.cfi_offset 7, -8
 4525              		.cfi_offset 14, -4
 4526 0002 84B0     		sub	sp, sp, #16
 4527              		.cfi_def_cfa_offset 24
 4528 0004 00AF     		add	r7, sp, #0
 4529              		.cfi_def_cfa_register 7
 4530 0006 0346     		mov	r3, r0
 4531 0008 FB71     		strb	r3, [r7, #7]
2279:Generated_Source\PSoC5/CyLib.c ****         reg32 * stateReg;
2280:Generated_Source\PSoC5/CyLib.c **** 
2281:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
 4532              		.loc 1 2281 0
 4533 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4534 000c 1F2B     		cmp	r3, #31
 4535 000e 02D9     		bls	.L307
 4536              		.loc 1 2281 0 is_stmt 0 discriminator 1
 4537 0010 0020     		movs	r0, #0
 4538 0012 FFF7FEFF 		bl	CyHalt
 4539              	.L307:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 121


2282:Generated_Source\PSoC5/CyLib.c **** 
2283:Generated_Source\PSoC5/CyLib.c ****         /* Get pointer to Interrupt enable register. */
2284:Generated_Source\PSoC5/CyLib.c ****         stateReg = CY_INT_ENABLE_PTR;
 4540              		.loc 1 2284 0 is_stmt 1
 4541 0016 0A4B     		ldr	r3, .L309
 4542 0018 FB60     		str	r3, [r7, #12]
2285:Generated_Source\PSoC5/CyLib.c **** 
2286:Generated_Source\PSoC5/CyLib.c ****         /* Get state of interrupt. */
2287:Generated_Source\PSoC5/CyLib.c ****         return (0u != (*stateReg & (((uint32) 1u) << (0x1Fu & number)))) ? ((uint8)(1u)) : ((uint8)
 4543              		.loc 1 2287 0
 4544 001a FB68     		ldr	r3, [r7, #12]
 4545 001c 1A68     		ldr	r2, [r3]
 4546 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4547 0020 03F01F03 		and	r3, r3, #31
 4548 0024 22FA03F3 		lsr	r3, r2, r3
 4549 0028 03F00103 		and	r3, r3, #1
 4550 002c 002B     		cmp	r3, #0
 4551 002e 14BF     		ite	ne
 4552 0030 0123     		movne	r3, #1
 4553 0032 0023     		moveq	r3, #0
 4554 0034 DBB2     		uxtb	r3, r3
2288:Generated_Source\PSoC5/CyLib.c ****     }
 4555              		.loc 1 2288 0
 4556 0036 1846     		mov	r0, r3
 4557 0038 1037     		adds	r7, r7, #16
 4558              		.cfi_def_cfa_offset 8
 4559 003a BD46     		mov	sp, r7
 4560              		.cfi_def_cfa_register 13
 4561              		@ sp needed
 4562 003c 80BD     		pop	{r7, pc}
 4563              	.L310:
 4564 003e 00BF     		.align	2
 4565              	.L309:
 4566 0040 00E100E0 		.word	-536813312
 4567              		.cfi_endproc
 4568              	.LFE63:
 4569              		.size	CyIntGetState, .-CyIntGetState
 4570              		.section	.text.CySysTickStart,"ax",%progbits
 4571              		.align	2
 4572              		.global	CySysTickStart
 4573              		.thumb
 4574              		.thumb_func
 4575              		.type	CySysTickStart, %function
 4576              	CySysTickStart:
 4577              	.LFB64:
2289:Generated_Source\PSoC5/CyLib.c **** 
2290:Generated_Source\PSoC5/CyLib.c **** 
2291:Generated_Source\PSoC5/CyLib.c **** #else   /* PSoC3 */
2292:Generated_Source\PSoC5/CyLib.c **** 
2293:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2294:Generated_Source\PSoC5/CyLib.c ****     * Function Name: IntDefaultHandler
2295:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2296:Generated_Source\PSoC5/CyLib.c ****     *
2297:Generated_Source\PSoC5/CyLib.c ****     *  This function is called for all interrupts, other than a reset that gets
2298:Generated_Source\PSoC5/CyLib.c ****     *  called before the system is setup.
2299:Generated_Source\PSoC5/CyLib.c ****     *
2300:Generated_Source\PSoC5/CyLib.c ****     * Theory:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 122


2301:Generated_Source\PSoC5/CyLib.c ****     *  Any value other than zero is acceptable.
2302:Generated_Source\PSoC5/CyLib.c ****     *
2303:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2304:Generated_Source\PSoC5/CyLib.c ****     CY_ISR(IntDefaultHandler)
2305:Generated_Source\PSoC5/CyLib.c ****     {
2306:Generated_Source\PSoC5/CyLib.c ****         #ifdef CY_BOOT_INT_DEFAULT_HANDLER_EXCEPTION_ENTRY_CALLBACK
2307:Generated_Source\PSoC5/CyLib.c ****             CyBoot_IntDefaultHandler_Exception_EntryCallback();
2308:Generated_Source\PSoC5/CyLib.c ****         #endif /* CY_BOOT_INT_DEFAULT_HANDLER_EXCEPTION_ENTRY_CALLBACK */
2309:Generated_Source\PSoC5/CyLib.c **** 
2310:Generated_Source\PSoC5/CyLib.c ****         while(1)
2311:Generated_Source\PSoC5/CyLib.c ****         {
2312:Generated_Source\PSoC5/CyLib.c ****             /***********************************************************************
2313:Generated_Source\PSoC5/CyLib.c ****             * We must not get here. If we do, a serious problem occurs, so go
2314:Generated_Source\PSoC5/CyLib.c ****             * into an infinite loop.
2315:Generated_Source\PSoC5/CyLib.c ****             ***********************************************************************/
2316:Generated_Source\PSoC5/CyLib.c ****         }
2317:Generated_Source\PSoC5/CyLib.c ****     }
2318:Generated_Source\PSoC5/CyLib.c **** 
2319:Generated_Source\PSoC5/CyLib.c **** 
2320:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2321:Generated_Source\PSoC5/CyLib.c ****     * Function Name: IntDefaultHandler
2322:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC5/CyLib.c ****     *
2324:Generated_Source\PSoC5/CyLib.c ****     *  This function is called during startup to initialize interrupt address vector
2325:Generated_Source\PSoC5/CyLib.c ****     *  registers with the address of the IntDefaultHandler().
2326:Generated_Source\PSoC5/CyLib.c ****     *
2327:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2328:Generated_Source\PSoC5/CyLib.c ****     void CyIntInitVectors(void) 
2329:Generated_Source\PSoC5/CyLib.c ****     {
2330:Generated_Source\PSoC5/CyLib.c ****         uint8 i;
2331:Generated_Source\PSoC5/CyLib.c **** 
2332:Generated_Source\PSoC5/CyLib.c ****         for (i = 0; i <= CY_INT_NUMBER_MAX; i++)
2333:Generated_Source\PSoC5/CyLib.c ****         {
2334:Generated_Source\PSoC5/CyLib.c ****             CY_SET_REG16(&CY_INT_VECT_TABLE[i], (uint16) &IntDefaultHandler);
2335:Generated_Source\PSoC5/CyLib.c ****         }
2336:Generated_Source\PSoC5/CyLib.c ****     }
2337:Generated_Source\PSoC5/CyLib.c **** 
2338:Generated_Source\PSoC5/CyLib.c **** 
2339:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2340:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntSetVector
2341:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2342:Generated_Source\PSoC5/CyLib.c ****     *
2343:Generated_Source\PSoC5/CyLib.c ****     *  Sets the interrupt vector of the specified interrupt number.
2344:Generated_Source\PSoC5/CyLib.c ****     *
2345:Generated_Source\PSoC5/CyLib.c ****     *  \param number:  Valid range [0-31].  Interrupt number
2346:Generated_Source\PSoC5/CyLib.c ****     *  \param address: Pointer to an interrupt service routine
2347:Generated_Source\PSoC5/CyLib.c ****     *
2348:Generated_Source\PSoC5/CyLib.c ****     * \return
2349:Generated_Source\PSoC5/CyLib.c ****     *  Previous interrupt vector value.
2350:Generated_Source\PSoC5/CyLib.c ****     *
2351:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2352:Generated_Source\PSoC5/CyLib.c ****     cyisraddress CyIntSetVector(uint8 number, cyisraddress address) 
2353:Generated_Source\PSoC5/CyLib.c ****     {
2354:Generated_Source\PSoC5/CyLib.c ****         cyisraddress oldIsr;
2355:Generated_Source\PSoC5/CyLib.c **** 
2356:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
2357:Generated_Source\PSoC5/CyLib.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 123


2358:Generated_Source\PSoC5/CyLib.c ****         /* Save old Interrupt service routine. */
2359:Generated_Source\PSoC5/CyLib.c ****         oldIsr = (cyisraddress) \
2360:Generated_Source\PSoC5/CyLib.c ****                     CY_GET_REG16(&CY_INT_VECT_TABLE[number & CY_INT_NUMBER_MASK]);
2361:Generated_Source\PSoC5/CyLib.c **** 
2362:Generated_Source\PSoC5/CyLib.c ****         /* Set new Interrupt service routine. */
2363:Generated_Source\PSoC5/CyLib.c ****         CY_SET_REG16(&CY_INT_VECT_TABLE[number], (uint16) address);
2364:Generated_Source\PSoC5/CyLib.c **** 
2365:Generated_Source\PSoC5/CyLib.c ****         return (oldIsr);
2366:Generated_Source\PSoC5/CyLib.c ****     }
2367:Generated_Source\PSoC5/CyLib.c **** 
2368:Generated_Source\PSoC5/CyLib.c **** 
2369:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2370:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntGetVector
2371:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2372:Generated_Source\PSoC5/CyLib.c ****     *
2373:Generated_Source\PSoC5/CyLib.c ****     *  Gets the interrupt vector of the specified interrupt number.
2374:Generated_Source\PSoC5/CyLib.c ****     *
2375:Generated_Source\PSoC5/CyLib.c ****     *  \param number: Valid range [0-31].  Interrupt number
2376:Generated_Source\PSoC5/CyLib.c ****     *
2377:Generated_Source\PSoC5/CyLib.c ****     * \return
2378:Generated_Source\PSoC5/CyLib.c ****     *  Address of the ISR in the interrupt vector table.
2379:Generated_Source\PSoC5/CyLib.c ****     *
2380:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2381:Generated_Source\PSoC5/CyLib.c ****     cyisraddress CyIntGetVector(uint8 number) 
2382:Generated_Source\PSoC5/CyLib.c ****     {
2383:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
2384:Generated_Source\PSoC5/CyLib.c **** 
2385:Generated_Source\PSoC5/CyLib.c ****         return ((cyisraddress) \
2386:Generated_Source\PSoC5/CyLib.c ****                 CY_GET_REG16(&CY_INT_VECT_TABLE[number & CY_INT_NUMBER_MASK]));
2387:Generated_Source\PSoC5/CyLib.c ****     }
2388:Generated_Source\PSoC5/CyLib.c **** 
2389:Generated_Source\PSoC5/CyLib.c **** 
2390:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2391:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntSetPriority
2392:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2393:Generated_Source\PSoC5/CyLib.c ****     *
2394:Generated_Source\PSoC5/CyLib.c ****     *  Sets the Priority of the Interrupt.
2395:Generated_Source\PSoC5/CyLib.c ****     *
2396:Generated_Source\PSoC5/CyLib.c ****     *  \param priority: Priority of the interrupt. 0 - 7, 0 being the highest.
2397:Generated_Source\PSoC5/CyLib.c ****     *  \param number:   The number of the interrupt, 0 - 31.
2398:Generated_Source\PSoC5/CyLib.c ****     *
2399:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2400:Generated_Source\PSoC5/CyLib.c ****     void CyIntSetPriority(uint8 number, uint8 priority) 
2401:Generated_Source\PSoC5/CyLib.c ****     {
2402:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(priority <= CY_INT_PRIORITY_MAX);
2403:Generated_Source\PSoC5/CyLib.c **** 
2404:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
2405:Generated_Source\PSoC5/CyLib.c **** 
2406:Generated_Source\PSoC5/CyLib.c ****         CY_INT_PRIORITY_PTR[number & CY_INT_NUMBER_MASK] =
2407:Generated_Source\PSoC5/CyLib.c ****                     (priority & CY_INT_PRIORITY_MASK) << 5;
2408:Generated_Source\PSoC5/CyLib.c ****     }
2409:Generated_Source\PSoC5/CyLib.c **** 
2410:Generated_Source\PSoC5/CyLib.c **** 
2411:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2412:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntGetPriority
2413:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2414:Generated_Source\PSoC5/CyLib.c ****     *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 124


2415:Generated_Source\PSoC5/CyLib.c ****     *  Gets the Priority of the Interrupt.
2416:Generated_Source\PSoC5/CyLib.c ****     *
2417:Generated_Source\PSoC5/CyLib.c ****     *  \param number: The number of the interrupt, 0 - 31.
2418:Generated_Source\PSoC5/CyLib.c ****     *
2419:Generated_Source\PSoC5/CyLib.c ****     * \return
2420:Generated_Source\PSoC5/CyLib.c ****     *  Priority of the interrupt. 0 - 7, 0 being the highest.
2421:Generated_Source\PSoC5/CyLib.c ****     *
2422:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2423:Generated_Source\PSoC5/CyLib.c ****     uint8 CyIntGetPriority(uint8 number) 
2424:Generated_Source\PSoC5/CyLib.c ****     {
2425:Generated_Source\PSoC5/CyLib.c ****         uint8 priority;
2426:Generated_Source\PSoC5/CyLib.c **** 
2427:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
2428:Generated_Source\PSoC5/CyLib.c **** 
2429:Generated_Source\PSoC5/CyLib.c ****         priority = CY_INT_PRIORITY_PTR[number & CY_INT_NUMBER_MASK] >> 5;
2430:Generated_Source\PSoC5/CyLib.c **** 
2431:Generated_Source\PSoC5/CyLib.c ****         return (priority);
2432:Generated_Source\PSoC5/CyLib.c ****     }
2433:Generated_Source\PSoC5/CyLib.c **** 
2434:Generated_Source\PSoC5/CyLib.c **** 
2435:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2436:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CyIntGetState
2437:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2438:Generated_Source\PSoC5/CyLib.c ****     *
2439:Generated_Source\PSoC5/CyLib.c ****     *   Gets the enable state of the specified interrupt number.
2440:Generated_Source\PSoC5/CyLib.c ****     *
2441:Generated_Source\PSoC5/CyLib.c ****     *   \param number: Valid range [0-31].  Interrupt number.
2442:Generated_Source\PSoC5/CyLib.c ****     *
2443:Generated_Source\PSoC5/CyLib.c ****     * \return
2444:Generated_Source\PSoC5/CyLib.c ****     *   Enable status: 1 if enabled, 0 if disabled
2445:Generated_Source\PSoC5/CyLib.c ****     *
2446:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2447:Generated_Source\PSoC5/CyLib.c ****     uint8 CyIntGetState(uint8 number) 
2448:Generated_Source\PSoC5/CyLib.c ****     {
2449:Generated_Source\PSoC5/CyLib.c ****         reg8 * stateReg;
2450:Generated_Source\PSoC5/CyLib.c **** 
2451:Generated_Source\PSoC5/CyLib.c ****         CYASSERT(number <= CY_INT_NUMBER_MAX);
2452:Generated_Source\PSoC5/CyLib.c **** 
2453:Generated_Source\PSoC5/CyLib.c ****         /* Get pointer to Interrupt enable register. */
2454:Generated_Source\PSoC5/CyLib.c ****         stateReg = CY_INT_ENABLE_PTR + ((number & CY_INT_NUMBER_MASK) >> 3u);
2455:Generated_Source\PSoC5/CyLib.c **** 
2456:Generated_Source\PSoC5/CyLib.c ****         /* Get state of interrupt. */
2457:Generated_Source\PSoC5/CyLib.c ****         return ((0u != (*stateReg & ((uint8)(1u << (0x07u & number))))) ? ((uint8)(1u)) : ((uint8)(
2458:Generated_Source\PSoC5/CyLib.c ****     }
2459:Generated_Source\PSoC5/CyLib.c **** 
2460:Generated_Source\PSoC5/CyLib.c **** #endif  /* (CY_PSOC5) */
2461:Generated_Source\PSoC5/CyLib.c **** 
2462:Generated_Source\PSoC5/CyLib.c **** 
2463:Generated_Source\PSoC5/CyLib.c **** #if(CYDEV_VARIABLE_VDDA == 1)
2464:Generated_Source\PSoC5/CyLib.c **** 
2465:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2466:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySetScPumps
2467:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2468:Generated_Source\PSoC5/CyLib.c ****     *
2469:Generated_Source\PSoC5/CyLib.c ****     *  If 1 is passed as a parameter:
2470:Generated_Source\PSoC5/CyLib.c ****     *   - if any of the SC blocks are used - enable pumps for the SC blocks and
2471:Generated_Source\PSoC5/CyLib.c ****     *     start boost clock.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 125


2472:Generated_Source\PSoC5/CyLib.c ****     *   - For each enabled SC block set a boost clock index and enable the boost
2473:Generated_Source\PSoC5/CyLib.c ****     *     clock.
2474:Generated_Source\PSoC5/CyLib.c ****     *
2475:Generated_Source\PSoC5/CyLib.c ****     *  If non-1 value is passed as a parameter:
2476:Generated_Source\PSoC5/CyLib.c ****     *   - If all SC blocks are not used - disable pumps for the SC blocks and
2477:Generated_Source\PSoC5/CyLib.c ****     *     stop the boost clock.
2478:Generated_Source\PSoC5/CyLib.c ****     *   - For each enabled SC block clear the boost clock index and disable the
2479:Generated_Source\PSoC5/CyLib.c ****     *     boost clock.
2480:Generated_Source\PSoC5/CyLib.c ****     *
2481:Generated_Source\PSoC5/CyLib.c ****     *  The global variable CyScPumpEnabled is updated to be equal to passed the
2482:Generated_Source\PSoC5/CyLib.c ****     *  parameter.
2483:Generated_Source\PSoC5/CyLib.c ****     *
2484:Generated_Source\PSoC5/CyLib.c ****     *   \param uint8 enable: Enable/disable SC pumps and the boost clock for the enabled
2485:Generated_Source\PSoC5/CyLib.c ****     *                 \param SC block:
2486:Generated_Source\PSoC5/CyLib.c ****     *                 1 - Enable
2487:Generated_Source\PSoC5/CyLib.c ****     *                 0 - Disable
2488:Generated_Source\PSoC5/CyLib.c ****     *
2489:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2490:Generated_Source\PSoC5/CyLib.c ****     void CySetScPumps(uint8 enable) 
2491:Generated_Source\PSoC5/CyLib.c ****     {
2492:Generated_Source\PSoC5/CyLib.c ****         if(1u == enable)
2493:Generated_Source\PSoC5/CyLib.c ****         {
2494:Generated_Source\PSoC5/CyLib.c ****             /* The SC pumps should be enabled */
2495:Generated_Source\PSoC5/CyLib.c ****             CyScPumpEnabled = 1u;
2496:Generated_Source\PSoC5/CyLib.c ****             /* Enable pumps if any of SC blocks are used */
2497:Generated_Source\PSoC5/CyLib.c ****             if(0u != (CY_LIB_ACT_CFG9_REG & CY_LIB_ACT_CFG9_SWCAPS_MASK))
2498:Generated_Source\PSoC5/CyLib.c ****             {
2499:Generated_Source\PSoC5/CyLib.c ****                 CY_LIB_SC_MISC_REG |= CY_LIB_SC_MISC_PUMP_FORCE;
2500:Generated_Source\PSoC5/CyLib.c ****                 CyScBoostClk_Start();
2501:Generated_Source\PSoC5/CyLib.c ****             }
2502:Generated_Source\PSoC5/CyLib.c ****             /* Set positive pump for each enabled SC block: set clock index and enable it */
2503:Generated_Source\PSoC5/CyLib.c ****             if(0u != (CY_LIB_ACT_CFG9_REG & CY_LIB_ACT_CFG9_SWCAP0_EN))
2504:Generated_Source\PSoC5/CyLib.c ****             {
2505:Generated_Source\PSoC5/CyLib.c ****                 CY_LIB_SC0_BST_REG = (CY_LIB_SC0_BST_REG & CY_LIB_SC_BST_CLK_INDEX_MASK) | CyScBoos
2506:Generated_Source\PSoC5/CyLib.c ****                 CY_LIB_SC0_BST_REG |= CY_LIB_SC_BST_CLK_EN;
2507:Generated_Source\PSoC5/CyLib.c ****             }
2508:Generated_Source\PSoC5/CyLib.c ****             if(0u != (CY_LIB_ACT_CFG9_REG & CY_LIB_ACT_CFG9_SWCAP1_EN))
2509:Generated_Source\PSoC5/CyLib.c ****             {
2510:Generated_Source\PSoC5/CyLib.c ****                 CY_LIB_SC1_BST_REG = (CY_LIB_SC1_BST_REG & CY_LIB_SC_BST_CLK_INDEX_MASK) | CyScBoos
2511:Generated_Source\PSoC5/CyLib.c ****                 CY_LIB_SC1_BST_REG |= CY_LIB_SC_BST_CLK_EN;
2512:Generated_Source\PSoC5/CyLib.c ****             }
2513:Generated_Source\PSoC5/CyLib.c ****             if(0u != (CY_LIB_ACT_CFG9_REG & CY_LIB_ACT_CFG9_SWCAP2_EN))
2514:Generated_Source\PSoC5/CyLib.c ****             {
2515:Generated_Source\PSoC5/CyLib.c ****                 CY_LIB_SC2_BST_REG = (CY_LIB_SC2_BST_REG & CY_LIB_SC_BST_CLK_INDEX_MASK) | CyScBoos
2516:Generated_Source\PSoC5/CyLib.c ****                 CY_LIB_SC2_BST_REG |= CY_LIB_SC_BST_CLK_EN;
2517:Generated_Source\PSoC5/CyLib.c ****             }
2518:Generated_Source\PSoC5/CyLib.c ****             if(0u != (CY_LIB_ACT_CFG9_REG & CY_LIB_ACT_CFG9_SWCAP3_EN))
2519:Generated_Source\PSoC5/CyLib.c ****             {
2520:Generated_Source\PSoC5/CyLib.c ****                 CY_LIB_SC3_BST_REG = (CY_LIB_SC3_BST_REG & CY_LIB_SC_BST_CLK_INDEX_MASK) | CyScBoos
2521:Generated_Source\PSoC5/CyLib.c ****                 CY_LIB_SC3_BST_REG |= CY_LIB_SC_BST_CLK_EN;
2522:Generated_Source\PSoC5/CyLib.c ****             }
2523:Generated_Source\PSoC5/CyLib.c ****         }
2524:Generated_Source\PSoC5/CyLib.c ****         else
2525:Generated_Source\PSoC5/CyLib.c ****         {
2526:Generated_Source\PSoC5/CyLib.c ****             /* The SC pumps should be disabled */
2527:Generated_Source\PSoC5/CyLib.c ****             CyScPumpEnabled = 0u;
2528:Generated_Source\PSoC5/CyLib.c ****             /* Disable pumps for all SC blocks and stop boost clock */
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 126


2529:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_SC_MISC_REG &= ((uint8)(~CY_LIB_SC_MISC_PUMP_FORCE));
2530:Generated_Source\PSoC5/CyLib.c ****             CyScBoostClk_Stop();
2531:Generated_Source\PSoC5/CyLib.c ****             /* Disable boost clock and clear clock index for each SC block */
2532:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_SC0_BST_REG &= ((uint8)(~CY_LIB_SC_BST_CLK_EN));
2533:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_SC0_BST_REG = CY_LIB_SC0_BST_REG & CY_LIB_SC_BST_CLK_INDEX_MASK;
2534:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_SC1_BST_REG &= ((uint8)(~CY_LIB_SC_BST_CLK_EN));
2535:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_SC1_BST_REG = CY_LIB_SC1_BST_REG & CY_LIB_SC_BST_CLK_INDEX_MASK;
2536:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_SC2_BST_REG &= ((uint8)(~CY_LIB_SC_BST_CLK_EN));
2537:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_SC2_BST_REG = CY_LIB_SC2_BST_REG & CY_LIB_SC_BST_CLK_INDEX_MASK;
2538:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_SC3_BST_REG &= ((uint8)(~CY_LIB_SC_BST_CLK_EN));
2539:Generated_Source\PSoC5/CyLib.c ****             CY_LIB_SC3_BST_REG = CY_LIB_SC3_BST_REG & CY_LIB_SC_BST_CLK_INDEX_MASK;
2540:Generated_Source\PSoC5/CyLib.c ****         }
2541:Generated_Source\PSoC5/CyLib.c ****     }
2542:Generated_Source\PSoC5/CyLib.c **** 
2543:Generated_Source\PSoC5/CyLib.c **** #endif  /* (CYDEV_VARIABLE_VDDA == 1) */
2544:Generated_Source\PSoC5/CyLib.c **** 
2545:Generated_Source\PSoC5/CyLib.c **** 
2546:Generated_Source\PSoC5/CyLib.c **** #if(CY_PSOC5)
2547:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2548:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickStart
2549:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2550:Generated_Source\PSoC5/CyLib.c ****     *
2551:Generated_Source\PSoC5/CyLib.c ****     *  Configures the SysTick timer to generate interrupt every 1 ms by call to the
2552:Generated_Source\PSoC5/CyLib.c ****     *  CySysTickInit() function and starts it by calling CySysTickEnable() function.
2553:Generated_Source\PSoC5/CyLib.c ****     *  Refer to the corresponding function description for the details.
2554:Generated_Source\PSoC5/CyLib.c **** 
2555:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
2556:Generated_Source\PSoC5/CyLib.c ****     *  Clears SysTick count flag if it was set
2557:Generated_Source\PSoC5/CyLib.c ****     *
2558:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2559:Generated_Source\PSoC5/CyLib.c ****     void CySysTickStart(void)
2560:Generated_Source\PSoC5/CyLib.c ****     {
 4578              		.loc 1 2560 0
 4579              		.cfi_startproc
 4580              		@ args = 0, pretend = 0, frame = 0
 4581              		@ frame_needed = 1, uses_anonymous_args = 0
 4582 0000 80B5     		push	{r7, lr}
 4583              		.cfi_def_cfa_offset 8
 4584              		.cfi_offset 7, -8
 4585              		.cfi_offset 14, -4
 4586 0002 00AF     		add	r7, sp, #0
 4587              		.cfi_def_cfa_register 7
2561:Generated_Source\PSoC5/CyLib.c ****         if (0u == CySysTickInitVar)
 4588              		.loc 1 2561 0
 4589 0004 054B     		ldr	r3, .L313
 4590 0006 1B68     		ldr	r3, [r3]
 4591 0008 002B     		cmp	r3, #0
 4592 000a 04D1     		bne	.L312
2562:Generated_Source\PSoC5/CyLib.c ****         {
2563:Generated_Source\PSoC5/CyLib.c ****             CySysTickInit();
 4593              		.loc 1 2563 0
 4594 000c FFF7FEFF 		bl	CySysTickInit
2564:Generated_Source\PSoC5/CyLib.c ****             CySysTickInitVar = 1u;
 4595              		.loc 1 2564 0
 4596 0010 024B     		ldr	r3, .L313
 4597 0012 0122     		movs	r2, #1
 4598 0014 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 127


 4599              	.L312:
2565:Generated_Source\PSoC5/CyLib.c ****         }
2566:Generated_Source\PSoC5/CyLib.c **** 
2567:Generated_Source\PSoC5/CyLib.c ****         CySysTickEnable();
 4600              		.loc 1 2567 0
 4601 0016 FFF7FEFF 		bl	CySysTickEnable
2568:Generated_Source\PSoC5/CyLib.c ****     }
 4602              		.loc 1 2568 0
 4603 001a 80BD     		pop	{r7, pc}
 4604              	.L314:
 4605              		.align	2
 4606              	.L313:
 4607 001c 00000000 		.word	CySysTickInitVar
 4608              		.cfi_endproc
 4609              	.LFE64:
 4610              		.size	CySysTickStart, .-CySysTickStart
 4611              		.section	.text.CySysTickInit,"ax",%progbits
 4612              		.align	2
 4613              		.global	CySysTickInit
 4614              		.thumb
 4615              		.thumb_func
 4616              		.type	CySysTickInit, %function
 4617              	CySysTickInit:
 4618              	.LFB65:
2569:Generated_Source\PSoC5/CyLib.c **** 
2570:Generated_Source\PSoC5/CyLib.c **** 
2571:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2572:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickInit
2573:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2574:Generated_Source\PSoC5/CyLib.c ****     *
2575:Generated_Source\PSoC5/CyLib.c ****     *  Initializes the callback addresses with pointers to NULL, associates the
2576:Generated_Source\PSoC5/CyLib.c ****     *  SysTick system vector with the function that is responsible for calling
2577:Generated_Source\PSoC5/CyLib.c ****     *  registered callback functions, configures SysTick timer to generate interrupt
2578:Generated_Source\PSoC5/CyLib.c ****     * every 1 ms.
2579:Generated_Source\PSoC5/CyLib.c ****     *
2580:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
2581:Generated_Source\PSoC5/CyLib.c ****     *  Clears SysTick count flag if it was set.
2582:Generated_Source\PSoC5/CyLib.c ****     *
2583:Generated_Source\PSoC5/CyLib.c ****     *  The 1 ms interrupt interval is configured based on the frequency determined
2584:Generated_Source\PSoC5/CyLib.c ****     *  by PSoC Creator at build time. If System clock frequency is changed in
2585:Generated_Source\PSoC5/CyLib.c ****     *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2586:Generated_Source\PSoC5/CyLib.c ****     *
2587:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2588:Generated_Source\PSoC5/CyLib.c ****     void CySysTickInit(void)
2589:Generated_Source\PSoC5/CyLib.c ****     {
 4619              		.loc 1 2589 0
 4620              		.cfi_startproc
 4621              		@ args = 0, pretend = 0, frame = 8
 4622              		@ frame_needed = 1, uses_anonymous_args = 0
 4623 0000 80B5     		push	{r7, lr}
 4624              		.cfi_def_cfa_offset 8
 4625              		.cfi_offset 7, -8
 4626              		.cfi_offset 14, -4
 4627 0002 82B0     		sub	sp, sp, #8
 4628              		.cfi_def_cfa_offset 16
 4629 0004 00AF     		add	r7, sp, #0
 4630              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 128


2590:Generated_Source\PSoC5/CyLib.c ****         uint32 i;
2591:Generated_Source\PSoC5/CyLib.c **** 
2592:Generated_Source\PSoC5/CyLib.c ****         for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 4631              		.loc 1 2592 0
 4632 0006 0023     		movs	r3, #0
 4633 0008 7B60     		str	r3, [r7, #4]
 4634 000a 07E0     		b	.L316
 4635              	.L317:
2593:Generated_Source\PSoC5/CyLib.c ****         {
2594:Generated_Source\PSoC5/CyLib.c ****             CySysTickCallbacks[i] = (void *) 0;
 4636              		.loc 1 2594 0 discriminator 3
 4637 000c 114A     		ldr	r2, .L318
 4638 000e 7B68     		ldr	r3, [r7, #4]
 4639 0010 0021     		movs	r1, #0
 4640 0012 42F82310 		str	r1, [r2, r3, lsl #2]
2592:Generated_Source\PSoC5/CyLib.c ****         {
 4641              		.loc 1 2592 0 discriminator 3
 4642 0016 7B68     		ldr	r3, [r7, #4]
 4643 0018 0133     		adds	r3, r3, #1
 4644 001a 7B60     		str	r3, [r7, #4]
 4645              	.L316:
2592:Generated_Source\PSoC5/CyLib.c ****         {
 4646              		.loc 1 2592 0 is_stmt 0 discriminator 1
 4647 001c 7B68     		ldr	r3, [r7, #4]
 4648 001e 042B     		cmp	r3, #4
 4649 0020 F4D9     		bls	.L317
2595:Generated_Source\PSoC5/CyLib.c ****         }
2596:Generated_Source\PSoC5/CyLib.c **** 
2597:Generated_Source\PSoC5/CyLib.c ****         (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 4650              		.loc 1 2597 0 is_stmt 1
 4651 0022 0F20     		movs	r0, #15
 4652 0024 0C49     		ldr	r1, .L318+4
 4653 0026 FFF7FEFF 		bl	CyIntSetSysVector
2598:Generated_Source\PSoC5/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
 4654              		.loc 1 2598 0
 4655 002a 0120     		movs	r0, #1
 4656 002c FFF7FEFF 		bl	CySysTickSetClockSource
2599:Generated_Source\PSoC5/CyLib.c ****         CySysTickSetReload(cydelay_freq_hz/1000u);
 4657              		.loc 1 2599 0
 4658 0030 0A4B     		ldr	r3, .L318+8
 4659 0032 1B68     		ldr	r3, [r3]
 4660 0034 0A4A     		ldr	r2, .L318+12
 4661 0036 A2FB0323 		umull	r2, r3, r2, r3
 4662 003a 9B09     		lsrs	r3, r3, #6
 4663 003c 1846     		mov	r0, r3
 4664 003e FFF7FEFF 		bl	CySysTickSetReload
2600:Generated_Source\PSoC5/CyLib.c ****         CySysTickClear();
 4665              		.loc 1 2600 0
 4666 0042 FFF7FEFF 		bl	CySysTickClear
2601:Generated_Source\PSoC5/CyLib.c ****         CyIntEnable(CY_INT_SYSTICK_IRQN);
 4667              		.loc 1 2601 0
 4668 0046 074B     		ldr	r3, .L318+16
 4669 0048 4FF40042 		mov	r2, #32768
 4670 004c 1A60     		str	r2, [r3]
2602:Generated_Source\PSoC5/CyLib.c ****     }
 4671              		.loc 1 2602 0
 4672 004e 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 129


 4673              		.cfi_def_cfa_offset 8
 4674 0050 BD46     		mov	sp, r7
 4675              		.cfi_def_cfa_register 13
 4676              		@ sp needed
 4677 0052 80BD     		pop	{r7, pc}
 4678              	.L319:
 4679              		.align	2
 4680              	.L318:
 4681 0054 00000000 		.word	CySysTickCallbacks
 4682 0058 00000000 		.word	CySysTickServiceCallbacks
 4683 005c 00000000 		.word	cydelay_freq_hz
 4684 0060 D34D6210 		.word	274877907
 4685 0064 00E100E0 		.word	-536813312
 4686              		.cfi_endproc
 4687              	.LFE65:
 4688              		.size	CySysTickInit, .-CySysTickInit
 4689              		.section	.text.CySysTickEnable,"ax",%progbits
 4690              		.align	2
 4691              		.global	CySysTickEnable
 4692              		.thumb
 4693              		.thumb_func
 4694              		.type	CySysTickEnable, %function
 4695              	CySysTickEnable:
 4696              	.LFB66:
2603:Generated_Source\PSoC5/CyLib.c **** 
2604:Generated_Source\PSoC5/CyLib.c **** 
2605:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2606:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickEnable
2607:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2608:Generated_Source\PSoC5/CyLib.c ****     *
2609:Generated_Source\PSoC5/CyLib.c ****     *  Enables the SysTick timer and its interrupt.
2610:Generated_Source\PSoC5/CyLib.c ****     *
2611:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
2612:Generated_Source\PSoC5/CyLib.c ****     *  Clears SysTick count flag if it was set
2613:Generated_Source\PSoC5/CyLib.c ****     *
2614:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2615:Generated_Source\PSoC5/CyLib.c ****     void CySysTickEnable(void)
2616:Generated_Source\PSoC5/CyLib.c ****     {
 4697              		.loc 1 2616 0
 4698              		.cfi_startproc
 4699              		@ args = 0, pretend = 0, frame = 0
 4700              		@ frame_needed = 1, uses_anonymous_args = 0
 4701 0000 80B5     		push	{r7, lr}
 4702              		.cfi_def_cfa_offset 8
 4703              		.cfi_offset 7, -8
 4704              		.cfi_offset 14, -4
 4705 0002 00AF     		add	r7, sp, #0
 4706              		.cfi_def_cfa_register 7
2617:Generated_Source\PSoC5/CyLib.c ****         CySysTickEnableInterrupt();
 4707              		.loc 1 2617 0
 4708 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2618:Generated_Source\PSoC5/CyLib.c ****         CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 4709              		.loc 1 2618 0
 4710 0008 034A     		ldr	r2, .L321
 4711 000a 034B     		ldr	r3, .L321
 4712 000c 1B68     		ldr	r3, [r3]
 4713 000e 43F00103 		orr	r3, r3, #1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 130


 4714 0012 1360     		str	r3, [r2]
2619:Generated_Source\PSoC5/CyLib.c ****     }
 4715              		.loc 1 2619 0
 4716 0014 80BD     		pop	{r7, pc}
 4717              	.L322:
 4718 0016 00BF     		.align	2
 4719              	.L321:
 4720 0018 10E000E0 		.word	-536813552
 4721              		.cfi_endproc
 4722              	.LFE66:
 4723              		.size	CySysTickEnable, .-CySysTickEnable
 4724              		.section	.text.CySysTickStop,"ax",%progbits
 4725              		.align	2
 4726              		.global	CySysTickStop
 4727              		.thumb
 4728              		.thumb_func
 4729              		.type	CySysTickStop, %function
 4730              	CySysTickStop:
 4731              	.LFB67:
2620:Generated_Source\PSoC5/CyLib.c **** 
2621:Generated_Source\PSoC5/CyLib.c **** 
2622:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2623:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickStop
2624:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2625:Generated_Source\PSoC5/CyLib.c ****     *
2626:Generated_Source\PSoC5/CyLib.c ****     *  Stops the system timer (SysTick).
2627:Generated_Source\PSoC5/CyLib.c ****     *
2628:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
2629:Generated_Source\PSoC5/CyLib.c ****     *  Clears SysTick count flag if it was set
2630:Generated_Source\PSoC5/CyLib.c ****     *
2631:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2632:Generated_Source\PSoC5/CyLib.c ****     void CySysTickStop(void)
2633:Generated_Source\PSoC5/CyLib.c ****     {
 4732              		.loc 1 2633 0
 4733              		.cfi_startproc
 4734              		@ args = 0, pretend = 0, frame = 0
 4735              		@ frame_needed = 1, uses_anonymous_args = 0
 4736              		@ link register save eliminated.
 4737 0000 80B4     		push	{r7}
 4738              		.cfi_def_cfa_offset 4
 4739              		.cfi_offset 7, -4
 4740 0002 00AF     		add	r7, sp, #0
 4741              		.cfi_def_cfa_register 7
2634:Generated_Source\PSoC5/CyLib.c ****         CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 4742              		.loc 1 2634 0
 4743 0004 044A     		ldr	r2, .L324
 4744 0006 044B     		ldr	r3, .L324
 4745 0008 1B68     		ldr	r3, [r3]
 4746 000a 23F00103 		bic	r3, r3, #1
 4747 000e 1360     		str	r3, [r2]
2635:Generated_Source\PSoC5/CyLib.c ****     }
 4748              		.loc 1 2635 0
 4749 0010 BD46     		mov	sp, r7
 4750              		.cfi_def_cfa_register 13
 4751              		@ sp needed
 4752 0012 5DF8047B 		ldr	r7, [sp], #4
 4753              		.cfi_restore 7
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 131


 4754              		.cfi_def_cfa_offset 0
 4755 0016 7047     		bx	lr
 4756              	.L325:
 4757              		.align	2
 4758              	.L324:
 4759 0018 10E000E0 		.word	-536813552
 4760              		.cfi_endproc
 4761              	.LFE67:
 4762              		.size	CySysTickStop, .-CySysTickStop
 4763              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 4764              		.align	2
 4765              		.global	CySysTickEnableInterrupt
 4766              		.thumb
 4767              		.thumb_func
 4768              		.type	CySysTickEnableInterrupt, %function
 4769              	CySysTickEnableInterrupt:
 4770              	.LFB68:
2636:Generated_Source\PSoC5/CyLib.c **** 
2637:Generated_Source\PSoC5/CyLib.c **** 
2638:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2639:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickEnableInterrupt
2640:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2641:Generated_Source\PSoC5/CyLib.c ****     *
2642:Generated_Source\PSoC5/CyLib.c ****     *  Enables the SysTick interrupt.
2643:Generated_Source\PSoC5/CyLib.c ****     *
2644:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
2645:Generated_Source\PSoC5/CyLib.c ****     *  Clears SysTick count flag if it was set
2646:Generated_Source\PSoC5/CyLib.c ****     *
2647:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2648:Generated_Source\PSoC5/CyLib.c ****     void CySysTickEnableInterrupt(void)
2649:Generated_Source\PSoC5/CyLib.c ****     {
 4771              		.loc 1 2649 0
 4772              		.cfi_startproc
 4773              		@ args = 0, pretend = 0, frame = 0
 4774              		@ frame_needed = 1, uses_anonymous_args = 0
 4775              		@ link register save eliminated.
 4776 0000 80B4     		push	{r7}
 4777              		.cfi_def_cfa_offset 4
 4778              		.cfi_offset 7, -4
 4779 0002 00AF     		add	r7, sp, #0
 4780              		.cfi_def_cfa_register 7
2650:Generated_Source\PSoC5/CyLib.c ****         CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 4781              		.loc 1 2650 0
 4782 0004 044A     		ldr	r2, .L327
 4783 0006 044B     		ldr	r3, .L327
 4784 0008 1B68     		ldr	r3, [r3]
 4785 000a 43F00203 		orr	r3, r3, #2
 4786 000e 1360     		str	r3, [r2]
2651:Generated_Source\PSoC5/CyLib.c ****     }
 4787              		.loc 1 2651 0
 4788 0010 BD46     		mov	sp, r7
 4789              		.cfi_def_cfa_register 13
 4790              		@ sp needed
 4791 0012 5DF8047B 		ldr	r7, [sp], #4
 4792              		.cfi_restore 7
 4793              		.cfi_def_cfa_offset 0
 4794 0016 7047     		bx	lr
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 132


 4795              	.L328:
 4796              		.align	2
 4797              	.L327:
 4798 0018 10E000E0 		.word	-536813552
 4799              		.cfi_endproc
 4800              	.LFE68:
 4801              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 4802              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 4803              		.align	2
 4804              		.global	CySysTickDisableInterrupt
 4805              		.thumb
 4806              		.thumb_func
 4807              		.type	CySysTickDisableInterrupt, %function
 4808              	CySysTickDisableInterrupt:
 4809              	.LFB69:
2652:Generated_Source\PSoC5/CyLib.c **** 
2653:Generated_Source\PSoC5/CyLib.c **** 
2654:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2655:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickDisableInterrupt
2656:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2657:Generated_Source\PSoC5/CyLib.c ****     *
2658:Generated_Source\PSoC5/CyLib.c ****     *  Disables the SysTick interrupt.
2659:Generated_Source\PSoC5/CyLib.c ****     *
2660:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
2661:Generated_Source\PSoC5/CyLib.c ****     *  Clears SysTick count flag if it was set
2662:Generated_Source\PSoC5/CyLib.c ****     *
2663:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2664:Generated_Source\PSoC5/CyLib.c ****     void CySysTickDisableInterrupt(void)
2665:Generated_Source\PSoC5/CyLib.c ****     {
 4810              		.loc 1 2665 0
 4811              		.cfi_startproc
 4812              		@ args = 0, pretend = 0, frame = 0
 4813              		@ frame_needed = 1, uses_anonymous_args = 0
 4814              		@ link register save eliminated.
 4815 0000 80B4     		push	{r7}
 4816              		.cfi_def_cfa_offset 4
 4817              		.cfi_offset 7, -4
 4818 0002 00AF     		add	r7, sp, #0
 4819              		.cfi_def_cfa_register 7
2666:Generated_Source\PSoC5/CyLib.c ****         CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 4820              		.loc 1 2666 0
 4821 0004 044A     		ldr	r2, .L330
 4822 0006 044B     		ldr	r3, .L330
 4823 0008 1B68     		ldr	r3, [r3]
 4824 000a 23F00203 		bic	r3, r3, #2
 4825 000e 1360     		str	r3, [r2]
2667:Generated_Source\PSoC5/CyLib.c ****     }
 4826              		.loc 1 2667 0
 4827 0010 BD46     		mov	sp, r7
 4828              		.cfi_def_cfa_register 13
 4829              		@ sp needed
 4830 0012 5DF8047B 		ldr	r7, [sp], #4
 4831              		.cfi_restore 7
 4832              		.cfi_def_cfa_offset 0
 4833 0016 7047     		bx	lr
 4834              	.L331:
 4835              		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 133


 4836              	.L330:
 4837 0018 10E000E0 		.word	-536813552
 4838              		.cfi_endproc
 4839              	.LFE69:
 4840              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 4841              		.section	.text.CySysTickSetReload,"ax",%progbits
 4842              		.align	2
 4843              		.global	CySysTickSetReload
 4844              		.thumb
 4845              		.thumb_func
 4846              		.type	CySysTickSetReload, %function
 4847              	CySysTickSetReload:
 4848              	.LFB70:
2668:Generated_Source\PSoC5/CyLib.c **** 
2669:Generated_Source\PSoC5/CyLib.c **** 
2670:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2671:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickSetReload
2672:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC5/CyLib.c ****     *
2674:Generated_Source\PSoC5/CyLib.c ****     *  Sets value the counter is set to on startup and after it reaches zero. This
2675:Generated_Source\PSoC5/CyLib.c ****     *  function do not change or reset current sysTick counter value, so it should
2676:Generated_Source\PSoC5/CyLib.c ****     *  be cleared using CySysTickClear() API.
2677:Generated_Source\PSoC5/CyLib.c ****     *
2678:Generated_Source\PSoC5/CyLib.c ****     *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value.
2679:Generated_Source\PSoC5/CyLib.c ****     *
2680:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2681:Generated_Source\PSoC5/CyLib.c ****     void CySysTickSetReload(uint32 value)
2682:Generated_Source\PSoC5/CyLib.c ****     {
 4849              		.loc 1 2682 0
 4850              		.cfi_startproc
 4851              		@ args = 0, pretend = 0, frame = 8
 4852              		@ frame_needed = 1, uses_anonymous_args = 0
 4853              		@ link register save eliminated.
 4854 0000 80B4     		push	{r7}
 4855              		.cfi_def_cfa_offset 4
 4856              		.cfi_offset 7, -4
 4857 0002 83B0     		sub	sp, sp, #12
 4858              		.cfi_def_cfa_offset 16
 4859 0004 00AF     		add	r7, sp, #0
 4860              		.cfi_def_cfa_register 7
 4861 0006 7860     		str	r0, [r7, #4]
2683:Generated_Source\PSoC5/CyLib.c ****         CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 4862              		.loc 1 2683 0
 4863 0008 044A     		ldr	r2, .L333
 4864 000a 7B68     		ldr	r3, [r7, #4]
 4865 000c 23F07F43 		bic	r3, r3, #-16777216
 4866 0010 1360     		str	r3, [r2]
2684:Generated_Source\PSoC5/CyLib.c ****     }
 4867              		.loc 1 2684 0
 4868 0012 0C37     		adds	r7, r7, #12
 4869              		.cfi_def_cfa_offset 4
 4870 0014 BD46     		mov	sp, r7
 4871              		.cfi_def_cfa_register 13
 4872              		@ sp needed
 4873 0016 5DF8047B 		ldr	r7, [sp], #4
 4874              		.cfi_restore 7
 4875              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 134


 4876 001a 7047     		bx	lr
 4877              	.L334:
 4878              		.align	2
 4879              	.L333:
 4880 001c 14E000E0 		.word	-536813548
 4881              		.cfi_endproc
 4882              	.LFE70:
 4883              		.size	CySysTickSetReload, .-CySysTickSetReload
 4884              		.section	.text.CySysTickGetReload,"ax",%progbits
 4885              		.align	2
 4886              		.global	CySysTickGetReload
 4887              		.thumb
 4888              		.thumb_func
 4889              		.type	CySysTickGetReload, %function
 4890              	CySysTickGetReload:
 4891              	.LFB71:
2685:Generated_Source\PSoC5/CyLib.c **** 
2686:Generated_Source\PSoC5/CyLib.c **** 
2687:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2688:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickGetReload
2689:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2690:Generated_Source\PSoC5/CyLib.c ****     *
2691:Generated_Source\PSoC5/CyLib.c ****     *  Sets value the counter is set to on startup and after it reaches zero.
2692:Generated_Source\PSoC5/CyLib.c ****     *
2693:Generated_Source\PSoC5/CyLib.c ****     * \return
2694:Generated_Source\PSoC5/CyLib.c ****     *  Counter reset value
2695:Generated_Source\PSoC5/CyLib.c ****     *
2696:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2697:Generated_Source\PSoC5/CyLib.c ****     uint32 CySysTickGetReload(void)
2698:Generated_Source\PSoC5/CyLib.c ****     {
 4892              		.loc 1 2698 0
 4893              		.cfi_startproc
 4894              		@ args = 0, pretend = 0, frame = 0
 4895              		@ frame_needed = 1, uses_anonymous_args = 0
 4896              		@ link register save eliminated.
 4897 0000 80B4     		push	{r7}
 4898              		.cfi_def_cfa_offset 4
 4899              		.cfi_offset 7, -4
 4900 0002 00AF     		add	r7, sp, #0
 4901              		.cfi_def_cfa_register 7
2699:Generated_Source\PSoC5/CyLib.c ****         return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 4902              		.loc 1 2699 0
 4903 0004 044B     		ldr	r3, .L337
 4904 0006 1B68     		ldr	r3, [r3]
 4905 0008 23F07F43 		bic	r3, r3, #-16777216
2700:Generated_Source\PSoC5/CyLib.c ****     }
 4906              		.loc 1 2700 0
 4907 000c 1846     		mov	r0, r3
 4908 000e BD46     		mov	sp, r7
 4909              		.cfi_def_cfa_register 13
 4910              		@ sp needed
 4911 0010 5DF8047B 		ldr	r7, [sp], #4
 4912              		.cfi_restore 7
 4913              		.cfi_def_cfa_offset 0
 4914 0014 7047     		bx	lr
 4915              	.L338:
 4916 0016 00BF     		.align	2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 135


 4917              	.L337:
 4918 0018 14E000E0 		.word	-536813548
 4919              		.cfi_endproc
 4920              	.LFE71:
 4921              		.size	CySysTickGetReload, .-CySysTickGetReload
 4922              		.section	.text.CySysTickGetValue,"ax",%progbits
 4923              		.align	2
 4924              		.global	CySysTickGetValue
 4925              		.thumb
 4926              		.thumb_func
 4927              		.type	CySysTickGetValue, %function
 4928              	CySysTickGetValue:
 4929              	.LFB72:
2701:Generated_Source\PSoC5/CyLib.c **** 
2702:Generated_Source\PSoC5/CyLib.c **** 
2703:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2704:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickGetValue
2705:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2706:Generated_Source\PSoC5/CyLib.c ****     *
2707:Generated_Source\PSoC5/CyLib.c ****     *  Gets current SysTick counter value.
2708:Generated_Source\PSoC5/CyLib.c ****     *
2709:Generated_Source\PSoC5/CyLib.c ****     * \return
2710:Generated_Source\PSoC5/CyLib.c ****     *  Current SysTick counter value
2711:Generated_Source\PSoC5/CyLib.c ****     *
2712:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2713:Generated_Source\PSoC5/CyLib.c ****     uint32 CySysTickGetValue(void)
2714:Generated_Source\PSoC5/CyLib.c ****     {
 4930              		.loc 1 2714 0
 4931              		.cfi_startproc
 4932              		@ args = 0, pretend = 0, frame = 0
 4933              		@ frame_needed = 1, uses_anonymous_args = 0
 4934              		@ link register save eliminated.
 4935 0000 80B4     		push	{r7}
 4936              		.cfi_def_cfa_offset 4
 4937              		.cfi_offset 7, -4
 4938 0002 00AF     		add	r7, sp, #0
 4939              		.cfi_def_cfa_register 7
2715:Generated_Source\PSoC5/CyLib.c ****         return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 4940              		.loc 1 2715 0
 4941 0004 044B     		ldr	r3, .L341
 4942 0006 1B68     		ldr	r3, [r3]
 4943 0008 23F07F43 		bic	r3, r3, #-16777216
2716:Generated_Source\PSoC5/CyLib.c ****     }
 4944              		.loc 1 2716 0
 4945 000c 1846     		mov	r0, r3
 4946 000e BD46     		mov	sp, r7
 4947              		.cfi_def_cfa_register 13
 4948              		@ sp needed
 4949 0010 5DF8047B 		ldr	r7, [sp], #4
 4950              		.cfi_restore 7
 4951              		.cfi_def_cfa_offset 0
 4952 0014 7047     		bx	lr
 4953              	.L342:
 4954 0016 00BF     		.align	2
 4955              	.L341:
 4956 0018 18E000E0 		.word	-536813544
 4957              		.cfi_endproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 136


 4958              	.LFE72:
 4959              		.size	CySysTickGetValue, .-CySysTickGetValue
 4960              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 4961              		.align	2
 4962              		.global	CySysTickSetClockSource
 4963              		.thumb
 4964              		.thumb_func
 4965              		.type	CySysTickSetClockSource, %function
 4966              	CySysTickSetClockSource:
 4967              	.LFB73:
2717:Generated_Source\PSoC5/CyLib.c **** 
2718:Generated_Source\PSoC5/CyLib.c **** 
2719:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2720:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickSetClockSource
2721:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2722:Generated_Source\PSoC5/CyLib.c ****     *
2723:Generated_Source\PSoC5/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2724:Generated_Source\PSoC5/CyLib.c ****     *
2725:Generated_Source\PSoC5/CyLib.c ****     *  \param clockSource: Clock source for SysTick counter
2726:Generated_Source\PSoC5/CyLib.c ****     *         Define                     Clock Source
2727:Generated_Source\PSoC5/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2728:Generated_Source\PSoC5/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2729:Generated_Source\PSoC5/CyLib.c ****     *                                      clock (ILO 100 KHz for PSoC 5LP, and
2730:Generated_Source\PSoC5/CyLib.c ****     *                                      LFCLK for PSoC 4).
2731:Generated_Source\PSoC5/CyLib.c ****     *
2732:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
2733:Generated_Source\PSoC5/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2734:Generated_Source\PSoC5/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2735:Generated_Source\PSoC5/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2736:Generated_Source\PSoC5/CyLib.c ****     *  so time to the interrupt will be significantly bigger and vice versa.
2737:Generated_Source\PSoC5/CyLib.c ****     *
2738:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2739:Generated_Source\PSoC5/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2740:Generated_Source\PSoC5/CyLib.c ****     {
 4968              		.loc 1 2740 0
 4969              		.cfi_startproc
 4970              		@ args = 0, pretend = 0, frame = 8
 4971              		@ frame_needed = 1, uses_anonymous_args = 0
 4972              		@ link register save eliminated.
 4973 0000 80B4     		push	{r7}
 4974              		.cfi_def_cfa_offset 4
 4975              		.cfi_offset 7, -4
 4976 0002 83B0     		sub	sp, sp, #12
 4977              		.cfi_def_cfa_offset 16
 4978 0004 00AF     		add	r7, sp, #0
 4979              		.cfi_def_cfa_register 7
 4980 0006 7860     		str	r0, [r7, #4]
2741:Generated_Source\PSoC5/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 4981              		.loc 1 2741 0
 4982 0008 7B68     		ldr	r3, [r7, #4]
 4983 000a 012B     		cmp	r3, #1
 4984 000c 06D1     		bne	.L344
2742:Generated_Source\PSoC5/CyLib.c ****         {
2743:Generated_Source\PSoC5/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 4985              		.loc 1 2743 0
 4986 000e 094A     		ldr	r2, .L346
 4987 0010 084B     		ldr	r3, .L346
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 137


 4988 0012 1B68     		ldr	r3, [r3]
 4989 0014 43F00403 		orr	r3, r3, #4
 4990 0018 1360     		str	r3, [r2]
 4991 001a 05E0     		b	.L343
 4992              	.L344:
2744:Generated_Source\PSoC5/CyLib.c ****         }
2745:Generated_Source\PSoC5/CyLib.c ****         else
2746:Generated_Source\PSoC5/CyLib.c ****         {
2747:Generated_Source\PSoC5/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
 4993              		.loc 1 2747 0
 4994 001c 054A     		ldr	r2, .L346
 4995 001e 054B     		ldr	r3, .L346
 4996 0020 1B68     		ldr	r3, [r3]
 4997 0022 23F00403 		bic	r3, r3, #4
 4998 0026 1360     		str	r3, [r2]
 4999              	.L343:
2748:Generated_Source\PSoC5/CyLib.c ****         }
2749:Generated_Source\PSoC5/CyLib.c ****     }
 5000              		.loc 1 2749 0
 5001 0028 0C37     		adds	r7, r7, #12
 5002              		.cfi_def_cfa_offset 4
 5003 002a BD46     		mov	sp, r7
 5004              		.cfi_def_cfa_register 13
 5005              		@ sp needed
 5006 002c 5DF8047B 		ldr	r7, [sp], #4
 5007              		.cfi_restore 7
 5008              		.cfi_def_cfa_offset 0
 5009 0030 7047     		bx	lr
 5010              	.L347:
 5011 0032 00BF     		.align	2
 5012              	.L346:
 5013 0034 10E000E0 		.word	-536813552
 5014              		.cfi_endproc
 5015              	.LFE73:
 5016              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 5017              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 5018              		.align	2
 5019              		.global	CySysTickGetClockSource
 5020              		.thumb
 5021              		.thumb_func
 5022              		.type	CySysTickGetClockSource, %function
 5023              	CySysTickGetClockSource:
 5024              	.LFB74:
2750:Generated_Source\PSoC5/CyLib.c **** 
2751:Generated_Source\PSoC5/CyLib.c ****     
2752:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2753:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickGetClockSource
2754:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2755:Generated_Source\PSoC5/CyLib.c ****     *
2756:Generated_Source\PSoC5/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2757:Generated_Source\PSoC5/CyLib.c ****     *
2758:Generated_Source\PSoC5/CyLib.c ****     *  \return 
2759:Generated_Source\PSoC5/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2760:Generated_Source\PSoC5/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2761:Generated_Source\PSoC5/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2762:Generated_Source\PSoC5/CyLib.c ****     *                                      LFCLK for PSoC 4).
2763:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 138


2764:Generated_Source\PSoC5/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2765:Generated_Source\PSoC5/CyLib.c ****     {
 5025              		.loc 1 2765 0
 5026              		.cfi_startproc
 5027              		@ args = 0, pretend = 0, frame = 0
 5028              		@ frame_needed = 1, uses_anonymous_args = 0
 5029              		@ link register save eliminated.
 5030 0000 80B4     		push	{r7}
 5031              		.cfi_def_cfa_offset 4
 5032              		.cfi_offset 7, -4
 5033 0002 00AF     		add	r7, sp, #0
 5034              		.cfi_def_cfa_register 7
2766:Generated_Source\PSoC5/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 5035              		.loc 1 2766 0
 5036 0004 044B     		ldr	r3, .L350
 5037 0006 1B68     		ldr	r3, [r3]
 5038 0008 9B08     		lsrs	r3, r3, #2
 5039 000a 03F00103 		and	r3, r3, #1
2767:Generated_Source\PSoC5/CyLib.c ****     }
 5040              		.loc 1 2767 0
 5041 000e 1846     		mov	r0, r3
 5042 0010 BD46     		mov	sp, r7
 5043              		.cfi_def_cfa_register 13
 5044              		@ sp needed
 5045 0012 5DF8047B 		ldr	r7, [sp], #4
 5046              		.cfi_restore 7
 5047              		.cfi_def_cfa_offset 0
 5048 0016 7047     		bx	lr
 5049              	.L351:
 5050              		.align	2
 5051              	.L350:
 5052 0018 10E000E0 		.word	-536813552
 5053              		.cfi_endproc
 5054              	.LFE74:
 5055              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 5056              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 5057              		.align	2
 5058              		.global	CySysTickGetCountFlag
 5059              		.thumb
 5060              		.thumb_func
 5061              		.type	CySysTickGetCountFlag, %function
 5062              	CySysTickGetCountFlag:
 5063              	.LFB75:
2768:Generated_Source\PSoC5/CyLib.c **** 
2769:Generated_Source\PSoC5/CyLib.c ****     
2770:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2771:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickGetCountFlag
2772:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2773:Generated_Source\PSoC5/CyLib.c ****     *
2774:Generated_Source\PSoC5/CyLib.c ****     *  The count flag is set once SysTick counter reaches zero.
2775:Generated_Source\PSoC5/CyLib.c ****     *   The flag cleared on read.
2776:Generated_Source\PSoC5/CyLib.c ****     *
2777:Generated_Source\PSoC5/CyLib.c ****     * \return
2778:Generated_Source\PSoC5/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2779:Generated_Source\PSoC5/CyLib.c ****     *
2780:Generated_Source\PSoC5/CyLib.c ****     *
2781:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 139


2782:Generated_Source\PSoC5/CyLib.c ****     *  Clears SysTick count flag if it was set.
2783:Generated_Source\PSoC5/CyLib.c ****     *
2784:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2785:Generated_Source\PSoC5/CyLib.c ****     uint32 CySysTickGetCountFlag(void)
2786:Generated_Source\PSoC5/CyLib.c ****     {
 5064              		.loc 1 2786 0
 5065              		.cfi_startproc
 5066              		@ args = 0, pretend = 0, frame = 0
 5067              		@ frame_needed = 1, uses_anonymous_args = 0
 5068              		@ link register save eliminated.
 5069 0000 80B4     		push	{r7}
 5070              		.cfi_def_cfa_offset 4
 5071              		.cfi_offset 7, -4
 5072 0002 00AF     		add	r7, sp, #0
 5073              		.cfi_def_cfa_register 7
2787:Generated_Source\PSoC5/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 5074              		.loc 1 2787 0
 5075 0004 044B     		ldr	r3, .L354
 5076 0006 1B68     		ldr	r3, [r3]
 5077 0008 1B0C     		lsrs	r3, r3, #16
 5078 000a 03F00103 		and	r3, r3, #1
2788:Generated_Source\PSoC5/CyLib.c ****     }
 5079              		.loc 1 2788 0
 5080 000e 1846     		mov	r0, r3
 5081 0010 BD46     		mov	sp, r7
 5082              		.cfi_def_cfa_register 13
 5083              		@ sp needed
 5084 0012 5DF8047B 		ldr	r7, [sp], #4
 5085              		.cfi_restore 7
 5086              		.cfi_def_cfa_offset 0
 5087 0016 7047     		bx	lr
 5088              	.L355:
 5089              		.align	2
 5090              	.L354:
 5091 0018 10E000E0 		.word	-536813552
 5092              		.cfi_endproc
 5093              	.LFE75:
 5094              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 5095              		.section	.text.CySysTickClear,"ax",%progbits
 5096              		.align	2
 5097              		.global	CySysTickClear
 5098              		.thumb
 5099              		.thumb_func
 5100              		.type	CySysTickClear, %function
 5101              	CySysTickClear:
 5102              	.LFB76:
2789:Generated_Source\PSoC5/CyLib.c **** 
2790:Generated_Source\PSoC5/CyLib.c **** 
2791:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2792:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickClear
2793:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2794:Generated_Source\PSoC5/CyLib.c ****     *
2795:Generated_Source\PSoC5/CyLib.c ****     *  Clears the SysTick counter for well-defined startup.
2796:Generated_Source\PSoC5/CyLib.c ****     *
2797:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2798:Generated_Source\PSoC5/CyLib.c ****     void CySysTickClear(void)
2799:Generated_Source\PSoC5/CyLib.c ****     {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 140


 5103              		.loc 1 2799 0
 5104              		.cfi_startproc
 5105              		@ args = 0, pretend = 0, frame = 0
 5106              		@ frame_needed = 1, uses_anonymous_args = 0
 5107              		@ link register save eliminated.
 5108 0000 80B4     		push	{r7}
 5109              		.cfi_def_cfa_offset 4
 5110              		.cfi_offset 7, -4
 5111 0002 00AF     		add	r7, sp, #0
 5112              		.cfi_def_cfa_register 7
2800:Generated_Source\PSoC5/CyLib.c ****         CY_SYS_SYST_CVR_REG = 0u;
 5113              		.loc 1 2800 0
 5114 0004 034B     		ldr	r3, .L357
 5115 0006 0022     		movs	r2, #0
 5116 0008 1A60     		str	r2, [r3]
2801:Generated_Source\PSoC5/CyLib.c ****     }
 5117              		.loc 1 2801 0
 5118 000a BD46     		mov	sp, r7
 5119              		.cfi_def_cfa_register 13
 5120              		@ sp needed
 5121 000c 5DF8047B 		ldr	r7, [sp], #4
 5122              		.cfi_restore 7
 5123              		.cfi_def_cfa_offset 0
 5124 0010 7047     		bx	lr
 5125              	.L358:
 5126 0012 00BF     		.align	2
 5127              	.L357:
 5128 0014 18E000E0 		.word	-536813544
 5129              		.cfi_endproc
 5130              	.LFE76:
 5131              		.size	CySysTickClear, .-CySysTickClear
 5132              		.section	.text.CySysTickSetCallback,"ax",%progbits
 5133              		.align	2
 5134              		.global	CySysTickSetCallback
 5135              		.thumb
 5136              		.thumb_func
 5137              		.type	CySysTickSetCallback, %function
 5138              	CySysTickSetCallback:
 5139              	.LFB77:
2802:Generated_Source\PSoC5/CyLib.c **** 
2803:Generated_Source\PSoC5/CyLib.c **** 
2804:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2805:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickSetCallback
2806:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2807:Generated_Source\PSoC5/CyLib.c ****     *
2808:Generated_Source\PSoC5/CyLib.c ****     *  This function allows up to five user-defined interrupt service routine
2809:Generated_Source\PSoC5/CyLib.c ****     *  functions to be associated with the SysTick interrupt. These are specified
2810:Generated_Source\PSoC5/CyLib.c ****     *  through the use of pointers to the function.
2811:Generated_Source\PSoC5/CyLib.c ****     *
2812:Generated_Source\PSoC5/CyLib.c ****     *  To set a custom callback function without the overhead of the system provided
2813:Generated_Source\PSoC5/CyLib.c ****     *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2814:Generated_Source\PSoC5/CyLib.c ****     *  where <address> is address of the custom defined interrupt service routine.
2815:Generated_Source\PSoC5/CyLib.c ****     *  Note: a custom callback function overrides the system defined callback
2816:Generated_Source\PSoC5/CyLib.c ****     *  functions.
2817:Generated_Source\PSoC5/CyLib.c ****     *
2818:Generated_Source\PSoC5/CyLib.c ****     *  \param number: The number of the callback function addresses to be set. The valid
2819:Generated_Source\PSoC5/CyLib.c ****     *          range is from 0 to 4.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 141


2820:Generated_Source\PSoC5/CyLib.c ****     *
2821:Generated_Source\PSoC5/CyLib.c ****     *  void(*CallbackFunction(void): A pointer to the function that will be
2822:Generated_Source\PSoC5/CyLib.c ****     *                                associated with the SysTick ISR for the
2823:Generated_Source\PSoC5/CyLib.c ****     *                                specified number.
2824:Generated_Source\PSoC5/CyLib.c ****     *
2825:Generated_Source\PSoC5/CyLib.c ****     * \return
2826:Generated_Source\PSoC5/CyLib.c ****     *  Returns the address of the previous callback function.
2827:Generated_Source\PSoC5/CyLib.c ****     *  The NULL is returned if the specified address in not set.
2828:Generated_Source\PSoC5/CyLib.c ****     *
2829:Generated_Source\PSoC5/CyLib.c ****     * \sideeffect
2830:Generated_Source\PSoC5/CyLib.c ****     *  The registered callback functions will be executed in the interrupt.
2831:Generated_Source\PSoC5/CyLib.c ****     *
2832:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2833:Generated_Source\PSoC5/CyLib.c ****     cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2834:Generated_Source\PSoC5/CyLib.c ****     {
 5140              		.loc 1 2834 0
 5141              		.cfi_startproc
 5142              		@ args = 0, pretend = 0, frame = 16
 5143              		@ frame_needed = 1, uses_anonymous_args = 0
 5144              		@ link register save eliminated.
 5145 0000 80B4     		push	{r7}
 5146              		.cfi_def_cfa_offset 4
 5147              		.cfi_offset 7, -4
 5148 0002 85B0     		sub	sp, sp, #20
 5149              		.cfi_def_cfa_offset 24
 5150 0004 00AF     		add	r7, sp, #0
 5151              		.cfi_def_cfa_register 7
 5152 0006 7860     		str	r0, [r7, #4]
 5153 0008 3960     		str	r1, [r7]
2835:Generated_Source\PSoC5/CyLib.c ****         cySysTickCallback retVal;
2836:Generated_Source\PSoC5/CyLib.c **** 
2837:Generated_Source\PSoC5/CyLib.c ****         retVal = CySysTickCallbacks[number];
 5154              		.loc 1 2837 0
 5155 000a 084A     		ldr	r2, .L361
 5156 000c 7B68     		ldr	r3, [r7, #4]
 5157 000e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5158 0012 FB60     		str	r3, [r7, #12]
2838:Generated_Source\PSoC5/CyLib.c ****         CySysTickCallbacks[number] = function;
 5159              		.loc 1 2838 0
 5160 0014 0549     		ldr	r1, .L361
 5161 0016 7B68     		ldr	r3, [r7, #4]
 5162 0018 3A68     		ldr	r2, [r7]
 5163 001a 41F82320 		str	r2, [r1, r3, lsl #2]
2839:Generated_Source\PSoC5/CyLib.c ****         return (retVal);
 5164              		.loc 1 2839 0
 5165 001e FB68     		ldr	r3, [r7, #12]
2840:Generated_Source\PSoC5/CyLib.c ****     }
 5166              		.loc 1 2840 0
 5167 0020 1846     		mov	r0, r3
 5168 0022 1437     		adds	r7, r7, #20
 5169              		.cfi_def_cfa_offset 4
 5170 0024 BD46     		mov	sp, r7
 5171              		.cfi_def_cfa_register 13
 5172              		@ sp needed
 5173 0026 5DF8047B 		ldr	r7, [sp], #4
 5174              		.cfi_restore 7
 5175              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 142


 5176 002a 7047     		bx	lr
 5177              	.L362:
 5178              		.align	2
 5179              	.L361:
 5180 002c 00000000 		.word	CySysTickCallbacks
 5181              		.cfi_endproc
 5182              	.LFE77:
 5183              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 5184              		.section	.text.CySysTickGetCallback,"ax",%progbits
 5185              		.align	2
 5186              		.global	CySysTickGetCallback
 5187              		.thumb
 5188              		.thumb_func
 5189              		.type	CySysTickGetCallback, %function
 5190              	CySysTickGetCallback:
 5191              	.LFB78:
2841:Generated_Source\PSoC5/CyLib.c **** 
2842:Generated_Source\PSoC5/CyLib.c **** 
2843:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2844:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickGetCallback
2845:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2846:Generated_Source\PSoC5/CyLib.c ****     *
2847:Generated_Source\PSoC5/CyLib.c ****     *  The function get the specified callback pointer.
2848:Generated_Source\PSoC5/CyLib.c ****     *
2849:Generated_Source\PSoC5/CyLib.c ****     *  \param number: The number of callback function address to get. The valid
2850:Generated_Source\PSoC5/CyLib.c ****     *          range is from 0 to 4.
2851:Generated_Source\PSoC5/CyLib.c ****     *
2852:Generated_Source\PSoC5/CyLib.c ****     * \return
2853:Generated_Source\PSoC5/CyLib.c ****     *  Returns the address of the specified callback function.
2854:Generated_Source\PSoC5/CyLib.c ****     *  The NULL is returned if the specified address in not initialized.
2855:Generated_Source\PSoC5/CyLib.c ****     *
2856:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2857:Generated_Source\PSoC5/CyLib.c ****     cySysTickCallback CySysTickGetCallback(uint32 number)
2858:Generated_Source\PSoC5/CyLib.c ****     {
 5192              		.loc 1 2858 0
 5193              		.cfi_startproc
 5194              		@ args = 0, pretend = 0, frame = 8
 5195              		@ frame_needed = 1, uses_anonymous_args = 0
 5196              		@ link register save eliminated.
 5197 0000 80B4     		push	{r7}
 5198              		.cfi_def_cfa_offset 4
 5199              		.cfi_offset 7, -4
 5200 0002 83B0     		sub	sp, sp, #12
 5201              		.cfi_def_cfa_offset 16
 5202 0004 00AF     		add	r7, sp, #0
 5203              		.cfi_def_cfa_register 7
 5204 0006 7860     		str	r0, [r7, #4]
2859:Generated_Source\PSoC5/CyLib.c ****         return ((cySysTickCallback) CySysTickCallbacks[number]);
 5205              		.loc 1 2859 0
 5206 0008 044A     		ldr	r2, .L365
 5207 000a 7B68     		ldr	r3, [r7, #4]
 5208 000c 52F82330 		ldr	r3, [r2, r3, lsl #2]
2860:Generated_Source\PSoC5/CyLib.c ****     }
 5209              		.loc 1 2860 0
 5210 0010 1846     		mov	r0, r3
 5211 0012 0C37     		adds	r7, r7, #12
 5212              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 143


 5213 0014 BD46     		mov	sp, r7
 5214              		.cfi_def_cfa_register 13
 5215              		@ sp needed
 5216 0016 5DF8047B 		ldr	r7, [sp], #4
 5217              		.cfi_restore 7
 5218              		.cfi_def_cfa_offset 0
 5219 001a 7047     		bx	lr
 5220              	.L366:
 5221              		.align	2
 5222              	.L365:
 5223 001c 00000000 		.word	CySysTickCallbacks
 5224              		.cfi_endproc
 5225              	.LFE78:
 5226              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 5227              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 5228              		.align	2
 5229              		.thumb
 5230              		.thumb_func
 5231              		.type	CySysTickServiceCallbacks, %function
 5232              	CySysTickServiceCallbacks:
 5233              	.LFB79:
2861:Generated_Source\PSoC5/CyLib.c **** 
2862:Generated_Source\PSoC5/CyLib.c **** 
2863:Generated_Source\PSoC5/CyLib.c ****     /*******************************************************************************
2864:Generated_Source\PSoC5/CyLib.c ****     * Function Name: CySysTickServiceCallbacks
2865:Generated_Source\PSoC5/CyLib.c ****     ****************************************************************************//**
2866:Generated_Source\PSoC5/CyLib.c ****     *
2867:Generated_Source\PSoC5/CyLib.c ****     *  System Tick timer interrupt routine
2868:Generated_Source\PSoC5/CyLib.c ****     *
2869:Generated_Source\PSoC5/CyLib.c ****     *******************************************************************************/
2870:Generated_Source\PSoC5/CyLib.c ****     static void CySysTickServiceCallbacks(void)
2871:Generated_Source\PSoC5/CyLib.c ****     {
 5234              		.loc 1 2871 0
 5235              		.cfi_startproc
 5236              		@ args = 0, pretend = 0, frame = 8
 5237              		@ frame_needed = 1, uses_anonymous_args = 0
 5238 0000 80B5     		push	{r7, lr}
 5239              		.cfi_def_cfa_offset 8
 5240              		.cfi_offset 7, -8
 5241              		.cfi_offset 14, -4
 5242 0002 82B0     		sub	sp, sp, #8
 5243              		.cfi_def_cfa_offset 16
 5244 0004 00AF     		add	r7, sp, #0
 5245              		.cfi_def_cfa_register 7
2872:Generated_Source\PSoC5/CyLib.c ****         uint32 i;
2873:Generated_Source\PSoC5/CyLib.c **** 
2874:Generated_Source\PSoC5/CyLib.c ****         /* Verify that tick timer flag was set */
2875:Generated_Source\PSoC5/CyLib.c ****         if (1u == CySysTickGetCountFlag())
 5246              		.loc 1 2875 0
 5247 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 5248 000a 0346     		mov	r3, r0
 5249 000c 012B     		cmp	r3, #1
 5250 000e 13D1     		bne	.L367
2876:Generated_Source\PSoC5/CyLib.c ****         {
2877:Generated_Source\PSoC5/CyLib.c ****             for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 5251              		.loc 1 2877 0
 5252 0010 0023     		movs	r3, #0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 144


 5253 0012 7B60     		str	r3, [r7, #4]
 5254 0014 0DE0     		b	.L369
 5255              	.L371:
2878:Generated_Source\PSoC5/CyLib.c ****             {
2879:Generated_Source\PSoC5/CyLib.c ****                 if (CySysTickCallbacks[i] != (void *) 0)
 5256              		.loc 1 2879 0
 5257 0016 0A4A     		ldr	r2, .L372
 5258 0018 7B68     		ldr	r3, [r7, #4]
 5259 001a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5260 001e 002B     		cmp	r3, #0
 5261 0020 04D0     		beq	.L370
2880:Generated_Source\PSoC5/CyLib.c ****                 {
2881:Generated_Source\PSoC5/CyLib.c ****                     (void)(CySysTickCallbacks[i])();
 5262              		.loc 1 2881 0
 5263 0022 074A     		ldr	r2, .L372
 5264 0024 7B68     		ldr	r3, [r7, #4]
 5265 0026 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5266 002a 9847     		blx	r3
 5267              	.L370:
2877:Generated_Source\PSoC5/CyLib.c ****             {
 5268              		.loc 1 2877 0 discriminator 2
 5269 002c 7B68     		ldr	r3, [r7, #4]
 5270 002e 0133     		adds	r3, r3, #1
 5271 0030 7B60     		str	r3, [r7, #4]
 5272              	.L369:
2877:Generated_Source\PSoC5/CyLib.c ****             {
 5273              		.loc 1 2877 0 is_stmt 0 discriminator 1
 5274 0032 7B68     		ldr	r3, [r7, #4]
 5275 0034 042B     		cmp	r3, #4
 5276 0036 EED9     		bls	.L371
 5277              	.L367:
2882:Generated_Source\PSoC5/CyLib.c ****                 }
2883:Generated_Source\PSoC5/CyLib.c ****             }
2884:Generated_Source\PSoC5/CyLib.c ****         }
2885:Generated_Source\PSoC5/CyLib.c ****     }
 5278              		.loc 1 2885 0 is_stmt 1
 5279 0038 0837     		adds	r7, r7, #8
 5280              		.cfi_def_cfa_offset 8
 5281 003a BD46     		mov	sp, r7
 5282              		.cfi_def_cfa_register 13
 5283              		@ sp needed
 5284 003c 80BD     		pop	{r7, pc}
 5285              	.L373:
 5286 003e 00BF     		.align	2
 5287              	.L372:
 5288 0040 00000000 		.word	CySysTickCallbacks
 5289              		.cfi_endproc
 5290              	.LFE79:
 5291              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 5292              		.section	.text.CyGetUniqueId,"ax",%progbits
 5293              		.align	2
 5294              		.global	CyGetUniqueId
 5295              		.thumb
 5296              		.thumb_func
 5297              		.type	CyGetUniqueId, %function
 5298              	CyGetUniqueId:
 5299              	.LFB80:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 145


2886:Generated_Source\PSoC5/CyLib.c **** #endif /* (CY_PSOC5) */
2887:Generated_Source\PSoC5/CyLib.c **** 
2888:Generated_Source\PSoC5/CyLib.c **** 
2889:Generated_Source\PSoC5/CyLib.c **** /*******************************************************************************
2890:Generated_Source\PSoC5/CyLib.c **** * Function Name: CyGetUniqueId
2891:Generated_Source\PSoC5/CyLib.c **** ****************************************************************************//**
2892:Generated_Source\PSoC5/CyLib.c **** *
2893:Generated_Source\PSoC5/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2894:Generated_Source\PSoC5/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2895:Generated_Source\PSoC5/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2896:Generated_Source\PSoC5/CyLib.c **** *  numbers is very small.
2897:Generated_Source\PSoC5/CyLib.c **** *
2898:Generated_Source\PSoC5/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2899:Generated_Source\PSoC5/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2900:Generated_Source\PSoC5/CyLib.c **** *  pointed to by uniqueId.
2901:Generated_Source\PSoC5/CyLib.c **** *
2902:Generated_Source\PSoC5/CyLib.c **** *******************************************************************************/
2903:Generated_Source\PSoC5/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2904:Generated_Source\PSoC5/CyLib.c **** {
 5300              		.loc 1 2904 0
 5301              		.cfi_startproc
 5302              		@ args = 0, pretend = 0, frame = 8
 5303              		@ frame_needed = 1, uses_anonymous_args = 0
 5304              		@ link register save eliminated.
 5305 0000 80B4     		push	{r7}
 5306              		.cfi_def_cfa_offset 4
 5307              		.cfi_offset 7, -4
 5308 0002 83B0     		sub	sp, sp, #12
 5309              		.cfi_def_cfa_offset 16
 5310 0004 00AF     		add	r7, sp, #0
 5311              		.cfi_def_cfa_register 7
 5312 0006 7860     		str	r0, [r7, #4]
2905:Generated_Source\PSoC5/CyLib.c **** #if(CY_PSOC4)
2906:Generated_Source\PSoC5/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
2907:Generated_Source\PSoC5/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2908:Generated_Source\PSoC5/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2909:Generated_Source\PSoC5/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2910:Generated_Source\PSoC5/CyLib.c **** 
2911:Generated_Source\PSoC5/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2912:Generated_Source\PSoC5/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2913:Generated_Source\PSoC5/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2914:Generated_Source\PSoC5/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2915:Generated_Source\PSoC5/CyLib.c **** #else
2916:Generated_Source\PSoC5/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
 5313              		.loc 1 2916 0
 5314 0008 264B     		ldr	r3, .L375
 5315 000a 1B78     		ldrb	r3, [r3]
 5316 000c DBB2     		uxtb	r3, r3
 5317 000e 1A46     		mov	r2, r3
 5318 0010 7B68     		ldr	r3, [r7, #4]
 5319 0012 1A60     		str	r2, [r3]
2917:Generated_Source\PSoC5/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
 5320              		.loc 1 2917 0
 5321 0014 244B     		ldr	r3, .L375+4
 5322 0016 1B78     		ldrb	r3, [r3]
 5323 0018 DBB2     		uxtb	r3, r3
 5324 001a 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 146


 5325 001c 7A68     		ldr	r2, [r7, #4]
 5326 001e 1268     		ldr	r2, [r2]
 5327 0020 1A43     		orrs	r2, r2, r3
 5328 0022 7B68     		ldr	r3, [r7, #4]
 5329 0024 1A60     		str	r2, [r3]
2918:Generated_Source\PSoC5/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
 5330              		.loc 1 2918 0
 5331 0026 214B     		ldr	r3, .L375+8
 5332 0028 1B78     		ldrb	r3, [r3]
 5333 002a DBB2     		uxtb	r3, r3
 5334 002c 1B04     		lsls	r3, r3, #16
 5335 002e 7A68     		ldr	r2, [r7, #4]
 5336 0030 1268     		ldr	r2, [r2]
 5337 0032 1A43     		orrs	r2, r2, r3
 5338 0034 7B68     		ldr	r3, [r7, #4]
 5339 0036 1A60     		str	r2, [r3]
2919:Generated_Source\PSoC5/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
 5340              		.loc 1 2919 0
 5341 0038 1D4B     		ldr	r3, .L375+12
 5342 003a 1B78     		ldrb	r3, [r3]
 5343 003c DBB2     		uxtb	r3, r3
 5344 003e 1B06     		lsls	r3, r3, #24
 5345 0040 7A68     		ldr	r2, [r7, #4]
 5346 0042 1268     		ldr	r2, [r2]
 5347 0044 1A43     		orrs	r2, r2, r3
 5348 0046 7B68     		ldr	r3, [r7, #4]
 5349 0048 1A60     		str	r2, [r3]
2920:Generated_Source\PSoC5/CyLib.c **** 
2921:Generated_Source\PSoC5/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
 5350              		.loc 1 2921 0
 5351 004a 7B68     		ldr	r3, [r7, #4]
 5352 004c 0433     		adds	r3, r3, #4
 5353 004e 194A     		ldr	r2, .L375+16
 5354 0050 1278     		ldrb	r2, [r2]
 5355 0052 D2B2     		uxtb	r2, r2
 5356 0054 1A60     		str	r2, [r3]
2922:Generated_Source\PSoC5/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
 5357              		.loc 1 2922 0
 5358 0056 184B     		ldr	r3, .L375+20
 5359 0058 1B78     		ldrb	r3, [r3]
 5360 005a DBB2     		uxtb	r3, r3
 5361 005c 1A02     		lsls	r2, r3, #8
 5362 005e 7B68     		ldr	r3, [r7, #4]
 5363 0060 0433     		adds	r3, r3, #4
 5364 0062 7968     		ldr	r1, [r7, #4]
 5365 0064 0431     		adds	r1, r1, #4
 5366 0066 0968     		ldr	r1, [r1]
 5367 0068 0A43     		orrs	r2, r2, r1
 5368 006a 1A60     		str	r2, [r3]
2923:Generated_Source\PSoC5/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
 5369              		.loc 1 2923 0
 5370 006c 134B     		ldr	r3, .L375+24
 5371 006e 1B78     		ldrb	r3, [r3]
 5372 0070 DBB2     		uxtb	r3, r3
 5373 0072 1A04     		lsls	r2, r3, #16
 5374 0074 7B68     		ldr	r3, [r7, #4]
 5375 0076 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 147


 5376 0078 7968     		ldr	r1, [r7, #4]
 5377 007a 0431     		adds	r1, r1, #4
 5378 007c 0968     		ldr	r1, [r1]
 5379 007e 0A43     		orrs	r2, r2, r1
 5380 0080 1A60     		str	r2, [r3]
2924:Generated_Source\PSoC5/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
 5381              		.loc 1 2924 0
 5382 0082 0F4B     		ldr	r3, .L375+28
 5383 0084 1B78     		ldrb	r3, [r3]
 5384 0086 DBB2     		uxtb	r3, r3
 5385 0088 1A06     		lsls	r2, r3, #24
 5386 008a 7B68     		ldr	r3, [r7, #4]
 5387 008c 0433     		adds	r3, r3, #4
 5388 008e 7968     		ldr	r1, [r7, #4]
 5389 0090 0431     		adds	r1, r1, #4
 5390 0092 0968     		ldr	r1, [r1]
 5391 0094 0A43     		orrs	r2, r2, r1
 5392 0096 1A60     		str	r2, [r3]
2925:Generated_Source\PSoC5/CyLib.c **** #endif  /* (CY_PSOC4) */
2926:Generated_Source\PSoC5/CyLib.c **** }
 5393              		.loc 1 2926 0
 5394 0098 0C37     		adds	r7, r7, #12
 5395              		.cfi_def_cfa_offset 4
 5396 009a BD46     		mov	sp, r7
 5397              		.cfi_def_cfa_register 13
 5398              		@ sp needed
 5399 009c 5DF8047B 		ldr	r7, [sp], #4
 5400              		.cfi_restore 7
 5401              		.cfi_def_cfa_offset 0
 5402 00a0 7047     		bx	lr
 5403              	.L376:
 5404 00a2 00BF     		.align	2
 5405              	.L375:
 5406 00a4 03010049 		.word	1224737027
 5407 00a8 04010049 		.word	1224737028
 5408 00ac EC460040 		.word	1073759980
 5409 00b0 02010049 		.word	1224737026
 5410 00b4 01010049 		.word	1224737025
 5411 00b8 00010049 		.word	1224737024
 5412 00bc 05010049 		.word	1224737029
 5413 00c0 06010049 		.word	1224737030
 5414              		.cfi_endproc
 5415              	.LFE80:
 5416              		.size	CyGetUniqueId, .-CyGetUniqueId
 5417              		.bss
 5418              	interruptStatus.5074:
 5419 0018 00       		.space	1
 5420 0019 000000   		.text
 5421              	.Letext0:
 5422              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 5423              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 5424              		.section	.debug_info,"",%progbits
 5425              	.Ldebug_info0:
 5426 0000 460E0000 		.4byte	0xe46
 5427 0004 0400     		.2byte	0x4
 5428 0006 00000000 		.4byte	.Ldebug_abbrev0
 5429 000a 04       		.byte	0x4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 148


 5430 000b 01       		.uleb128 0x1
 5431 000c 55050000 		.4byte	.LASF161
 5432 0010 01       		.byte	0x1
 5433 0011 78000000 		.4byte	.LASF162
 5434 0015 1E020000 		.4byte	.LASF163
 5435 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5436 001d 00000000 		.4byte	0
 5437 0021 00000000 		.4byte	.Ldebug_line0
 5438 0025 02       		.uleb128 0x2
 5439 0026 04       		.byte	0x4
 5440 0027 05       		.byte	0x5
 5441 0028 696E7400 		.ascii	"int\000"
 5442 002c 03       		.uleb128 0x3
 5443 002d 04       		.byte	0x4
 5444 002e 07       		.byte	0x7
 5445 002f EF000000 		.4byte	.LASF0
 5446 0033 03       		.uleb128 0x3
 5447 0034 01       		.byte	0x1
 5448 0035 06       		.byte	0x6
 5449 0036 5D090000 		.4byte	.LASF1
 5450 003a 03       		.uleb128 0x3
 5451 003b 01       		.byte	0x1
 5452 003c 08       		.byte	0x8
 5453 003d 8F080000 		.4byte	.LASF2
 5454 0041 03       		.uleb128 0x3
 5455 0042 02       		.byte	0x2
 5456 0043 05       		.byte	0x5
 5457 0044 43070000 		.4byte	.LASF3
 5458 0048 03       		.uleb128 0x3
 5459 0049 02       		.byte	0x2
 5460 004a 07       		.byte	0x7
 5461 004b 69090000 		.4byte	.LASF4
 5462 004f 03       		.uleb128 0x3
 5463 0050 04       		.byte	0x4
 5464 0051 05       		.byte	0x5
 5465 0052 55070000 		.4byte	.LASF5
 5466 0056 03       		.uleb128 0x3
 5467 0057 04       		.byte	0x4
 5468 0058 07       		.byte	0x7
 5469 0059 08080000 		.4byte	.LASF6
 5470 005d 03       		.uleb128 0x3
 5471 005e 08       		.byte	0x8
 5472 005f 05       		.byte	0x5
 5473 0060 D9040000 		.4byte	.LASF7
 5474 0064 03       		.uleb128 0x3
 5475 0065 08       		.byte	0x8
 5476 0066 07       		.byte	0x7
 5477 0067 D5020000 		.4byte	.LASF8
 5478 006b 03       		.uleb128 0x3
 5479 006c 04       		.byte	0x4
 5480 006d 07       		.byte	0x7
 5481 006e FF070000 		.4byte	.LASF9
 5482 0072 04       		.uleb128 0x4
 5483 0073 04       		.byte	0x4
 5484 0074 78000000 		.4byte	0x78
 5485 0078 05       		.uleb128 0x5
 5486 0079 03       		.uleb128 0x3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 149


 5487 007a 01       		.byte	0x1
 5488 007b 08       		.byte	0x8
 5489 007c 39040000 		.4byte	.LASF10
 5490 0080 06       		.uleb128 0x6
 5491 0081 BA090000 		.4byte	.LASF11
 5492 0085 02       		.byte	0x2
 5493 0086 9201     		.2byte	0x192
 5494 0088 3A000000 		.4byte	0x3a
 5495 008c 06       		.uleb128 0x6
 5496 008d 6D040000 		.4byte	.LASF12
 5497 0091 02       		.byte	0x2
 5498 0092 9301     		.2byte	0x193
 5499 0094 48000000 		.4byte	0x48
 5500 0098 06       		.uleb128 0x6
 5501 0099 15060000 		.4byte	.LASF13
 5502 009d 02       		.byte	0x2
 5503 009e 9401     		.2byte	0x194
 5504 00a0 56000000 		.4byte	0x56
 5505 00a4 03       		.uleb128 0x3
 5506 00a5 04       		.byte	0x4
 5507 00a6 04       		.byte	0x4
 5508 00a7 72020000 		.4byte	.LASF14
 5509 00ab 03       		.uleb128 0x3
 5510 00ac 08       		.byte	0x8
 5511 00ad 04       		.byte	0x4
 5512 00ae C0090000 		.4byte	.LASF15
 5513 00b2 06       		.uleb128 0x6
 5514 00b3 72080000 		.4byte	.LASF16
 5515 00b7 02       		.byte	0x2
 5516 00b8 3402     		.2byte	0x234
 5517 00ba 56000000 		.4byte	0x56
 5518 00be 06       		.uleb128 0x6
 5519 00bf 3C010000 		.4byte	.LASF17
 5520 00c3 02       		.byte	0x2
 5521 00c4 3C02     		.2byte	0x23c
 5522 00c6 CA000000 		.4byte	0xca
 5523 00ca 07       		.uleb128 0x7
 5524 00cb 80000000 		.4byte	0x80
 5525 00cf 06       		.uleb128 0x6
 5526 00d0 E7040000 		.4byte	.LASF18
 5527 00d4 02       		.byte	0x2
 5528 00d5 3D02     		.2byte	0x23d
 5529 00d7 DB000000 		.4byte	0xdb
 5530 00db 07       		.uleb128 0x7
 5531 00dc 8C000000 		.4byte	0x8c
 5532 00e0 06       		.uleb128 0x6
 5533 00e1 FF060000 		.4byte	.LASF19
 5534 00e5 02       		.byte	0x2
 5535 00e6 3E02     		.2byte	0x23e
 5536 00e8 EC000000 		.4byte	0xec
 5537 00ec 07       		.uleb128 0x7
 5538 00ed 98000000 		.4byte	0x98
 5539 00f1 06       		.uleb128 0x6
 5540 00f2 F1050000 		.4byte	.LASF20
 5541 00f6 02       		.byte	0x2
 5542 00f7 4E02     		.2byte	0x24e
 5543 00f9 72000000 		.4byte	0x72
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 150


 5544 00fd 08       		.uleb128 0x8
 5545 00fe 27040000 		.4byte	.LASF21
 5546 0102 03       		.byte	0x3
 5547 0103 AC       		.byte	0xac
 5548 0104 72000000 		.4byte	0x72
 5549 0108 09       		.uleb128 0x9
 5550 0109 54040000 		.4byte	.LASF65
 5551 010d 01       		.byte	0x1
 5552 010e 61       		.byte	0x61
 5553 010f B2000000 		.4byte	0xb2
 5554 0113 00000000 		.4byte	.LFB0
 5555 0117 B0000000 		.4byte	.LFE0-.LFB0
 5556 011b 01       		.uleb128 0x1
 5557 011c 9C       		.byte	0x9c
 5558 011d 68010000 		.4byte	0x168
 5559 0121 0A       		.uleb128 0xa
 5560 0122 92060000 		.4byte	.LASF26
 5561 0126 01       		.byte	0x1
 5562 0127 61       		.byte	0x61
 5563 0128 80000000 		.4byte	0x80
 5564 012c 02       		.uleb128 0x2
 5565 012d 91       		.byte	0x91
 5566 012e 6F       		.sleb128 -17
 5567 012f 0B       		.uleb128 0xb
 5568 0130 8D040000 		.4byte	.LASF22
 5569 0134 01       		.byte	0x1
 5570 0135 63       		.byte	0x63
 5571 0136 B2000000 		.4byte	0xb2
 5572 013a 02       		.uleb128 0x2
 5573 013b 91       		.byte	0x91
 5574 013c 74       		.sleb128 -12
 5575 013d 0B       		.uleb128 0xb
 5576 013e C7090000 		.4byte	.LASF23
 5577 0142 01       		.byte	0x1
 5578 0143 65       		.byte	0x65
 5579 0144 80000000 		.4byte	0x80
 5580 0148 02       		.uleb128 0x2
 5581 0149 91       		.byte	0x91
 5582 014a 73       		.sleb128 -13
 5583 014b 0B       		.uleb128 0xb
 5584 014c E3050000 		.4byte	.LASF24
 5585 0150 01       		.byte	0x1
 5586 0151 66       		.byte	0x66
 5587 0152 80000000 		.4byte	0x80
 5588 0156 02       		.uleb128 0x2
 5589 0157 91       		.byte	0x91
 5590 0158 72       		.sleb128 -14
 5591 0159 0B       		.uleb128 0xb
 5592 015a B6070000 		.4byte	.LASF25
 5593 015e 01       		.byte	0x1
 5594 015f 67       		.byte	0x67
 5595 0160 80000000 		.4byte	0x80
 5596 0164 02       		.uleb128 0x2
 5597 0165 91       		.byte	0x91
 5598 0166 71       		.sleb128 -15
 5599 0167 00       		.byte	0
 5600 0168 0C       		.uleb128 0xc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 151


 5601 0169 8F020000 		.4byte	.LASF37
 5602 016d 01       		.byte	0x1
 5603 016e 9A       		.byte	0x9a
 5604 016f 00000000 		.4byte	.LFB1
 5605 0173 20000000 		.4byte	.LFE1-.LFB1
 5606 0177 01       		.uleb128 0x1
 5607 0178 9C       		.byte	0x9c
 5608 0179 0D       		.uleb128 0xd
 5609 017a C6000000 		.4byte	.LASF30
 5610 017e 01       		.byte	0x1
 5611 017f BB       		.byte	0xbb
 5612 0180 00000000 		.4byte	.LFB2
 5613 0184 90000000 		.4byte	.LFE2-.LFB2
 5614 0188 01       		.uleb128 0x1
 5615 0189 9C       		.byte	0x9c
 5616 018a B9010000 		.4byte	0x1b9
 5617 018e 0A       		.uleb128 0xa
 5618 018f 90010000 		.4byte	.LASF27
 5619 0193 01       		.byte	0x1
 5620 0194 BB       		.byte	0xbb
 5621 0195 80000000 		.4byte	0x80
 5622 0199 02       		.uleb128 0x2
 5623 019a 91       		.byte	0x91
 5624 019b 77       		.sleb128 -9
 5625 019c 0A       		.uleb128 0xa
 5626 019d D8070000 		.4byte	.LASF28
 5627 01a1 01       		.byte	0x1
 5628 01a2 BB       		.byte	0xbb
 5629 01a3 80000000 		.4byte	0x80
 5630 01a7 02       		.uleb128 0x2
 5631 01a8 91       		.byte	0x91
 5632 01a9 76       		.sleb128 -10
 5633 01aa 0A       		.uleb128 0xa
 5634 01ab A2090000 		.4byte	.LASF29
 5635 01af 01       		.byte	0x1
 5636 01b0 BB       		.byte	0xbb
 5637 01b1 80000000 		.4byte	0x80
 5638 01b5 02       		.uleb128 0x2
 5639 01b6 91       		.byte	0x91
 5640 01b7 75       		.sleb128 -11
 5641 01b8 00       		.byte	0
 5642 01b9 0D       		.uleb128 0xd
 5643 01ba 1C070000 		.4byte	.LASF31
 5644 01be 01       		.byte	0x1
 5645 01bf ED       		.byte	0xed
 5646 01c0 00000000 		.4byte	.LFB3
 5647 01c4 54000000 		.4byte	.LFE3-.LFB3
 5648 01c8 01       		.uleb128 0x1
 5649 01c9 9C       		.byte	0x9c
 5650 01ca DD010000 		.4byte	0x1dd
 5651 01ce 0A       		.uleb128 0xa
 5652 01cf E3070000 		.4byte	.LASF32
 5653 01d3 01       		.byte	0x1
 5654 01d4 ED       		.byte	0xed
 5655 01d5 80000000 		.4byte	0x80
 5656 01d9 02       		.uleb128 0x2
 5657 01da 91       		.byte	0x91
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 152


 5658 01db 77       		.sleb128 -9
 5659 01dc 00       		.byte	0
 5660 01dd 0E       		.uleb128 0xe
 5661 01de 11050000 		.4byte	.LASF33
 5662 01e2 01       		.byte	0x1
 5663 01e3 1A01     		.2byte	0x11a
 5664 01e5 00000000 		.4byte	.LFB4
 5665 01e9 94000000 		.4byte	.LFE4-.LFB4
 5666 01ed 01       		.uleb128 0x1
 5667 01ee 9C       		.byte	0x9c
 5668 01ef 30020000 		.4byte	0x230
 5669 01f3 0F       		.uleb128 0xf
 5670 01f4 92060000 		.4byte	.LASF26
 5671 01f8 01       		.byte	0x1
 5672 01f9 1A01     		.2byte	0x11a
 5673 01fb 80000000 		.4byte	0x80
 5674 01ff 02       		.uleb128 0x2
 5675 0200 91       		.byte	0x91
 5676 0201 6F       		.sleb128 -17
 5677 0202 10       		.uleb128 0x10
 5678 0203 E2000000 		.4byte	.LASF34
 5679 0207 01       		.byte	0x1
 5680 0208 1C01     		.2byte	0x11c
 5681 020a 80000000 		.4byte	0x80
 5682 020e 02       		.uleb128 0x2
 5683 020f 91       		.byte	0x91
 5684 0210 75       		.sleb128 -11
 5685 0211 10       		.uleb128 0x10
 5686 0212 7C090000 		.4byte	.LASF35
 5687 0216 01       		.byte	0x1
 5688 0217 1D01     		.2byte	0x11d
 5689 0219 80000000 		.4byte	0x80
 5690 021d 02       		.uleb128 0x2
 5691 021e 91       		.byte	0x91
 5692 021f 76       		.sleb128 -10
 5693 0220 10       		.uleb128 0x10
 5694 0221 3A080000 		.4byte	.LASF36
 5695 0225 01       		.byte	0x1
 5696 0226 1E01     		.2byte	0x11e
 5697 0228 80000000 		.4byte	0x80
 5698 022c 02       		.uleb128 0x2
 5699 022d 91       		.byte	0x91
 5700 022e 77       		.sleb128 -9
 5701 022f 00       		.byte	0
 5702 0230 11       		.uleb128 0x11
 5703 0231 7F030000 		.4byte	.LASF38
 5704 0235 01       		.byte	0x1
 5705 0236 4401     		.2byte	0x144
 5706 0238 00000000 		.4byte	.LFB5
 5707 023c 34000000 		.4byte	.LFE5-.LFB5
 5708 0240 01       		.uleb128 0x1
 5709 0241 9C       		.byte	0x9c
 5710 0242 12       		.uleb128 0x12
 5711 0243 EF030000 		.4byte	.LASF164
 5712 0247 01       		.byte	0x1
 5713 0248 5501     		.2byte	0x155
 5714 024a 80000000 		.4byte	0x80
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 153


 5715 024e 00000000 		.4byte	.LFB6
 5716 0252 60000000 		.4byte	.LFE6-.LFB6
 5717 0256 01       		.uleb128 0x1
 5718 0257 9C       		.byte	0x9c
 5719 0258 6C020000 		.4byte	0x26c
 5720 025c 10       		.uleb128 0x10
 5721 025d 74040000 		.4byte	.LASF39
 5722 0261 01       		.byte	0x1
 5723 0262 5701     		.2byte	0x157
 5724 0264 80000000 		.4byte	0x80
 5725 0268 02       		.uleb128 0x2
 5726 0269 91       		.byte	0x91
 5727 026a 77       		.sleb128 -9
 5728 026b 00       		.byte	0
 5729 026c 13       		.uleb128 0x13
 5730 026d 37000000 		.4byte	.LASF51
 5731 0271 01       		.byte	0x1
 5732 0272 6F01     		.2byte	0x16f
 5733 0274 00000000 		.4byte	.LFB7
 5734 0278 08010000 		.4byte	.LFE7-.LFB7
 5735 027c 01       		.uleb128 0x1
 5736 027d 9C       		.byte	0x9c
 5737 027e A1020000 		.4byte	0x2a1
 5738 0282 0F       		.uleb128 0xf
 5739 0283 EA030000 		.4byte	.LASF40
 5740 0287 01       		.byte	0x1
 5741 0288 6F01     		.2byte	0x16f
 5742 028a 80000000 		.4byte	0x80
 5743 028e 02       		.uleb128 0x2
 5744 028f 91       		.byte	0x91
 5745 0290 6F       		.sleb128 -17
 5746 0291 10       		.uleb128 0x10
 5747 0292 11070000 		.4byte	.LASF41
 5748 0296 01       		.byte	0x1
 5749 0297 7101     		.2byte	0x171
 5750 0299 80000000 		.4byte	0x80
 5751 029d 02       		.uleb128 0x2
 5752 029e 91       		.byte	0x91
 5753 029f 77       		.sleb128 -9
 5754 02a0 00       		.byte	0
 5755 02a1 0E       		.uleb128 0xe
 5756 02a2 FC010000 		.4byte	.LASF42
 5757 02a6 01       		.byte	0x1
 5758 02a7 C901     		.2byte	0x1c9
 5759 02a9 00000000 		.4byte	.LFB8
 5760 02ad AC010000 		.4byte	.LFE8-.LFB8
 5761 02b1 01       		.uleb128 0x1
 5762 02b2 9C       		.byte	0x9c
 5763 02b3 E5020000 		.4byte	0x2e5
 5764 02b7 0F       		.uleb128 0xf
 5765 02b8 EA030000 		.4byte	.LASF40
 5766 02bc 01       		.byte	0x1
 5767 02bd C901     		.2byte	0x1c9
 5768 02bf 80000000 		.4byte	0x80
 5769 02c3 02       		.uleb128 0x2
 5770 02c4 91       		.byte	0x91
 5771 02c5 6F       		.sleb128 -17
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 154


 5772 02c6 10       		.uleb128 0x10
 5773 02c7 C3030000 		.4byte	.LASF43
 5774 02cb 01       		.byte	0x1
 5775 02cc CB01     		.2byte	0x1cb
 5776 02ce 80000000 		.4byte	0x80
 5777 02d2 02       		.uleb128 0x2
 5778 02d3 91       		.byte	0x91
 5779 02d4 77       		.sleb128 -9
 5780 02d5 10       		.uleb128 0x10
 5781 02d6 B1020000 		.4byte	.LASF44
 5782 02da 01       		.byte	0x1
 5783 02db CC01     		.2byte	0x1cc
 5784 02dd 80000000 		.4byte	0x80
 5785 02e1 02       		.uleb128 0x2
 5786 02e2 91       		.byte	0x91
 5787 02e3 76       		.sleb128 -10
 5788 02e4 00       		.byte	0
 5789 02e5 0E       		.uleb128 0xe
 5790 02e6 89090000 		.4byte	.LASF45
 5791 02ea 01       		.byte	0x1
 5792 02eb 5F02     		.2byte	0x25f
 5793 02ed 00000000 		.4byte	.LFB9
 5794 02f1 8C000000 		.4byte	.LFE9-.LFB9
 5795 02f5 01       		.uleb128 0x1
 5796 02f6 9C       		.byte	0x9c
 5797 02f7 0B030000 		.4byte	0x30b
 5798 02fb 0F       		.uleb128 0xf
 5799 02fc E3070000 		.4byte	.LASF32
 5800 0300 01       		.byte	0x1
 5801 0301 5F02     		.2byte	0x25f
 5802 0303 80000000 		.4byte	0x80
 5803 0307 02       		.uleb128 0x2
 5804 0308 91       		.byte	0x91
 5805 0309 77       		.sleb128 -9
 5806 030a 00       		.byte	0
 5807 030b 11       		.uleb128 0x11
 5808 030c 7C010000 		.4byte	.LASF46
 5809 0310 01       		.byte	0x1
 5810 0311 8102     		.2byte	0x281
 5811 0313 00000000 		.4byte	.LFB10
 5812 0317 20000000 		.4byte	.LFE10-.LFB10
 5813 031b 01       		.uleb128 0x1
 5814 031c 9C       		.byte	0x9c
 5815 031d 11       		.uleb128 0x11
 5816 031e CF060000 		.4byte	.LASF47
 5817 0322 01       		.byte	0x1
 5818 0323 8F02     		.2byte	0x28f
 5819 0325 00000000 		.4byte	.LFB11
 5820 0329 20000000 		.4byte	.LFE11-.LFB11
 5821 032d 01       		.uleb128 0x1
 5822 032e 9C       		.byte	0x9c
 5823 032f 14       		.uleb128 0x14
 5824 0330 A9060000 		.4byte	.LASF48
 5825 0334 01       		.byte	0x1
 5826 0335 AD02     		.2byte	0x2ad
 5827 0337 00000000 		.4byte	.LFB12
 5828 033b 34000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 155


 5829 033f 01       		.uleb128 0x1
 5830 0340 9C       		.byte	0x9c
 5831 0341 55030000 		.4byte	0x355
 5832 0345 0F       		.uleb128 0xf
 5833 0346 E3070000 		.4byte	.LASF32
 5834 034a 01       		.byte	0x1
 5835 034b AD02     		.2byte	0x2ad
 5836 034d 80000000 		.4byte	0x80
 5837 0351 02       		.uleb128 0x2
 5838 0352 91       		.byte	0x91
 5839 0353 77       		.sleb128 -9
 5840 0354 00       		.byte	0
 5841 0355 14       		.uleb128 0x14
 5842 0356 78020000 		.4byte	.LASF49
 5843 035a 01       		.byte	0x1
 5844 035b CB02     		.2byte	0x2cb
 5845 035d 00000000 		.4byte	.LFB13
 5846 0361 20000000 		.4byte	.LFE13-.LFB13
 5847 0365 01       		.uleb128 0x1
 5848 0366 9C       		.byte	0x9c
 5849 0367 7B030000 		.4byte	0x37b
 5850 036b 0F       		.uleb128 0xf
 5851 036c 4D070000 		.4byte	.LASF50
 5852 0370 01       		.byte	0x1
 5853 0371 CB02     		.2byte	0x2cb
 5854 0373 80000000 		.4byte	0x80
 5855 0377 02       		.uleb128 0x2
 5856 0378 91       		.byte	0x91
 5857 0379 77       		.sleb128 -9
 5858 037a 00       		.byte	0
 5859 037b 15       		.uleb128 0x15
 5860 037c 46030000 		.4byte	.LASF52
 5861 0380 01       		.byte	0x1
 5862 0381 DC02     		.2byte	0x2dc
 5863 0383 00000000 		.4byte	.LFB14
 5864 0387 78000000 		.4byte	.LFE14-.LFB14
 5865 038b 01       		.uleb128 0x1
 5866 038c 9C       		.byte	0x9c
 5867 038d A1030000 		.4byte	0x3a1
 5868 0391 0F       		.uleb128 0xf
 5869 0392 4D070000 		.4byte	.LASF50
 5870 0396 01       		.byte	0x1
 5871 0397 DC02     		.2byte	0x2dc
 5872 0399 8C000000 		.4byte	0x8c
 5873 039d 02       		.uleb128 0x2
 5874 039e 91       		.byte	0x91
 5875 039f 76       		.sleb128 -10
 5876 03a0 00       		.byte	0
 5877 03a1 0E       		.uleb128 0xe
 5878 03a2 7B080000 		.4byte	.LASF53
 5879 03a6 01       		.byte	0x1
 5880 03a7 0603     		.2byte	0x306
 5881 03a9 00000000 		.4byte	.LFB15
 5882 03ad B4000000 		.4byte	.LFE15-.LFB15
 5883 03b1 01       		.uleb128 0x1
 5884 03b2 9C       		.byte	0x9c
 5885 03b3 F4030000 		.4byte	0x3f4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 156


 5886 03b7 0F       		.uleb128 0xf
 5887 03b8 4D070000 		.4byte	.LASF50
 5888 03bc 01       		.byte	0x1
 5889 03bd 0603     		.2byte	0x306
 5890 03bf 8C000000 		.4byte	0x8c
 5891 03c3 02       		.uleb128 0x2
 5892 03c4 91       		.byte	0x91
 5893 03c5 6E       		.sleb128 -18
 5894 03c6 10       		.uleb128 0x10
 5895 03c7 FC000000 		.4byte	.LASF54
 5896 03cb 01       		.byte	0x1
 5897 03cc 0803     		.2byte	0x308
 5898 03ce 80000000 		.4byte	0x80
 5899 03d2 02       		.uleb128 0x2
 5900 03d3 91       		.byte	0x91
 5901 03d4 73       		.sleb128 -13
 5902 03d5 10       		.uleb128 0x10
 5903 03d6 B9030000 		.4byte	.LASF55
 5904 03da 01       		.byte	0x1
 5905 03db 0903     		.2byte	0x309
 5906 03dd 8C000000 		.4byte	0x8c
 5907 03e1 02       		.uleb128 0x2
 5908 03e2 91       		.byte	0x91
 5909 03e3 74       		.sleb128 -12
 5910 03e4 10       		.uleb128 0x10
 5911 03e5 2D010000 		.4byte	.LASF56
 5912 03e9 01       		.byte	0x1
 5913 03ea 0A03     		.2byte	0x30a
 5914 03ec 80000000 		.4byte	0x80
 5915 03f0 02       		.uleb128 0x2
 5916 03f1 91       		.byte	0x91
 5917 03f2 77       		.sleb128 -9
 5918 03f3 00       		.byte	0
 5919 03f4 14       		.uleb128 0x14
 5920 03f5 DF080000 		.4byte	.LASF57
 5921 03f9 01       		.byte	0x1
 5922 03fa 6003     		.2byte	0x360
 5923 03fc 00000000 		.4byte	.LFB16
 5924 0400 34000000 		.4byte	.LFE16-.LFB16
 5925 0404 01       		.uleb128 0x1
 5926 0405 9C       		.byte	0x9c
 5927 0406 1A040000 		.4byte	0x41a
 5928 040a 0F       		.uleb128 0xf
 5929 040b E3070000 		.4byte	.LASF32
 5930 040f 01       		.byte	0x1
 5931 0410 6003     		.2byte	0x360
 5932 0412 80000000 		.4byte	0x80
 5933 0416 02       		.uleb128 0x2
 5934 0417 91       		.byte	0x91
 5935 0418 77       		.sleb128 -9
 5936 0419 00       		.byte	0
 5937 041a 11       		.uleb128 0x11
 5938 041b DC030000 		.4byte	.LASF58
 5939 041f 01       		.byte	0x1
 5940 0420 7203     		.2byte	0x372
 5941 0422 00000000 		.4byte	.LFB17
 5942 0426 20000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 157


 5943 042a 01       		.uleb128 0x1
 5944 042b 9C       		.byte	0x9c
 5945 042c 11       		.uleb128 0x11
 5946 042d 59010000 		.4byte	.LASF59
 5947 0431 01       		.byte	0x1
 5948 0432 8703     		.2byte	0x387
 5949 0434 00000000 		.4byte	.LFB18
 5950 0438 20000000 		.4byte	.LFE18-.LFB18
 5951 043c 01       		.uleb128 0x1
 5952 043d 9C       		.byte	0x9c
 5953 043e 11       		.uleb128 0x11
 5954 043f BF060000 		.4byte	.LASF60
 5955 0443 01       		.byte	0x1
 5956 0444 9503     		.2byte	0x395
 5957 0446 00000000 		.4byte	.LFB19
 5958 044a 20000000 		.4byte	.LFE19-.LFB19
 5959 044e 01       		.uleb128 0x1
 5960 044f 9C       		.byte	0x9c
 5961 0450 11       		.uleb128 0x11
 5962 0451 15090000 		.4byte	.LASF61
 5963 0455 01       		.byte	0x1
 5964 0456 A203     		.2byte	0x3a2
 5965 0458 00000000 		.4byte	.LFB20
 5966 045c 20000000 		.4byte	.LFE20-.LFB20
 5967 0460 01       		.uleb128 0x1
 5968 0461 9C       		.byte	0x9c
 5969 0462 11       		.uleb128 0x11
 5970 0463 AA090000 		.4byte	.LASF62
 5971 0467 01       		.byte	0x1
 5972 0468 B203     		.2byte	0x3b2
 5973 046a 00000000 		.4byte	.LFB21
 5974 046e 20000000 		.4byte	.LFE21-.LFB21
 5975 0472 01       		.uleb128 0x1
 5976 0473 9C       		.byte	0x9c
 5977 0474 11       		.uleb128 0x11
 5978 0475 B5000000 		.4byte	.LASF63
 5979 0479 01       		.byte	0x1
 5980 047a C303     		.2byte	0x3c3
 5981 047c 00000000 		.4byte	.LFB22
 5982 0480 20000000 		.4byte	.LFE22-.LFB22
 5983 0484 01       		.uleb128 0x1
 5984 0485 9C       		.byte	0x9c
 5985 0486 14       		.uleb128 0x14
 5986 0487 C9040000 		.4byte	.LASF64
 5987 048b 01       		.byte	0x1
 5988 048c D603     		.2byte	0x3d6
 5989 048e 00000000 		.4byte	.LFB23
 5990 0492 38000000 		.4byte	.LFE23-.LFB23
 5991 0496 01       		.uleb128 0x1
 5992 0497 9C       		.byte	0x9c
 5993 0498 AC040000 		.4byte	0x4ac
 5994 049c 0F       		.uleb128 0xf
 5995 049d E3070000 		.4byte	.LASF32
 5996 04a1 01       		.byte	0x1
 5997 04a2 D603     		.2byte	0x3d6
 5998 04a4 80000000 		.4byte	0x80
 5999 04a8 02       		.uleb128 0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 158


 6000 04a9 91       		.byte	0x91
 6001 04aa 77       		.sleb128 -9
 6002 04ab 00       		.byte	0
 6003 04ac 16       		.uleb128 0x16
 6004 04ad 1D050000 		.4byte	.LASF66
 6005 04b1 01       		.byte	0x1
 6006 04b2 EB03     		.2byte	0x3eb
 6007 04b4 80000000 		.4byte	0x80
 6008 04b8 00000000 		.4byte	.LFB24
 6009 04bc 4C000000 		.4byte	.LFE24-.LFB24
 6010 04c0 01       		.uleb128 0x1
 6011 04c1 9C       		.byte	0x9c
 6012 04c2 E5040000 		.4byte	0x4e5
 6013 04c6 0F       		.uleb128 0xf
 6014 04c7 66010000 		.4byte	.LASF67
 6015 04cb 01       		.byte	0x1
 6016 04cc EB03     		.2byte	0x3eb
 6017 04ce 80000000 		.4byte	0x80
 6018 04d2 02       		.uleb128 0x2
 6019 04d3 91       		.byte	0x91
 6020 04d4 6F       		.sleb128 -17
 6021 04d5 10       		.uleb128 0x10
 6022 04d6 F2080000 		.4byte	.LASF68
 6023 04da 01       		.byte	0x1
 6024 04db ED03     		.2byte	0x3ed
 6025 04dd 80000000 		.4byte	0x80
 6026 04e1 02       		.uleb128 0x2
 6027 04e2 91       		.byte	0x91
 6028 04e3 77       		.sleb128 -9
 6029 04e4 00       		.byte	0
 6030 04e5 0E       		.uleb128 0xe
 6031 04e6 F3020000 		.4byte	.LASF69
 6032 04ea 01       		.byte	0x1
 6033 04eb 0804     		.2byte	0x408
 6034 04ed 00000000 		.4byte	.LFB25
 6035 04f1 84000000 		.4byte	.LFE25-.LFB25
 6036 04f5 01       		.uleb128 0x1
 6037 04f6 9C       		.byte	0x9c
 6038 04f7 09050000 		.4byte	0x509
 6039 04fb 17       		.uleb128 0x17
 6040 04fc 6900     		.ascii	"i\000"
 6041 04fe 01       		.byte	0x1
 6042 04ff 0A04     		.2byte	0x40a
 6043 0501 DB000000 		.4byte	0xdb
 6044 0505 02       		.uleb128 0x2
 6045 0506 91       		.byte	0x91
 6046 0507 76       		.sleb128 -10
 6047 0508 00       		.byte	0
 6048 0509 11       		.uleb128 0x11
 6049 050a 97060000 		.4byte	.LASF70
 6050 050e 01       		.byte	0x1
 6051 050f 2D04     		.2byte	0x42d
 6052 0511 00000000 		.4byte	.LFB26
 6053 0515 50000000 		.4byte	.LFE26-.LFB26
 6054 0519 01       		.uleb128 0x1
 6055 051a 9C       		.byte	0x9c
 6056 051b 18       		.uleb128 0x18
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 159


 6057 051c 57060000 		.4byte	.LASF80
 6058 0520 01       		.byte	0x1
 6059 0521 4804     		.2byte	0x448
 6060 0523 80000000 		.4byte	0x80
 6061 0527 00000000 		.4byte	.LFB27
 6062 052b 20000000 		.4byte	.LFE27-.LFB27
 6063 052f 01       		.uleb128 0x1
 6064 0530 9C       		.byte	0x9c
 6065 0531 19       		.uleb128 0x19
 6066 0532 13030000 		.4byte	.LASF71
 6067 0536 01       		.byte	0x1
 6068 0537 5E04     		.2byte	0x45e
 6069 0539 80000000 		.4byte	0x80
 6070 053d 00000000 		.4byte	.LFB28
 6071 0541 B4000000 		.4byte	.LFE28-.LFB28
 6072 0545 01       		.uleb128 0x1
 6073 0546 9C       		.byte	0x9c
 6074 0547 6A050000 		.4byte	0x56a
 6075 054b 0F       		.uleb128 0xf
 6076 054c 66010000 		.4byte	.LASF67
 6077 0550 01       		.byte	0x1
 6078 0551 5E04     		.2byte	0x45e
 6079 0553 80000000 		.4byte	0x80
 6080 0557 02       		.uleb128 0x2
 6081 0558 91       		.byte	0x91
 6082 0559 6F       		.sleb128 -17
 6083 055a 10       		.uleb128 0x10
 6084 055b F2080000 		.4byte	.LASF68
 6085 055f 01       		.byte	0x1
 6086 0560 6004     		.2byte	0x460
 6087 0562 80000000 		.4byte	0x80
 6088 0566 02       		.uleb128 0x2
 6089 0567 91       		.byte	0x91
 6090 0568 77       		.sleb128 -9
 6091 0569 00       		.byte	0
 6092 056a 19       		.uleb128 0x19
 6093 056b 06030000 		.4byte	.LASF72
 6094 056f 01       		.byte	0x1
 6095 0570 9E04     		.2byte	0x49e
 6096 0572 B2000000 		.4byte	0xb2
 6097 0576 00000000 		.4byte	.LFB29
 6098 057a D0000000 		.4byte	.LFE29-.LFB29
 6099 057e 01       		.uleb128 0x1
 6100 057f 9C       		.byte	0x9c
 6101 0580 EE050000 		.4byte	0x5ee
 6102 0584 0F       		.uleb128 0xf
 6103 0585 92060000 		.4byte	.LASF26
 6104 0589 01       		.byte	0x1
 6105 058a 9E04     		.2byte	0x49e
 6106 058c 80000000 		.4byte	0x80
 6107 0590 02       		.uleb128 0x2
 6108 0591 91       		.byte	0x91
 6109 0592 67       		.sleb128 -25
 6110 0593 10       		.uleb128 0x10
 6111 0594 8D040000 		.4byte	.LASF22
 6112 0598 01       		.byte	0x1
 6113 0599 A004     		.2byte	0x4a0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 160


 6114 059b B2000000 		.4byte	0xb2
 6115 059f 02       		.uleb128 0x2
 6116 05a0 91       		.byte	0x91
 6117 05a1 74       		.sleb128 -12
 6118 05a2 10       		.uleb128 0x10
 6119 05a3 C3080000 		.4byte	.LASF73
 6120 05a7 01       		.byte	0x1
 6121 05a8 A104     		.2byte	0x4a1
 6122 05aa CA000000 		.4byte	0xca
 6123 05ae 02       		.uleb128 0x2
 6124 05af 91       		.byte	0x91
 6125 05b0 70       		.sleb128 -16
 6126 05b1 10       		.uleb128 0x10
 6127 05b2 21040000 		.4byte	.LASF74
 6128 05b6 01       		.byte	0x1
 6129 05b7 A204     		.2byte	0x4a2
 6130 05b9 CA000000 		.4byte	0xca
 6131 05bd 02       		.uleb128 0x2
 6132 05be 91       		.byte	0x91
 6133 05bf 6F       		.sleb128 -17
 6134 05c0 10       		.uleb128 0x10
 6135 05c1 C7090000 		.4byte	.LASF23
 6136 05c5 01       		.byte	0x1
 6137 05c6 A304     		.2byte	0x4a3
 6138 05c8 80000000 		.4byte	0x80
 6139 05cc 02       		.uleb128 0x2
 6140 05cd 91       		.byte	0x91
 6141 05ce 73       		.sleb128 -13
 6142 05cf 10       		.uleb128 0x10
 6143 05d0 D6000000 		.4byte	.LASF75
 6144 05d4 01       		.byte	0x1
 6145 05d5 A404     		.2byte	0x4a4
 6146 05d7 80000000 		.4byte	0x80
 6147 05db 02       		.uleb128 0x2
 6148 05dc 91       		.byte	0x91
 6149 05dd 72       		.sleb128 -14
 6150 05de 10       		.uleb128 0x10
 6151 05df 12020000 		.4byte	.LASF76
 6152 05e3 01       		.byte	0x1
 6153 05e4 A504     		.2byte	0x4a5
 6154 05e6 80000000 		.4byte	0x80
 6155 05ea 02       		.uleb128 0x2
 6156 05eb 91       		.byte	0x91
 6157 05ec 71       		.sleb128 -15
 6158 05ed 00       		.byte	0
 6159 05ee 11       		.uleb128 0x11
 6160 05ef BD010000 		.4byte	.LASF77
 6161 05f3 01       		.byte	0x1
 6162 05f4 E704     		.2byte	0x4e7
 6163 05f6 00000000 		.4byte	.LFB30
 6164 05fa 20000000 		.4byte	.LFE30-.LFB30
 6165 05fe 01       		.uleb128 0x1
 6166 05ff 9C       		.byte	0x9c
 6167 0600 11       		.uleb128 0x11
 6168 0601 FE050000 		.4byte	.LASF78
 6169 0605 01       		.byte	0x1
 6170 0606 F604     		.2byte	0x4f6
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 161


 6171 0608 00000000 		.4byte	.LFB31
 6172 060c 20000000 		.4byte	.LFE31-.LFB31
 6173 0610 01       		.uleb128 0x1
 6174 0611 9C       		.byte	0x9c
 6175 0612 11       		.uleb128 0x11
 6176 0613 09010000 		.4byte	.LASF79
 6177 0617 01       		.byte	0x1
 6178 0618 0505     		.2byte	0x505
 6179 061a 00000000 		.4byte	.LFB32
 6180 061e 20000000 		.4byte	.LFE32-.LFB32
 6181 0622 01       		.uleb128 0x1
 6182 0623 9C       		.byte	0x9c
 6183 0624 18       		.uleb128 0x18
 6184 0625 4A000000 		.4byte	.LASF81
 6185 0629 01       		.byte	0x1
 6186 062a 1905     		.2byte	0x519
 6187 062c 80000000 		.4byte	0x80
 6188 0630 00000000 		.4byte	.LFB33
 6189 0634 28000000 		.4byte	.LFE33-.LFB33
 6190 0638 01       		.uleb128 0x1
 6191 0639 9C       		.byte	0x9c
 6192 063a 11       		.uleb128 0x11
 6193 063b 24090000 		.4byte	.LASF82
 6194 063f 01       		.byte	0x1
 6195 0640 2D05     		.2byte	0x52d
 6196 0642 00000000 		.4byte	.LFB34
 6197 0646 20000000 		.4byte	.LFE34-.LFB34
 6198 064a 01       		.uleb128 0x1
 6199 064b 9C       		.byte	0x9c
 6200 064c 11       		.uleb128 0x11
 6201 064d D6010000 		.4byte	.LASF83
 6202 0651 01       		.byte	0x1
 6203 0652 3C05     		.2byte	0x53c
 6204 0654 00000000 		.4byte	.LFB35
 6205 0658 20000000 		.4byte	.LFE35-.LFB35
 6206 065c 01       		.uleb128 0x1
 6207 065d 9C       		.byte	0x9c
 6208 065e 14       		.uleb128 0x14
 6209 065f 47010000 		.4byte	.LASF84
 6210 0663 01       		.byte	0x1
 6211 0664 5105     		.2byte	0x551
 6212 0666 00000000 		.4byte	.LFB36
 6213 066a 34000000 		.4byte	.LFE36-.LFB36
 6214 066e 01       		.uleb128 0x1
 6215 066f 9C       		.byte	0x9c
 6216 0670 84060000 		.4byte	0x684
 6217 0674 0F       		.uleb128 0xf
 6218 0675 0A020000 		.4byte	.LASF85
 6219 0679 01       		.byte	0x1
 6220 067a 5105     		.2byte	0x551
 6221 067c 80000000 		.4byte	0x80
 6222 0680 02       		.uleb128 0x2
 6223 0681 91       		.byte	0x91
 6224 0682 77       		.sleb128 -9
 6225 0683 00       		.byte	0
 6226 0684 14       		.uleb128 0x14
 6227 0685 3F090000 		.4byte	.LASF86
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 162


 6228 0689 01       		.byte	0x1
 6229 068a 6405     		.2byte	0x564
 6230 068c 00000000 		.4byte	.LFB37
 6231 0690 34000000 		.4byte	.LFE37-.LFB37
 6232 0694 01       		.uleb128 0x1
 6233 0695 9C       		.byte	0x9c
 6234 0696 AA060000 		.4byte	0x6aa
 6235 069a 0F       		.uleb128 0xf
 6236 069b 0A020000 		.4byte	.LASF85
 6237 069f 01       		.byte	0x1
 6238 06a0 6405     		.2byte	0x564
 6239 06a2 80000000 		.4byte	0x80
 6240 06a6 02       		.uleb128 0x2
 6241 06a7 91       		.byte	0x91
 6242 06a8 77       		.sleb128 -9
 6243 06a9 00       		.byte	0
 6244 06aa 14       		.uleb128 0x14
 6245 06ab FD040000 		.4byte	.LASF87
 6246 06af 01       		.byte	0x1
 6247 06b0 7605     		.2byte	0x576
 6248 06b2 00000000 		.4byte	.LFB38
 6249 06b6 38000000 		.4byte	.LFE38-.LFB38
 6250 06ba 01       		.uleb128 0x1
 6251 06bb 9C       		.byte	0x9c
 6252 06bc D0060000 		.4byte	0x6d0
 6253 06c0 0F       		.uleb128 0xf
 6254 06c1 0A020000 		.4byte	.LASF85
 6255 06c5 01       		.byte	0x1
 6256 06c6 7605     		.2byte	0x576
 6257 06c8 80000000 		.4byte	0x80
 6258 06cc 02       		.uleb128 0x2
 6259 06cd 91       		.byte	0x91
 6260 06ce 77       		.sleb128 -9
 6261 06cf 00       		.byte	0
 6262 06d0 14       		.uleb128 0x14
 6263 06d1 D8080000 		.4byte	.LASF88
 6264 06d5 01       		.byte	0x1
 6265 06d6 8605     		.2byte	0x586
 6266 06d8 00000000 		.4byte	.LFB39
 6267 06dc 16000000 		.4byte	.LFE39-.LFB39
 6268 06e0 01       		.uleb128 0x1
 6269 06e1 9C       		.byte	0x9c
 6270 06e2 F6060000 		.4byte	0x6f6
 6271 06e6 0F       		.uleb128 0xf
 6272 06e7 EC020000 		.4byte	.LASF89
 6273 06eb 01       		.byte	0x1
 6274 06ec 8605     		.2byte	0x586
 6275 06ee 80000000 		.4byte	0x80
 6276 06f2 02       		.uleb128 0x2
 6277 06f3 91       		.byte	0x91
 6278 06f4 77       		.sleb128 -9
 6279 06f5 00       		.byte	0
 6280 06f6 11       		.uleb128 0x11
 6281 06f7 62080000 		.4byte	.LASF90
 6282 06fb 01       		.byte	0x1
 6283 06fc 9E05     		.2byte	0x59e
 6284 06fe 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 163


 6285 0702 20000000 		.4byte	.LFE40-.LFB40
 6286 0706 01       		.uleb128 0x1
 6287 0707 9C       		.byte	0x9c
 6288 0708 0E       		.uleb128 0xe
 6289 0709 1E000000 		.4byte	.LASF91
 6290 070d 01       		.byte	0x1
 6291 070e B305     		.2byte	0x5b3
 6292 0710 00000000 		.4byte	.LFB41
 6293 0714 44000000 		.4byte	.LFE41-.LFB41
 6294 0718 01       		.uleb128 0x1
 6295 0719 9C       		.byte	0x9c
 6296 071a 2E070000 		.4byte	0x72e
 6297 071e 0F       		.uleb128 0xf
 6298 071f A8000000 		.4byte	.LASF92
 6299 0723 01       		.byte	0x1
 6300 0724 B305     		.2byte	0x5b3
 6301 0726 98000000 		.4byte	0x98
 6302 072a 02       		.uleb128 0x2
 6303 072b 91       		.byte	0x91
 6304 072c 74       		.sleb128 -12
 6305 072d 00       		.byte	0
 6306 072e 0E       		.uleb128 0xe
 6307 072f CB020000 		.4byte	.LASF93
 6308 0733 01       		.byte	0x1
 6309 0734 DF05     		.2byte	0x5df
 6310 0736 00000000 		.4byte	.LFB42
 6311 073a 24000000 		.4byte	.LFE42-.LFB42
 6312 073e 01       		.uleb128 0x1
 6313 073f 9C       		.byte	0x9c
 6314 0740 54070000 		.4byte	0x754
 6315 0744 0F       		.uleb128 0xf
 6316 0745 CB080000 		.4byte	.LASF94
 6317 0749 01       		.byte	0x1
 6318 074a DF05     		.2byte	0x5df
 6319 074c 8C000000 		.4byte	0x8c
 6320 0750 02       		.uleb128 0x2
 6321 0751 91       		.byte	0x91
 6322 0752 76       		.sleb128 -10
 6323 0753 00       		.byte	0
 6324 0754 14       		.uleb128 0x14
 6325 0755 5E070000 		.4byte	.LASF95
 6326 0759 01       		.byte	0x1
 6327 075a F005     		.2byte	0x5f0
 6328 075c 00000000 		.4byte	.LFB43
 6329 0760 7C000000 		.4byte	.LFE43-.LFB43
 6330 0764 01       		.uleb128 0x1
 6331 0765 9C       		.byte	0x9c
 6332 0766 7A070000 		.4byte	0x77a
 6333 076a 0F       		.uleb128 0xf
 6334 076b EA030000 		.4byte	.LASF40
 6335 076f 01       		.byte	0x1
 6336 0770 F005     		.2byte	0x5f0
 6337 0772 98000000 		.4byte	0x98
 6338 0776 02       		.uleb128 0x2
 6339 0777 91       		.byte	0x91
 6340 0778 74       		.sleb128 -12
 6341 0779 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 164


 6342 077a 14       		.uleb128 0x14
 6343 077b 87060000 		.4byte	.LASF96
 6344 077f 01       		.byte	0x1
 6345 0780 2A06     		.2byte	0x62a
 6346 0782 00000000 		.4byte	.LFB44
 6347 0786 8C000000 		.4byte	.LFE44-.LFB44
 6348 078a 01       		.uleb128 0x1
 6349 078b 9C       		.byte	0x9c
 6350 078c AF070000 		.4byte	0x7af
 6351 0790 0F       		.uleb128 0xf
 6352 0791 41010000 		.4byte	.LASF97
 6353 0795 01       		.byte	0x1
 6354 0796 2A06     		.2byte	0x62a
 6355 0798 80000000 		.4byte	0x80
 6356 079c 02       		.uleb128 0x2
 6357 079d 91       		.byte	0x91
 6358 079e 77       		.sleb128 -9
 6359 079f 0F       		.uleb128 0xf
 6360 07a0 26010000 		.4byte	.LASF98
 6361 07a4 01       		.byte	0x1
 6362 07a5 2A06     		.2byte	0x62a
 6363 07a7 80000000 		.4byte	0x80
 6364 07ab 02       		.uleb128 0x2
 6365 07ac 91       		.byte	0x91
 6366 07ad 76       		.sleb128 -10
 6367 07ae 00       		.byte	0
 6368 07af 11       		.uleb128 0x11
 6369 07b0 6D000000 		.4byte	.LASF99
 6370 07b4 01       		.byte	0x1
 6371 07b5 4306     		.2byte	0x643
 6372 07b7 00000000 		.4byte	.LFB45
 6373 07bb 18000000 		.4byte	.LFE45-.LFB45
 6374 07bf 01       		.uleb128 0x1
 6375 07c0 9C       		.byte	0x9c
 6376 07c1 0E       		.uleb128 0xe
 6377 07c2 94040000 		.4byte	.LASF100
 6378 07c6 01       		.byte	0x1
 6379 07c7 6F06     		.2byte	0x66f
 6380 07c9 00000000 		.4byte	.LFB46
 6381 07cd CC000000 		.4byte	.LFE46-.LFB46
 6382 07d1 01       		.uleb128 0x1
 6383 07d2 9C       		.byte	0x9c
 6384 07d3 14080000 		.4byte	0x814
 6385 07d7 0F       		.uleb128 0xf
 6386 07d8 DD070000 		.4byte	.LASF101
 6387 07dc 01       		.byte	0x1
 6388 07dd 6F06     		.2byte	0x66f
 6389 07df 80000000 		.4byte	0x80
 6390 07e3 02       		.uleb128 0x2
 6391 07e4 91       		.byte	0x91
 6392 07e5 6F       		.sleb128 -17
 6393 07e6 0F       		.uleb128 0xf
 6394 07e7 53090000 		.4byte	.LASF102
 6395 07eb 01       		.byte	0x1
 6396 07ec 6F06     		.2byte	0x66f
 6397 07ee 80000000 		.4byte	0x80
 6398 07f2 02       		.uleb128 0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 165


 6399 07f3 91       		.byte	0x91
 6400 07f4 6E       		.sleb128 -18
 6401 07f5 10       		.uleb128 0x10
 6402 07f6 F2010000 		.4byte	.LASF103
 6403 07fa 01       		.byte	0x1
 6404 07fb 7106     		.2byte	0x671
 6405 07fd 98000000 		.4byte	0x98
 6406 0801 02       		.uleb128 0x2
 6407 0802 91       		.byte	0x91
 6408 0803 70       		.sleb128 -16
 6409 0804 10       		.uleb128 0x10
 6410 0805 2D010000 		.4byte	.LASF56
 6411 0809 01       		.byte	0x1
 6412 080a 7206     		.2byte	0x672
 6413 080c 80000000 		.4byte	0x80
 6414 0810 02       		.uleb128 0x2
 6415 0811 91       		.byte	0x91
 6416 0812 77       		.sleb128 -9
 6417 0813 00       		.byte	0
 6418 0814 0E       		.uleb128 0xe
 6419 0815 9F030000 		.4byte	.LASF104
 6420 0819 01       		.byte	0x1
 6421 081a BF06     		.2byte	0x6bf
 6422 081c 00000000 		.4byte	.LFB47
 6423 0820 C8000000 		.4byte	.LFE47-.LFB47
 6424 0824 01       		.uleb128 0x1
 6425 0825 9C       		.byte	0x9c
 6426 0826 67080000 		.4byte	0x867
 6427 082a 0F       		.uleb128 0xf
 6428 082b DD070000 		.4byte	.LASF101
 6429 082f 01       		.byte	0x1
 6430 0830 BF06     		.2byte	0x6bf
 6431 0832 80000000 		.4byte	0x80
 6432 0836 02       		.uleb128 0x2
 6433 0837 91       		.byte	0x91
 6434 0838 6F       		.sleb128 -17
 6435 0839 0F       		.uleb128 0xf
 6436 083a 53090000 		.4byte	.LASF102
 6437 083e 01       		.byte	0x1
 6438 083f BF06     		.2byte	0x6bf
 6439 0841 80000000 		.4byte	0x80
 6440 0845 02       		.uleb128 0x2
 6441 0846 91       		.byte	0x91
 6442 0847 6E       		.sleb128 -18
 6443 0848 10       		.uleb128 0x10
 6444 0849 F2010000 		.4byte	.LASF103
 6445 084d 01       		.byte	0x1
 6446 084e C106     		.2byte	0x6c1
 6447 0850 98000000 		.4byte	0x98
 6448 0854 02       		.uleb128 0x2
 6449 0855 91       		.byte	0x91
 6450 0856 70       		.sleb128 -16
 6451 0857 10       		.uleb128 0x10
 6452 0858 2D010000 		.4byte	.LASF56
 6453 085c 01       		.byte	0x1
 6454 085d C206     		.2byte	0x6c2
 6455 085f 80000000 		.4byte	0x80
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 166


 6456 0863 02       		.uleb128 0x2
 6457 0864 91       		.byte	0x91
 6458 0865 77       		.sleb128 -9
 6459 0866 00       		.byte	0
 6460 0867 1A       		.uleb128 0x1a
 6461 0868 AA010000 		.4byte	.LASF105
 6462 086c 01       		.byte	0x1
 6463 086d F506     		.2byte	0x6f5
 6464 086f 00000000 		.4byte	.LFB48
 6465 0873 48000000 		.4byte	.LFE48-.LFB48
 6466 0877 01       		.uleb128 0x1
 6467 0878 9C       		.byte	0x9c
 6468 0879 1A       		.uleb128 0x1a
 6469 087a C4070000 		.4byte	.LASF106
 6470 087e 01       		.byte	0x1
 6471 087f 0E07     		.2byte	0x70e
 6472 0881 00000000 		.4byte	.LFB49
 6473 0885 40000000 		.4byte	.LFE49-.LFB49
 6474 0889 01       		.uleb128 0x1
 6475 088a 9C       		.byte	0x9c
 6476 088b 0E       		.uleb128 0xe
 6477 088c B6040000 		.4byte	.LASF107
 6478 0890 01       		.byte	0x1
 6479 0891 2507     		.2byte	0x725
 6480 0893 00000000 		.4byte	.LFB50
 6481 0897 78000000 		.4byte	.LFE50-.LFB50
 6482 089b 01       		.uleb128 0x1
 6483 089c 9C       		.byte	0x9c
 6484 089d C0080000 		.4byte	0x8c0
 6485 08a1 10       		.uleb128 0x10
 6486 08a2 F2010000 		.4byte	.LASF103
 6487 08a6 01       		.byte	0x1
 6488 08a7 2707     		.2byte	0x727
 6489 08a9 98000000 		.4byte	0x98
 6490 08ad 02       		.uleb128 0x2
 6491 08ae 91       		.byte	0x91
 6492 08af 70       		.sleb128 -16
 6493 08b0 10       		.uleb128 0x10
 6494 08b1 2D010000 		.4byte	.LASF56
 6495 08b5 01       		.byte	0x1
 6496 08b6 2807     		.2byte	0x728
 6497 08b8 80000000 		.4byte	0x80
 6498 08bc 02       		.uleb128 0x2
 6499 08bd 91       		.byte	0x91
 6500 08be 77       		.sleb128 -9
 6501 08bf 00       		.byte	0
 6502 08c0 1A       		.uleb128 0x1a
 6503 08c1 DC090000 		.4byte	.LASF108
 6504 08c5 01       		.byte	0x1
 6505 08c6 5107     		.2byte	0x751
 6506 08c8 00000000 		.4byte	.LFB51
 6507 08cc 2C000000 		.4byte	.LFE51-.LFB51
 6508 08d0 01       		.uleb128 0x1
 6509 08d1 9C       		.byte	0x9c
 6510 08d2 19       		.uleb128 0x19
 6511 08d3 29080000 		.4byte	.LASF109
 6512 08d7 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 167


 6513 08d8 7507     		.2byte	0x775
 6514 08da 80000000 		.4byte	0x80
 6515 08de 00000000 		.4byte	.LFB52
 6516 08e2 5C000000 		.4byte	.LFE52-.LFB52
 6517 08e6 01       		.uleb128 0x1
 6518 08e7 9C       		.byte	0x9c
 6519 08e8 2C090000 		.4byte	0x92c
 6520 08ec 0F       		.uleb128 0xf
 6521 08ed 21010000 		.4byte	.LASF110
 6522 08f1 01       		.byte	0x1
 6523 08f2 7507     		.2byte	0x775
 6524 08f4 80000000 		.4byte	0x80
 6525 08f8 02       		.uleb128 0x2
 6526 08f9 91       		.byte	0x91
 6527 08fa 6F       		.sleb128 -17
 6528 08fb 10       		.uleb128 0x10
 6529 08fc 02040000 		.4byte	.LASF111
 6530 0900 01       		.byte	0x1
 6531 0901 7707     		.2byte	0x777
 6532 0903 80000000 		.4byte	0x80
 6533 0907 05       		.uleb128 0x5
 6534 0908 03       		.byte	0x3
 6535 0909 18000000 		.4byte	interruptStatus.5074
 6536 090d 10       		.uleb128 0x10
 6537 090e 2D010000 		.4byte	.LASF56
 6538 0912 01       		.byte	0x1
 6539 0913 7807     		.2byte	0x778
 6540 0915 80000000 		.4byte	0x80
 6541 0919 02       		.uleb128 0x2
 6542 091a 91       		.byte	0x91
 6543 091b 77       		.sleb128 -9
 6544 091c 10       		.uleb128 0x10
 6545 091d 0B090000 		.4byte	.LASF112
 6546 0921 01       		.byte	0x1
 6547 0922 7907     		.2byte	0x779
 6548 0924 80000000 		.4byte	0x80
 6549 0928 02       		.uleb128 0x2
 6550 0929 91       		.byte	0x91
 6551 092a 76       		.sleb128 -10
 6552 092b 00       		.byte	0
 6553 092c 19       		.uleb128 0x19
 6554 092d F8080000 		.4byte	.LASF113
 6555 0931 01       		.byte	0x1
 6556 0932 9D07     		.2byte	0x79d
 6557 0934 80000000 		.4byte	0x80
 6558 0938 00000000 		.4byte	.LFB53
 6559 093c 30000000 		.4byte	.LFE53-.LFB53
 6560 0940 01       		.uleb128 0x1
 6561 0941 9C       		.byte	0x9c
 6562 0942 65090000 		.4byte	0x965
 6563 0946 10       		.uleb128 0x10
 6564 0947 2D010000 		.4byte	.LASF56
 6565 094b 01       		.byte	0x1
 6566 094c 9F07     		.2byte	0x79f
 6567 094e 80000000 		.4byte	0x80
 6568 0952 02       		.uleb128 0x2
 6569 0953 91       		.byte	0x91
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 168


 6570 0954 77       		.sleb128 -9
 6571 0955 10       		.uleb128 0x10
 6572 0956 CF030000 		.4byte	.LASF114
 6573 095a 01       		.byte	0x1
 6574 095b A007     		.2byte	0x7a0
 6575 095d 80000000 		.4byte	0x80
 6576 0961 02       		.uleb128 0x2
 6577 0962 91       		.byte	0x91
 6578 0963 76       		.sleb128 -10
 6579 0964 00       		.byte	0
 6580 0965 19       		.uleb128 0x19
 6581 0966 F1060000 		.4byte	.LASF115
 6582 096a 01       		.byte	0x1
 6583 096b B407     		.2byte	0x7b4
 6584 096d 98000000 		.4byte	0x98
 6585 0971 00000000 		.4byte	.LFB54
 6586 0975 34000000 		.4byte	.LFE54-.LFB54
 6587 0979 01       		.uleb128 0x1
 6588 097a 9C       		.byte	0x9c
 6589 097b 9E090000 		.4byte	0x99e
 6590 097f 10       		.uleb128 0x10
 6591 0980 64040000 		.4byte	.LASF116
 6592 0984 01       		.byte	0x1
 6593 0985 B607     		.2byte	0x7b6
 6594 0987 98000000 		.4byte	0x98
 6595 098b 02       		.uleb128 0x2
 6596 098c 91       		.byte	0x91
 6597 098d 70       		.sleb128 -16
 6598 098e 10       		.uleb128 0x10
 6599 098f 2D010000 		.4byte	.LASF56
 6600 0993 01       		.byte	0x1
 6601 0994 B707     		.2byte	0x7b7
 6602 0996 80000000 		.4byte	0x80
 6603 099a 02       		.uleb128 0x2
 6604 099b 91       		.byte	0x91
 6605 099c 77       		.sleb128 -9
 6606 099d 00       		.byte	0
 6607 099e 0E       		.uleb128 0xe
 6608 099f C9010000 		.4byte	.LASF117
 6609 09a3 01       		.byte	0x1
 6610 09a4 E307     		.2byte	0x7e3
 6611 09a6 00000000 		.4byte	.LFB55
 6612 09aa 28000000 		.4byte	.LFE55-.LFB55
 6613 09ae 01       		.uleb128 0x1
 6614 09af 9C       		.byte	0x9c
 6615 09b0 D3090000 		.4byte	0x9d3
 6616 09b4 0F       		.uleb128 0xf
 6617 09b5 21010000 		.4byte	.LASF110
 6618 09b9 01       		.byte	0x1
 6619 09ba E307     		.2byte	0x7e3
 6620 09bc 98000000 		.4byte	0x98
 6621 09c0 02       		.uleb128 0x2
 6622 09c1 91       		.byte	0x91
 6623 09c2 6C       		.sleb128 -20
 6624 09c3 10       		.uleb128 0x10
 6625 09c4 2D010000 		.4byte	.LASF56
 6626 09c8 01       		.byte	0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 169


 6627 09c9 E607     		.2byte	0x7e6
 6628 09cb 80000000 		.4byte	0x80
 6629 09cf 02       		.uleb128 0x2
 6630 09d0 91       		.byte	0x91
 6631 09d1 77       		.sleb128 -9
 6632 09d2 00       		.byte	0
 6633 09d3 0E       		.uleb128 0xe
 6634 09d4 E4060000 		.4byte	.LASF118
 6635 09d8 01       		.byte	0x1
 6636 09d9 0C08     		.2byte	0x80c
 6637 09db 00000000 		.4byte	.LFB56
 6638 09df 58000000 		.4byte	.LFE56-.LFB56
 6639 09e3 01       		.uleb128 0x1
 6640 09e4 9C       		.byte	0x9c
 6641 09e5 F9090000 		.4byte	0x9f9
 6642 09e9 10       		.uleb128 0x10
 6643 09ea 2D010000 		.4byte	.LASF56
 6644 09ee 01       		.byte	0x1
 6645 09ef 0E08     		.2byte	0x80e
 6646 09f1 80000000 		.4byte	0x80
 6647 09f5 02       		.uleb128 0x2
 6648 09f6 91       		.byte	0x91
 6649 09f7 77       		.sleb128 -9
 6650 09f8 00       		.byte	0
 6651 09f9 19       		.uleb128 0x19
 6652 09fa 73070000 		.4byte	.LASF119
 6653 09fe 01       		.byte	0x1
 6654 09ff 4B08     		.2byte	0x84b
 6655 0a01 F1000000 		.4byte	0xf1
 6656 0a05 00000000 		.4byte	.LFB57
 6657 0a09 4C000000 		.4byte	.LFE57-.LFB57
 6658 0a0d 01       		.uleb128 0x1
 6659 0a0e 9C       		.byte	0x9c
 6660 0a0f 500A0000 		.4byte	0xa50
 6661 0a13 0F       		.uleb128 0xf
 6662 0a14 EA070000 		.4byte	.LASF120
 6663 0a18 01       		.byte	0x1
 6664 0a19 4B08     		.2byte	0x84b
 6665 0a1b 80000000 		.4byte	0x80
 6666 0a1f 02       		.uleb128 0x2
 6667 0a20 91       		.byte	0x91
 6668 0a21 6F       		.sleb128 -17
 6669 0a22 0F       		.uleb128 0xf
 6670 0a23 21080000 		.4byte	.LASF121
 6671 0a27 01       		.byte	0x1
 6672 0a28 4B08     		.2byte	0x84b
 6673 0a2a F1000000 		.4byte	0xf1
 6674 0a2e 02       		.uleb128 0x2
 6675 0a2f 91       		.byte	0x91
 6676 0a30 68       		.sleb128 -24
 6677 0a31 10       		.uleb128 0x10
 6678 0a32 B2030000 		.4byte	.LASF122
 6679 0a36 01       		.byte	0x1
 6680 0a37 4D08     		.2byte	0x84d
 6681 0a39 F1000000 		.4byte	0xf1
 6682 0a3d 02       		.uleb128 0x2
 6683 0a3e 91       		.byte	0x91
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 170


 6684 0a3f 70       		.sleb128 -16
 6685 0a40 10       		.uleb128 0x10
 6686 0a41 9D080000 		.4byte	.LASF123
 6687 0a45 01       		.byte	0x1
 6688 0a46 4E08     		.2byte	0x84e
 6689 0a48 500A0000 		.4byte	0xa50
 6690 0a4c 02       		.uleb128 0x2
 6691 0a4d 91       		.byte	0x91
 6692 0a4e 74       		.sleb128 -12
 6693 0a4f 00       		.byte	0
 6694 0a50 04       		.uleb128 0x4
 6695 0a51 04       		.byte	0x4
 6696 0a52 F1000000 		.4byte	0xf1
 6697 0a56 19       		.uleb128 0x19
 6698 0a57 30050000 		.4byte	.LASF124
 6699 0a5b 01       		.byte	0x1
 6700 0a5c 7308     		.2byte	0x873
 6701 0a5e F1000000 		.4byte	0xf1
 6702 0a62 00000000 		.4byte	.LFB58
 6703 0a66 38000000 		.4byte	.LFE58-.LFB58
 6704 0a6a 01       		.uleb128 0x1
 6705 0a6b 9C       		.byte	0x9c
 6706 0a6c 8F0A0000 		.4byte	0xa8f
 6707 0a70 0F       		.uleb128 0xf
 6708 0a71 EA070000 		.4byte	.LASF120
 6709 0a75 01       		.byte	0x1
 6710 0a76 7308     		.2byte	0x873
 6711 0a78 80000000 		.4byte	0x80
 6712 0a7c 02       		.uleb128 0x2
 6713 0a7d 91       		.byte	0x91
 6714 0a7e 6F       		.sleb128 -17
 6715 0a7f 10       		.uleb128 0x10
 6716 0a80 9D080000 		.4byte	.LASF123
 6717 0a84 01       		.byte	0x1
 6718 0a85 7508     		.2byte	0x875
 6719 0a87 500A0000 		.4byte	0xa50
 6720 0a8b 02       		.uleb128 0x2
 6721 0a8c 91       		.byte	0x91
 6722 0a8d 74       		.sleb128 -12
 6723 0a8e 00       		.byte	0
 6724 0a8f 19       		.uleb128 0x19
 6725 0a90 7E040000 		.4byte	.LASF125
 6726 0a94 01       		.byte	0x1
 6727 0a95 8908     		.2byte	0x889
 6728 0a97 F1000000 		.4byte	0xf1
 6729 0a9b 00000000 		.4byte	.LFB59
 6730 0a9f 50000000 		.4byte	.LFE59-.LFB59
 6731 0aa3 01       		.uleb128 0x1
 6732 0aa4 9C       		.byte	0x9c
 6733 0aa5 E60A0000 		.4byte	0xae6
 6734 0aa9 0F       		.uleb128 0xf
 6735 0aaa EA070000 		.4byte	.LASF120
 6736 0aae 01       		.byte	0x1
 6737 0aaf 8908     		.2byte	0x889
 6738 0ab1 80000000 		.4byte	0x80
 6739 0ab5 02       		.uleb128 0x2
 6740 0ab6 91       		.byte	0x91
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 171


 6741 0ab7 6F       		.sleb128 -17
 6742 0ab8 0F       		.uleb128 0xf
 6743 0ab9 21080000 		.4byte	.LASF121
 6744 0abd 01       		.byte	0x1
 6745 0abe 8908     		.2byte	0x889
 6746 0ac0 F1000000 		.4byte	0xf1
 6747 0ac4 02       		.uleb128 0x2
 6748 0ac5 91       		.byte	0x91
 6749 0ac6 68       		.sleb128 -24
 6750 0ac7 10       		.uleb128 0x10
 6751 0ac8 B2030000 		.4byte	.LASF122
 6752 0acc 01       		.byte	0x1
 6753 0acd 8B08     		.2byte	0x88b
 6754 0acf F1000000 		.4byte	0xf1
 6755 0ad3 02       		.uleb128 0x2
 6756 0ad4 91       		.byte	0x91
 6757 0ad5 70       		.sleb128 -16
 6758 0ad6 10       		.uleb128 0x10
 6759 0ad7 9D080000 		.4byte	.LASF123
 6760 0adb 01       		.byte	0x1
 6761 0adc 8C08     		.2byte	0x88c
 6762 0ade 500A0000 		.4byte	0xa50
 6763 0ae2 02       		.uleb128 0x2
 6764 0ae3 91       		.byte	0x91
 6765 0ae4 74       		.sleb128 -12
 6766 0ae5 00       		.byte	0
 6767 0ae6 19       		.uleb128 0x19
 6768 0ae7 00000000 		.4byte	.LASF126
 6769 0aeb 01       		.byte	0x1
 6770 0aec A608     		.2byte	0x8a6
 6771 0aee F1000000 		.4byte	0xf1
 6772 0af2 00000000 		.4byte	.LFB60
 6773 0af6 38000000 		.4byte	.LFE60-.LFB60
 6774 0afa 01       		.uleb128 0x1
 6775 0afb 9C       		.byte	0x9c
 6776 0afc 1F0B0000 		.4byte	0xb1f
 6777 0b00 0F       		.uleb128 0xf
 6778 0b01 EA070000 		.4byte	.LASF120
 6779 0b05 01       		.byte	0x1
 6780 0b06 A608     		.2byte	0x8a6
 6781 0b08 80000000 		.4byte	0x80
 6782 0b0c 02       		.uleb128 0x2
 6783 0b0d 91       		.byte	0x91
 6784 0b0e 6F       		.sleb128 -17
 6785 0b0f 10       		.uleb128 0x10
 6786 0b10 9D080000 		.4byte	.LASF123
 6787 0b14 01       		.byte	0x1
 6788 0b15 A808     		.2byte	0x8a8
 6789 0b17 500A0000 		.4byte	0xa50
 6790 0b1b 02       		.uleb128 0x2
 6791 0b1c 91       		.byte	0x91
 6792 0b1d 74       		.sleb128 -12
 6793 0b1e 00       		.byte	0
 6794 0b1f 0E       		.uleb128 0xe
 6795 0b20 26000000 		.4byte	.LASF127
 6796 0b24 01       		.byte	0x1
 6797 0b25 B908     		.2byte	0x8b9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 172


 6798 0b27 00000000 		.4byte	.LFB61
 6799 0b2b 44000000 		.4byte	.LFE61-.LFB61
 6800 0b2f 01       		.uleb128 0x1
 6801 0b30 9C       		.byte	0x9c
 6802 0b31 540B0000 		.4byte	0xb54
 6803 0b35 0F       		.uleb128 0xf
 6804 0b36 EA070000 		.4byte	.LASF120
 6805 0b3a 01       		.byte	0x1
 6806 0b3b B908     		.2byte	0x8b9
 6807 0b3d 80000000 		.4byte	0x80
 6808 0b41 02       		.uleb128 0x2
 6809 0b42 91       		.byte	0x91
 6810 0b43 77       		.sleb128 -9
 6811 0b44 0F       		.uleb128 0xf
 6812 0b45 85070000 		.4byte	.LASF128
 6813 0b49 01       		.byte	0x1
 6814 0b4a B908     		.2byte	0x8b9
 6815 0b4c 80000000 		.4byte	0x80
 6816 0b50 02       		.uleb128 0x2
 6817 0b51 91       		.byte	0x91
 6818 0b52 76       		.sleb128 -10
 6819 0b53 00       		.byte	0
 6820 0b54 19       		.uleb128 0x19
 6821 0b55 5C000000 		.4byte	.LASF129
 6822 0b59 01       		.byte	0x1
 6823 0b5a CD08     		.2byte	0x8cd
 6824 0b5c 80000000 		.4byte	0x80
 6825 0b60 00000000 		.4byte	.LFB62
 6826 0b64 36000000 		.4byte	.LFE62-.LFB62
 6827 0b68 01       		.uleb128 0x1
 6828 0b69 9C       		.byte	0x9c
 6829 0b6a 8D0B0000 		.4byte	0xb8d
 6830 0b6e 0F       		.uleb128 0xf
 6831 0b6f EA070000 		.4byte	.LASF120
 6832 0b73 01       		.byte	0x1
 6833 0b74 CD08     		.2byte	0x8cd
 6834 0b76 80000000 		.4byte	0x80
 6835 0b7a 02       		.uleb128 0x2
 6836 0b7b 91       		.byte	0x91
 6837 0b7c 6F       		.sleb128 -17
 6838 0b7d 10       		.uleb128 0x10
 6839 0b7e 85070000 		.4byte	.LASF128
 6840 0b82 01       		.byte	0x1
 6841 0b83 CF08     		.2byte	0x8cf
 6842 0b85 80000000 		.4byte	0x80
 6843 0b89 02       		.uleb128 0x2
 6844 0b8a 91       		.byte	0x91
 6845 0b8b 77       		.sleb128 -9
 6846 0b8c 00       		.byte	0
 6847 0b8d 19       		.uleb128 0x19
 6848 0b8e 71030000 		.4byte	.LASF130
 6849 0b92 01       		.byte	0x1
 6850 0b93 E508     		.2byte	0x8e5
 6851 0b95 80000000 		.4byte	0x80
 6852 0b99 00000000 		.4byte	.LFB63
 6853 0b9d 44000000 		.4byte	.LFE63-.LFB63
 6854 0ba1 01       		.uleb128 0x1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 173


 6855 0ba2 9C       		.byte	0x9c
 6856 0ba3 C60B0000 		.4byte	0xbc6
 6857 0ba7 0F       		.uleb128 0xf
 6858 0ba8 EA070000 		.4byte	.LASF120
 6859 0bac 01       		.byte	0x1
 6860 0bad E508     		.2byte	0x8e5
 6861 0baf 80000000 		.4byte	0x80
 6862 0bb3 02       		.uleb128 0x2
 6863 0bb4 91       		.byte	0x91
 6864 0bb5 6F       		.sleb128 -17
 6865 0bb6 10       		.uleb128 0x10
 6866 0bb7 6A070000 		.4byte	.LASF131
 6867 0bbb 01       		.byte	0x1
 6868 0bbc E708     		.2byte	0x8e7
 6869 0bbe C60B0000 		.4byte	0xbc6
 6870 0bc2 02       		.uleb128 0x2
 6871 0bc3 91       		.byte	0x91
 6872 0bc4 74       		.sleb128 -12
 6873 0bc5 00       		.byte	0
 6874 0bc6 04       		.uleb128 0x4
 6875 0bc7 04       		.byte	0x4
 6876 0bc8 E0000000 		.4byte	0xe0
 6877 0bcc 1A       		.uleb128 0x1a
 6878 0bcd 2E060000 		.4byte	.LASF132
 6879 0bd1 01       		.byte	0x1
 6880 0bd2 FF09     		.2byte	0x9ff
 6881 0bd4 00000000 		.4byte	.LFB64
 6882 0bd8 20000000 		.4byte	.LFE64-.LFB64
 6883 0bdc 01       		.uleb128 0x1
 6884 0bdd 9C       		.byte	0x9c
 6885 0bde 0E       		.uleb128 0xe
 6886 0bdf F1070000 		.4byte	.LASF133
 6887 0be3 01       		.byte	0x1
 6888 0be4 1C0A     		.2byte	0xa1c
 6889 0be6 00000000 		.4byte	.LFB65
 6890 0bea 68000000 		.4byte	.LFE65-.LFB65
 6891 0bee 01       		.uleb128 0x1
 6892 0bef 9C       		.byte	0x9c
 6893 0bf0 020C0000 		.4byte	0xc02
 6894 0bf4 17       		.uleb128 0x17
 6895 0bf5 6900     		.ascii	"i\000"
 6896 0bf7 01       		.byte	0x1
 6897 0bf8 1E0A     		.2byte	0xa1e
 6898 0bfa 98000000 		.4byte	0x98
 6899 0bfe 02       		.uleb128 0x2
 6900 0bff 91       		.byte	0x91
 6901 0c00 74       		.sleb128 -12
 6902 0c01 00       		.byte	0
 6903 0c02 1A       		.uleb128 0x1a
 6904 0c03 ED040000 		.4byte	.LASF134
 6905 0c07 01       		.byte	0x1
 6906 0c08 370A     		.2byte	0xa37
 6907 0c0a 00000000 		.4byte	.LFB66
 6908 0c0e 1C000000 		.4byte	.LFE66-.LFB66
 6909 0c12 01       		.uleb128 0x1
 6910 0c13 9C       		.byte	0x9c
 6911 0c14 11       		.uleb128 0x11
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 174


 6912 0c15 63030000 		.4byte	.LASF135
 6913 0c19 01       		.byte	0x1
 6914 0c1a 480A     		.2byte	0xa48
 6915 0c1c 00000000 		.4byte	.LFB67
 6916 0c20 1C000000 		.4byte	.LFE67-.LFB67
 6917 0c24 01       		.uleb128 0x1
 6918 0c25 9C       		.byte	0x9c
 6919 0c26 11       		.uleb128 0x11
 6920 0c27 2D030000 		.4byte	.LASF136
 6921 0c2b 01       		.byte	0x1
 6922 0c2c 580A     		.2byte	0xa58
 6923 0c2e 00000000 		.4byte	.LFB68
 6924 0c32 1C000000 		.4byte	.LFE68-.LFB68
 6925 0c36 01       		.uleb128 0x1
 6926 0c37 9C       		.byte	0x9c
 6927 0c38 11       		.uleb128 0x11
 6928 0c39 9C070000 		.4byte	.LASF137
 6929 0c3d 01       		.byte	0x1
 6930 0c3e 680A     		.2byte	0xa68
 6931 0c40 00000000 		.4byte	.LFB69
 6932 0c44 1C000000 		.4byte	.LFE69-.LFB69
 6933 0c48 01       		.uleb128 0x1
 6934 0c49 9C       		.byte	0x9c
 6935 0c4a 14       		.uleb128 0x14
 6936 0c4b 30070000 		.4byte	.LASF138
 6937 0c4f 01       		.byte	0x1
 6938 0c50 790A     		.2byte	0xa79
 6939 0c52 00000000 		.4byte	.LFB70
 6940 0c56 20000000 		.4byte	.LFE70-.LFB70
 6941 0c5a 01       		.uleb128 0x1
 6942 0c5b 9C       		.byte	0x9c
 6943 0c5c 700C0000 		.4byte	0xc70
 6944 0c60 0F       		.uleb128 0xf
 6945 0c61 D6090000 		.4byte	.LASF139
 6946 0c65 01       		.byte	0x1
 6947 0c66 790A     		.2byte	0xa79
 6948 0c68 98000000 		.4byte	0x98
 6949 0c6c 02       		.uleb128 0x2
 6950 0c6d 91       		.byte	0x91
 6951 0c6e 74       		.sleb128 -12
 6952 0c6f 00       		.byte	0
 6953 0c70 18       		.uleb128 0x18
 6954 0c71 9E020000 		.4byte	.LASF140
 6955 0c75 01       		.byte	0x1
 6956 0c76 890A     		.2byte	0xa89
 6957 0c78 98000000 		.4byte	0x98
 6958 0c7c 00000000 		.4byte	.LFB71
 6959 0c80 1C000000 		.4byte	.LFE71-.LFB71
 6960 0c84 01       		.uleb128 0x1
 6961 0c85 9C       		.byte	0x9c
 6962 0c86 18       		.uleb128 0x18
 6963 0c87 1C060000 		.4byte	.LASF141
 6964 0c8b 01       		.byte	0x1
 6965 0c8c 990A     		.2byte	0xa99
 6966 0c8e 98000000 		.4byte	0x98
 6967 0c92 00000000 		.4byte	.LFB72
 6968 0c96 1C000000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 175


 6969 0c9a 01       		.uleb128 0x1
 6970 0c9b 9C       		.byte	0x9c
 6971 0c9c 14       		.uleb128 0x14
 6972 0c9d 6F060000 		.4byte	.LASF142
 6973 0ca1 01       		.byte	0x1
 6974 0ca2 B30A     		.2byte	0xab3
 6975 0ca4 00000000 		.4byte	.LFB73
 6976 0ca8 38000000 		.4byte	.LFE73-.LFB73
 6977 0cac 01       		.uleb128 0x1
 6978 0cad 9C       		.byte	0x9c
 6979 0cae C20C0000 		.4byte	0xcc2
 6980 0cb2 0F       		.uleb128 0xf
 6981 0cb3 05070000 		.4byte	.LASF143
 6982 0cb7 01       		.byte	0x1
 6983 0cb8 B30A     		.2byte	0xab3
 6984 0cba 98000000 		.4byte	0x98
 6985 0cbe 02       		.uleb128 0x2
 6986 0cbf 91       		.byte	0x91
 6987 0cc0 74       		.sleb128 -12
 6988 0cc1 00       		.byte	0
 6989 0cc2 18       		.uleb128 0x18
 6990 0cc3 4A080000 		.4byte	.LASF144
 6991 0cc7 01       		.byte	0x1
 6992 0cc8 CC0A     		.2byte	0xacc
 6993 0cca 98000000 		.4byte	0x98
 6994 0cce 00000000 		.4byte	.LFB74
 6995 0cd2 1C000000 		.4byte	.LFE74-.LFB74
 6996 0cd6 01       		.uleb128 0x1
 6997 0cd7 9C       		.byte	0x9c
 6998 0cd8 18       		.uleb128 0x18
 6999 0cd9 3E040000 		.4byte	.LASF145
 7000 0cdd 01       		.byte	0x1
 7001 0cde E10A     		.2byte	0xae1
 7002 0ce0 98000000 		.4byte	0x98
 7003 0ce4 00000000 		.4byte	.LFB75
 7004 0ce8 1C000000 		.4byte	.LFE75-.LFB75
 7005 0cec 01       		.uleb128 0x1
 7006 0ced 9C       		.byte	0x9c
 7007 0cee 11       		.uleb128 0x11
 7008 0cef 0F000000 		.4byte	.LASF146
 7009 0cf3 01       		.byte	0x1
 7010 0cf4 EE0A     		.2byte	0xaee
 7011 0cf6 00000000 		.4byte	.LFB76
 7012 0cfa 18000000 		.4byte	.LFE76-.LFB76
 7013 0cfe 01       		.uleb128 0x1
 7014 0cff 9C       		.byte	0x9c
 7015 0d00 16       		.uleb128 0x16
 7016 0d01 95010000 		.4byte	.LASF147
 7017 0d05 01       		.byte	0x1
 7018 0d06 110B     		.2byte	0xb11
 7019 0d08 FD000000 		.4byte	0xfd
 7020 0d0c 00000000 		.4byte	.LFB77
 7021 0d10 30000000 		.4byte	.LFE77-.LFB77
 7022 0d14 01       		.uleb128 0x1
 7023 0d15 9C       		.byte	0x9c
 7024 0d16 480D0000 		.4byte	0xd48
 7025 0d1a 0F       		.uleb128 0xf
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 176


 7026 0d1b EA070000 		.4byte	.LASF120
 7027 0d1f 01       		.byte	0x1
 7028 0d20 110B     		.2byte	0xb11
 7029 0d22 98000000 		.4byte	0x98
 7030 0d26 02       		.uleb128 0x2
 7031 0d27 91       		.byte	0x91
 7032 0d28 6C       		.sleb128 -20
 7033 0d29 0F       		.uleb128 0xf
 7034 0d2a BA080000 		.4byte	.LASF148
 7035 0d2e 01       		.byte	0x1
 7036 0d2f 110B     		.2byte	0xb11
 7037 0d31 FD000000 		.4byte	0xfd
 7038 0d35 02       		.uleb128 0x2
 7039 0d36 91       		.byte	0x91
 7040 0d37 68       		.sleb128 -24
 7041 0d38 10       		.uleb128 0x10
 7042 0d39 1A080000 		.4byte	.LASF149
 7043 0d3d 01       		.byte	0x1
 7044 0d3e 130B     		.2byte	0xb13
 7045 0d40 FD000000 		.4byte	0xfd
 7046 0d44 02       		.uleb128 0x2
 7047 0d45 91       		.byte	0x91
 7048 0d46 74       		.sleb128 -12
 7049 0d47 00       		.byte	0
 7050 0d48 16       		.uleb128 0x16
 7051 0d49 8A030000 		.4byte	.LASF150
 7052 0d4d 01       		.byte	0x1
 7053 0d4e 290B     		.2byte	0xb29
 7054 0d50 FD000000 		.4byte	0xfd
 7055 0d54 00000000 		.4byte	.LFB78
 7056 0d58 20000000 		.4byte	.LFE78-.LFB78
 7057 0d5c 01       		.uleb128 0x1
 7058 0d5d 9C       		.byte	0x9c
 7059 0d5e 720D0000 		.4byte	0xd72
 7060 0d62 0F       		.uleb128 0xf
 7061 0d63 EA070000 		.4byte	.LASF120
 7062 0d67 01       		.byte	0x1
 7063 0d68 290B     		.2byte	0xb29
 7064 0d6a 98000000 		.4byte	0x98
 7065 0d6e 02       		.uleb128 0x2
 7066 0d6f 91       		.byte	0x91
 7067 0d70 74       		.sleb128 -12
 7068 0d71 00       		.byte	0
 7069 0d72 13       		.uleb128 0x13
 7070 0d73 3D060000 		.4byte	.LASF151
 7071 0d77 01       		.byte	0x1
 7072 0d78 360B     		.2byte	0xb36
 7073 0d7a 00000000 		.4byte	.LFB79
 7074 0d7e 44000000 		.4byte	.LFE79-.LFB79
 7075 0d82 01       		.uleb128 0x1
 7076 0d83 9C       		.byte	0x9c
 7077 0d84 960D0000 		.4byte	0xd96
 7078 0d88 17       		.uleb128 0x17
 7079 0d89 6900     		.ascii	"i\000"
 7080 0d8b 01       		.byte	0x1
 7081 0d8c 380B     		.2byte	0xb38
 7082 0d8e 98000000 		.4byte	0x98
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 177


 7083 0d92 02       		.uleb128 0x2
 7084 0d93 91       		.byte	0x91
 7085 0d94 74       		.sleb128 -12
 7086 0d95 00       		.byte	0
 7087 0d96 14       		.uleb128 0x14
 7088 0d97 AC080000 		.4byte	.LASF152
 7089 0d9b 01       		.byte	0x1
 7090 0d9c 570B     		.2byte	0xb57
 7091 0d9e 00000000 		.4byte	.LFB80
 7092 0da2 C4000000 		.4byte	.LFE80-.LFB80
 7093 0da6 01       		.uleb128 0x1
 7094 0da7 9C       		.byte	0x9c
 7095 0da8 BC0D0000 		.4byte	0xdbc
 7096 0dac 0F       		.uleb128 0xf
 7097 0dad 99090000 		.4byte	.LASF153
 7098 0db1 01       		.byte	0x1
 7099 0db2 570B     		.2byte	0xb57
 7100 0db4 BC0D0000 		.4byte	0xdbc
 7101 0db8 02       		.uleb128 0x2
 7102 0db9 91       		.byte	0x91
 7103 0dba 74       		.sleb128 -12
 7104 0dbb 00       		.byte	0
 7105 0dbc 04       		.uleb128 0x4
 7106 0dbd 04       		.byte	0x4
 7107 0dbe 98000000 		.4byte	0x98
 7108 0dc2 1B       		.uleb128 0x1b
 7109 0dc3 FD000000 		.4byte	0xfd
 7110 0dc7 D20D0000 		.4byte	0xdd2
 7111 0dcb 1C       		.uleb128 0x1c
 7112 0dcc 6B000000 		.4byte	0x6b
 7113 0dd0 04       		.byte	0x4
 7114 0dd1 00       		.byte	0
 7115 0dd2 0B       		.uleb128 0xb
 7116 0dd3 42050000 		.4byte	.LASF154
 7117 0dd7 01       		.byte	0x1
 7118 0dd8 34       		.byte	0x34
 7119 0dd9 C20D0000 		.4byte	0xdc2
 7120 0ddd 05       		.uleb128 0x5
 7121 0dde 03       		.byte	0x3
 7122 0ddf 00000000 		.4byte	CySysTickCallbacks
 7123 0de3 1D       		.uleb128 0x1d
 7124 0de4 8E070000 		.4byte	.LASF155
 7125 0de8 01       		.byte	0x1
 7126 0de9 1C       		.byte	0x1c
 7127 0dea 80000000 		.4byte	0x80
 7128 0dee 05       		.uleb128 0x5
 7129 0def 03       		.byte	0x3
 7130 0df0 00000000 		.4byte	CyResetStatus
 7131 0df4 1D       		.uleb128 0x1d
 7132 0df5 A6040000 		.4byte	.LASF156
 7133 0df9 01       		.byte	0x1
 7134 0dfa 28       		.byte	0x28
 7135 0dfb 98000000 		.4byte	0x98
 7136 0dff 05       		.uleb128 0x5
 7137 0e00 03       		.byte	0x3
 7138 0e01 00000000 		.4byte	cydelay_freq_hz
 7139 0e05 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 178


 7140 0e06 BA020000 		.4byte	.LASF157
 7141 0e0a 01       		.byte	0x1
 7142 0e0b 29       		.byte	0x29
 7143 0e0c 98000000 		.4byte	0x98
 7144 0e10 05       		.uleb128 0x5
 7145 0e11 03       		.byte	0x3
 7146 0e12 00000000 		.4byte	cydelay_freq_khz
 7147 0e16 1D       		.uleb128 0x1d
 7148 0e17 97000000 		.4byte	.LASF158
 7149 0e1b 01       		.byte	0x1
 7150 0e1c 2A       		.byte	0x2a
 7151 0e1d 80000000 		.4byte	0x80
 7152 0e21 05       		.uleb128 0x5
 7153 0e22 03       		.byte	0x3
 7154 0e23 00000000 		.4byte	cydelay_freq_mhz
 7155 0e27 1D       		.uleb128 0x1d
 7156 0e28 12040000 		.4byte	.LASF159
 7157 0e2c 01       		.byte	0x1
 7158 0e2d 2B       		.byte	0x2b
 7159 0e2e 98000000 		.4byte	0x98
 7160 0e32 05       		.uleb128 0x5
 7161 0e33 03       		.byte	0x3
 7162 0e34 00000000 		.4byte	cydelay_32k_ms
 7163 0e38 1D       		.uleb128 0x1d
 7164 0e39 6B010000 		.4byte	.LASF160
 7165 0e3d 01       		.byte	0x1
 7166 0e3e 36       		.byte	0x36
 7167 0e3f 98000000 		.4byte	0x98
 7168 0e43 05       		.uleb128 0x5
 7169 0e44 03       		.byte	0x3
 7170 0e45 00000000 		.4byte	CySysTickInitVar
 7171 0e49 00       		.byte	0
 7172              		.section	.debug_abbrev,"",%progbits
 7173              	.Ldebug_abbrev0:
 7174 0000 01       		.uleb128 0x1
 7175 0001 11       		.uleb128 0x11
 7176 0002 01       		.byte	0x1
 7177 0003 25       		.uleb128 0x25
 7178 0004 0E       		.uleb128 0xe
 7179 0005 13       		.uleb128 0x13
 7180 0006 0B       		.uleb128 0xb
 7181 0007 03       		.uleb128 0x3
 7182 0008 0E       		.uleb128 0xe
 7183 0009 1B       		.uleb128 0x1b
 7184 000a 0E       		.uleb128 0xe
 7185 000b 55       		.uleb128 0x55
 7186 000c 17       		.uleb128 0x17
 7187 000d 11       		.uleb128 0x11
 7188 000e 01       		.uleb128 0x1
 7189 000f 10       		.uleb128 0x10
 7190 0010 17       		.uleb128 0x17
 7191 0011 00       		.byte	0
 7192 0012 00       		.byte	0
 7193 0013 02       		.uleb128 0x2
 7194 0014 24       		.uleb128 0x24
 7195 0015 00       		.byte	0
 7196 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 179


 7197 0017 0B       		.uleb128 0xb
 7198 0018 3E       		.uleb128 0x3e
 7199 0019 0B       		.uleb128 0xb
 7200 001a 03       		.uleb128 0x3
 7201 001b 08       		.uleb128 0x8
 7202 001c 00       		.byte	0
 7203 001d 00       		.byte	0
 7204 001e 03       		.uleb128 0x3
 7205 001f 24       		.uleb128 0x24
 7206 0020 00       		.byte	0
 7207 0021 0B       		.uleb128 0xb
 7208 0022 0B       		.uleb128 0xb
 7209 0023 3E       		.uleb128 0x3e
 7210 0024 0B       		.uleb128 0xb
 7211 0025 03       		.uleb128 0x3
 7212 0026 0E       		.uleb128 0xe
 7213 0027 00       		.byte	0
 7214 0028 00       		.byte	0
 7215 0029 04       		.uleb128 0x4
 7216 002a 0F       		.uleb128 0xf
 7217 002b 00       		.byte	0
 7218 002c 0B       		.uleb128 0xb
 7219 002d 0B       		.uleb128 0xb
 7220 002e 49       		.uleb128 0x49
 7221 002f 13       		.uleb128 0x13
 7222 0030 00       		.byte	0
 7223 0031 00       		.byte	0
 7224 0032 05       		.uleb128 0x5
 7225 0033 15       		.uleb128 0x15
 7226 0034 00       		.byte	0
 7227 0035 27       		.uleb128 0x27
 7228 0036 19       		.uleb128 0x19
 7229 0037 00       		.byte	0
 7230 0038 00       		.byte	0
 7231 0039 06       		.uleb128 0x6
 7232 003a 16       		.uleb128 0x16
 7233 003b 00       		.byte	0
 7234 003c 03       		.uleb128 0x3
 7235 003d 0E       		.uleb128 0xe
 7236 003e 3A       		.uleb128 0x3a
 7237 003f 0B       		.uleb128 0xb
 7238 0040 3B       		.uleb128 0x3b
 7239 0041 05       		.uleb128 0x5
 7240 0042 49       		.uleb128 0x49
 7241 0043 13       		.uleb128 0x13
 7242 0044 00       		.byte	0
 7243 0045 00       		.byte	0
 7244 0046 07       		.uleb128 0x7
 7245 0047 35       		.uleb128 0x35
 7246 0048 00       		.byte	0
 7247 0049 49       		.uleb128 0x49
 7248 004a 13       		.uleb128 0x13
 7249 004b 00       		.byte	0
 7250 004c 00       		.byte	0
 7251 004d 08       		.uleb128 0x8
 7252 004e 16       		.uleb128 0x16
 7253 004f 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 180


 7254 0050 03       		.uleb128 0x3
 7255 0051 0E       		.uleb128 0xe
 7256 0052 3A       		.uleb128 0x3a
 7257 0053 0B       		.uleb128 0xb
 7258 0054 3B       		.uleb128 0x3b
 7259 0055 0B       		.uleb128 0xb
 7260 0056 49       		.uleb128 0x49
 7261 0057 13       		.uleb128 0x13
 7262 0058 00       		.byte	0
 7263 0059 00       		.byte	0
 7264 005a 09       		.uleb128 0x9
 7265 005b 2E       		.uleb128 0x2e
 7266 005c 01       		.byte	0x1
 7267 005d 3F       		.uleb128 0x3f
 7268 005e 19       		.uleb128 0x19
 7269 005f 03       		.uleb128 0x3
 7270 0060 0E       		.uleb128 0xe
 7271 0061 3A       		.uleb128 0x3a
 7272 0062 0B       		.uleb128 0xb
 7273 0063 3B       		.uleb128 0x3b
 7274 0064 0B       		.uleb128 0xb
 7275 0065 27       		.uleb128 0x27
 7276 0066 19       		.uleb128 0x19
 7277 0067 49       		.uleb128 0x49
 7278 0068 13       		.uleb128 0x13
 7279 0069 11       		.uleb128 0x11
 7280 006a 01       		.uleb128 0x1
 7281 006b 12       		.uleb128 0x12
 7282 006c 06       		.uleb128 0x6
 7283 006d 40       		.uleb128 0x40
 7284 006e 18       		.uleb128 0x18
 7285 006f 9642     		.uleb128 0x2116
 7286 0071 19       		.uleb128 0x19
 7287 0072 01       		.uleb128 0x1
 7288 0073 13       		.uleb128 0x13
 7289 0074 00       		.byte	0
 7290 0075 00       		.byte	0
 7291 0076 0A       		.uleb128 0xa
 7292 0077 05       		.uleb128 0x5
 7293 0078 00       		.byte	0
 7294 0079 03       		.uleb128 0x3
 7295 007a 0E       		.uleb128 0xe
 7296 007b 3A       		.uleb128 0x3a
 7297 007c 0B       		.uleb128 0xb
 7298 007d 3B       		.uleb128 0x3b
 7299 007e 0B       		.uleb128 0xb
 7300 007f 49       		.uleb128 0x49
 7301 0080 13       		.uleb128 0x13
 7302 0081 02       		.uleb128 0x2
 7303 0082 18       		.uleb128 0x18
 7304 0083 00       		.byte	0
 7305 0084 00       		.byte	0
 7306 0085 0B       		.uleb128 0xb
 7307 0086 34       		.uleb128 0x34
 7308 0087 00       		.byte	0
 7309 0088 03       		.uleb128 0x3
 7310 0089 0E       		.uleb128 0xe
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 181


 7311 008a 3A       		.uleb128 0x3a
 7312 008b 0B       		.uleb128 0xb
 7313 008c 3B       		.uleb128 0x3b
 7314 008d 0B       		.uleb128 0xb
 7315 008e 49       		.uleb128 0x49
 7316 008f 13       		.uleb128 0x13
 7317 0090 02       		.uleb128 0x2
 7318 0091 18       		.uleb128 0x18
 7319 0092 00       		.byte	0
 7320 0093 00       		.byte	0
 7321 0094 0C       		.uleb128 0xc
 7322 0095 2E       		.uleb128 0x2e
 7323 0096 00       		.byte	0
 7324 0097 3F       		.uleb128 0x3f
 7325 0098 19       		.uleb128 0x19
 7326 0099 03       		.uleb128 0x3
 7327 009a 0E       		.uleb128 0xe
 7328 009b 3A       		.uleb128 0x3a
 7329 009c 0B       		.uleb128 0xb
 7330 009d 3B       		.uleb128 0x3b
 7331 009e 0B       		.uleb128 0xb
 7332 009f 27       		.uleb128 0x27
 7333 00a0 19       		.uleb128 0x19
 7334 00a1 11       		.uleb128 0x11
 7335 00a2 01       		.uleb128 0x1
 7336 00a3 12       		.uleb128 0x12
 7337 00a4 06       		.uleb128 0x6
 7338 00a5 40       		.uleb128 0x40
 7339 00a6 18       		.uleb128 0x18
 7340 00a7 9742     		.uleb128 0x2117
 7341 00a9 19       		.uleb128 0x19
 7342 00aa 00       		.byte	0
 7343 00ab 00       		.byte	0
 7344 00ac 0D       		.uleb128 0xd
 7345 00ad 2E       		.uleb128 0x2e
 7346 00ae 01       		.byte	0x1
 7347 00af 3F       		.uleb128 0x3f
 7348 00b0 19       		.uleb128 0x19
 7349 00b1 03       		.uleb128 0x3
 7350 00b2 0E       		.uleb128 0xe
 7351 00b3 3A       		.uleb128 0x3a
 7352 00b4 0B       		.uleb128 0xb
 7353 00b5 3B       		.uleb128 0x3b
 7354 00b6 0B       		.uleb128 0xb
 7355 00b7 27       		.uleb128 0x27
 7356 00b8 19       		.uleb128 0x19
 7357 00b9 11       		.uleb128 0x11
 7358 00ba 01       		.uleb128 0x1
 7359 00bb 12       		.uleb128 0x12
 7360 00bc 06       		.uleb128 0x6
 7361 00bd 40       		.uleb128 0x40
 7362 00be 18       		.uleb128 0x18
 7363 00bf 9642     		.uleb128 0x2116
 7364 00c1 19       		.uleb128 0x19
 7365 00c2 01       		.uleb128 0x1
 7366 00c3 13       		.uleb128 0x13
 7367 00c4 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 182


 7368 00c5 00       		.byte	0
 7369 00c6 0E       		.uleb128 0xe
 7370 00c7 2E       		.uleb128 0x2e
 7371 00c8 01       		.byte	0x1
 7372 00c9 3F       		.uleb128 0x3f
 7373 00ca 19       		.uleb128 0x19
 7374 00cb 03       		.uleb128 0x3
 7375 00cc 0E       		.uleb128 0xe
 7376 00cd 3A       		.uleb128 0x3a
 7377 00ce 0B       		.uleb128 0xb
 7378 00cf 3B       		.uleb128 0x3b
 7379 00d0 05       		.uleb128 0x5
 7380 00d1 27       		.uleb128 0x27
 7381 00d2 19       		.uleb128 0x19
 7382 00d3 11       		.uleb128 0x11
 7383 00d4 01       		.uleb128 0x1
 7384 00d5 12       		.uleb128 0x12
 7385 00d6 06       		.uleb128 0x6
 7386 00d7 40       		.uleb128 0x40
 7387 00d8 18       		.uleb128 0x18
 7388 00d9 9642     		.uleb128 0x2116
 7389 00db 19       		.uleb128 0x19
 7390 00dc 01       		.uleb128 0x1
 7391 00dd 13       		.uleb128 0x13
 7392 00de 00       		.byte	0
 7393 00df 00       		.byte	0
 7394 00e0 0F       		.uleb128 0xf
 7395 00e1 05       		.uleb128 0x5
 7396 00e2 00       		.byte	0
 7397 00e3 03       		.uleb128 0x3
 7398 00e4 0E       		.uleb128 0xe
 7399 00e5 3A       		.uleb128 0x3a
 7400 00e6 0B       		.uleb128 0xb
 7401 00e7 3B       		.uleb128 0x3b
 7402 00e8 05       		.uleb128 0x5
 7403 00e9 49       		.uleb128 0x49
 7404 00ea 13       		.uleb128 0x13
 7405 00eb 02       		.uleb128 0x2
 7406 00ec 18       		.uleb128 0x18
 7407 00ed 00       		.byte	0
 7408 00ee 00       		.byte	0
 7409 00ef 10       		.uleb128 0x10
 7410 00f0 34       		.uleb128 0x34
 7411 00f1 00       		.byte	0
 7412 00f2 03       		.uleb128 0x3
 7413 00f3 0E       		.uleb128 0xe
 7414 00f4 3A       		.uleb128 0x3a
 7415 00f5 0B       		.uleb128 0xb
 7416 00f6 3B       		.uleb128 0x3b
 7417 00f7 05       		.uleb128 0x5
 7418 00f8 49       		.uleb128 0x49
 7419 00f9 13       		.uleb128 0x13
 7420 00fa 02       		.uleb128 0x2
 7421 00fb 18       		.uleb128 0x18
 7422 00fc 00       		.byte	0
 7423 00fd 00       		.byte	0
 7424 00fe 11       		.uleb128 0x11
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 183


 7425 00ff 2E       		.uleb128 0x2e
 7426 0100 00       		.byte	0
 7427 0101 3F       		.uleb128 0x3f
 7428 0102 19       		.uleb128 0x19
 7429 0103 03       		.uleb128 0x3
 7430 0104 0E       		.uleb128 0xe
 7431 0105 3A       		.uleb128 0x3a
 7432 0106 0B       		.uleb128 0xb
 7433 0107 3B       		.uleb128 0x3b
 7434 0108 05       		.uleb128 0x5
 7435 0109 27       		.uleb128 0x27
 7436 010a 19       		.uleb128 0x19
 7437 010b 11       		.uleb128 0x11
 7438 010c 01       		.uleb128 0x1
 7439 010d 12       		.uleb128 0x12
 7440 010e 06       		.uleb128 0x6
 7441 010f 40       		.uleb128 0x40
 7442 0110 18       		.uleb128 0x18
 7443 0111 9742     		.uleb128 0x2117
 7444 0113 19       		.uleb128 0x19
 7445 0114 00       		.byte	0
 7446 0115 00       		.byte	0
 7447 0116 12       		.uleb128 0x12
 7448 0117 2E       		.uleb128 0x2e
 7449 0118 01       		.byte	0x1
 7450 0119 03       		.uleb128 0x3
 7451 011a 0E       		.uleb128 0xe
 7452 011b 3A       		.uleb128 0x3a
 7453 011c 0B       		.uleb128 0xb
 7454 011d 3B       		.uleb128 0x3b
 7455 011e 05       		.uleb128 0x5
 7456 011f 27       		.uleb128 0x27
 7457 0120 19       		.uleb128 0x19
 7458 0121 49       		.uleb128 0x49
 7459 0122 13       		.uleb128 0x13
 7460 0123 11       		.uleb128 0x11
 7461 0124 01       		.uleb128 0x1
 7462 0125 12       		.uleb128 0x12
 7463 0126 06       		.uleb128 0x6
 7464 0127 40       		.uleb128 0x40
 7465 0128 18       		.uleb128 0x18
 7466 0129 9742     		.uleb128 0x2117
 7467 012b 19       		.uleb128 0x19
 7468 012c 01       		.uleb128 0x1
 7469 012d 13       		.uleb128 0x13
 7470 012e 00       		.byte	0
 7471 012f 00       		.byte	0
 7472 0130 13       		.uleb128 0x13
 7473 0131 2E       		.uleb128 0x2e
 7474 0132 01       		.byte	0x1
 7475 0133 03       		.uleb128 0x3
 7476 0134 0E       		.uleb128 0xe
 7477 0135 3A       		.uleb128 0x3a
 7478 0136 0B       		.uleb128 0xb
 7479 0137 3B       		.uleb128 0x3b
 7480 0138 05       		.uleb128 0x5
 7481 0139 27       		.uleb128 0x27
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 184


 7482 013a 19       		.uleb128 0x19
 7483 013b 11       		.uleb128 0x11
 7484 013c 01       		.uleb128 0x1
 7485 013d 12       		.uleb128 0x12
 7486 013e 06       		.uleb128 0x6
 7487 013f 40       		.uleb128 0x40
 7488 0140 18       		.uleb128 0x18
 7489 0141 9642     		.uleb128 0x2116
 7490 0143 19       		.uleb128 0x19
 7491 0144 01       		.uleb128 0x1
 7492 0145 13       		.uleb128 0x13
 7493 0146 00       		.byte	0
 7494 0147 00       		.byte	0
 7495 0148 14       		.uleb128 0x14
 7496 0149 2E       		.uleb128 0x2e
 7497 014a 01       		.byte	0x1
 7498 014b 3F       		.uleb128 0x3f
 7499 014c 19       		.uleb128 0x19
 7500 014d 03       		.uleb128 0x3
 7501 014e 0E       		.uleb128 0xe
 7502 014f 3A       		.uleb128 0x3a
 7503 0150 0B       		.uleb128 0xb
 7504 0151 3B       		.uleb128 0x3b
 7505 0152 05       		.uleb128 0x5
 7506 0153 27       		.uleb128 0x27
 7507 0154 19       		.uleb128 0x19
 7508 0155 11       		.uleb128 0x11
 7509 0156 01       		.uleb128 0x1
 7510 0157 12       		.uleb128 0x12
 7511 0158 06       		.uleb128 0x6
 7512 0159 40       		.uleb128 0x40
 7513 015a 18       		.uleb128 0x18
 7514 015b 9742     		.uleb128 0x2117
 7515 015d 19       		.uleb128 0x19
 7516 015e 01       		.uleb128 0x1
 7517 015f 13       		.uleb128 0x13
 7518 0160 00       		.byte	0
 7519 0161 00       		.byte	0
 7520 0162 15       		.uleb128 0x15
 7521 0163 2E       		.uleb128 0x2e
 7522 0164 01       		.byte	0x1
 7523 0165 03       		.uleb128 0x3
 7524 0166 0E       		.uleb128 0xe
 7525 0167 3A       		.uleb128 0x3a
 7526 0168 0B       		.uleb128 0xb
 7527 0169 3B       		.uleb128 0x3b
 7528 016a 05       		.uleb128 0x5
 7529 016b 27       		.uleb128 0x27
 7530 016c 19       		.uleb128 0x19
 7531 016d 11       		.uleb128 0x11
 7532 016e 01       		.uleb128 0x1
 7533 016f 12       		.uleb128 0x12
 7534 0170 06       		.uleb128 0x6
 7535 0171 40       		.uleb128 0x40
 7536 0172 18       		.uleb128 0x18
 7537 0173 9742     		.uleb128 0x2117
 7538 0175 19       		.uleb128 0x19
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 185


 7539 0176 01       		.uleb128 0x1
 7540 0177 13       		.uleb128 0x13
 7541 0178 00       		.byte	0
 7542 0179 00       		.byte	0
 7543 017a 16       		.uleb128 0x16
 7544 017b 2E       		.uleb128 0x2e
 7545 017c 01       		.byte	0x1
 7546 017d 3F       		.uleb128 0x3f
 7547 017e 19       		.uleb128 0x19
 7548 017f 03       		.uleb128 0x3
 7549 0180 0E       		.uleb128 0xe
 7550 0181 3A       		.uleb128 0x3a
 7551 0182 0B       		.uleb128 0xb
 7552 0183 3B       		.uleb128 0x3b
 7553 0184 05       		.uleb128 0x5
 7554 0185 27       		.uleb128 0x27
 7555 0186 19       		.uleb128 0x19
 7556 0187 49       		.uleb128 0x49
 7557 0188 13       		.uleb128 0x13
 7558 0189 11       		.uleb128 0x11
 7559 018a 01       		.uleb128 0x1
 7560 018b 12       		.uleb128 0x12
 7561 018c 06       		.uleb128 0x6
 7562 018d 40       		.uleb128 0x40
 7563 018e 18       		.uleb128 0x18
 7564 018f 9742     		.uleb128 0x2117
 7565 0191 19       		.uleb128 0x19
 7566 0192 01       		.uleb128 0x1
 7567 0193 13       		.uleb128 0x13
 7568 0194 00       		.byte	0
 7569 0195 00       		.byte	0
 7570 0196 17       		.uleb128 0x17
 7571 0197 34       		.uleb128 0x34
 7572 0198 00       		.byte	0
 7573 0199 03       		.uleb128 0x3
 7574 019a 08       		.uleb128 0x8
 7575 019b 3A       		.uleb128 0x3a
 7576 019c 0B       		.uleb128 0xb
 7577 019d 3B       		.uleb128 0x3b
 7578 019e 05       		.uleb128 0x5
 7579 019f 49       		.uleb128 0x49
 7580 01a0 13       		.uleb128 0x13
 7581 01a1 02       		.uleb128 0x2
 7582 01a2 18       		.uleb128 0x18
 7583 01a3 00       		.byte	0
 7584 01a4 00       		.byte	0
 7585 01a5 18       		.uleb128 0x18
 7586 01a6 2E       		.uleb128 0x2e
 7587 01a7 00       		.byte	0
 7588 01a8 3F       		.uleb128 0x3f
 7589 01a9 19       		.uleb128 0x19
 7590 01aa 03       		.uleb128 0x3
 7591 01ab 0E       		.uleb128 0xe
 7592 01ac 3A       		.uleb128 0x3a
 7593 01ad 0B       		.uleb128 0xb
 7594 01ae 3B       		.uleb128 0x3b
 7595 01af 05       		.uleb128 0x5
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 186


 7596 01b0 27       		.uleb128 0x27
 7597 01b1 19       		.uleb128 0x19
 7598 01b2 49       		.uleb128 0x49
 7599 01b3 13       		.uleb128 0x13
 7600 01b4 11       		.uleb128 0x11
 7601 01b5 01       		.uleb128 0x1
 7602 01b6 12       		.uleb128 0x12
 7603 01b7 06       		.uleb128 0x6
 7604 01b8 40       		.uleb128 0x40
 7605 01b9 18       		.uleb128 0x18
 7606 01ba 9742     		.uleb128 0x2117
 7607 01bc 19       		.uleb128 0x19
 7608 01bd 00       		.byte	0
 7609 01be 00       		.byte	0
 7610 01bf 19       		.uleb128 0x19
 7611 01c0 2E       		.uleb128 0x2e
 7612 01c1 01       		.byte	0x1
 7613 01c2 3F       		.uleb128 0x3f
 7614 01c3 19       		.uleb128 0x19
 7615 01c4 03       		.uleb128 0x3
 7616 01c5 0E       		.uleb128 0xe
 7617 01c6 3A       		.uleb128 0x3a
 7618 01c7 0B       		.uleb128 0xb
 7619 01c8 3B       		.uleb128 0x3b
 7620 01c9 05       		.uleb128 0x5
 7621 01ca 27       		.uleb128 0x27
 7622 01cb 19       		.uleb128 0x19
 7623 01cc 49       		.uleb128 0x49
 7624 01cd 13       		.uleb128 0x13
 7625 01ce 11       		.uleb128 0x11
 7626 01cf 01       		.uleb128 0x1
 7627 01d0 12       		.uleb128 0x12
 7628 01d1 06       		.uleb128 0x6
 7629 01d2 40       		.uleb128 0x40
 7630 01d3 18       		.uleb128 0x18
 7631 01d4 9642     		.uleb128 0x2116
 7632 01d6 19       		.uleb128 0x19
 7633 01d7 01       		.uleb128 0x1
 7634 01d8 13       		.uleb128 0x13
 7635 01d9 00       		.byte	0
 7636 01da 00       		.byte	0
 7637 01db 1A       		.uleb128 0x1a
 7638 01dc 2E       		.uleb128 0x2e
 7639 01dd 00       		.byte	0
 7640 01de 3F       		.uleb128 0x3f
 7641 01df 19       		.uleb128 0x19
 7642 01e0 03       		.uleb128 0x3
 7643 01e1 0E       		.uleb128 0xe
 7644 01e2 3A       		.uleb128 0x3a
 7645 01e3 0B       		.uleb128 0xb
 7646 01e4 3B       		.uleb128 0x3b
 7647 01e5 05       		.uleb128 0x5
 7648 01e6 27       		.uleb128 0x27
 7649 01e7 19       		.uleb128 0x19
 7650 01e8 11       		.uleb128 0x11
 7651 01e9 01       		.uleb128 0x1
 7652 01ea 12       		.uleb128 0x12
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 187


 7653 01eb 06       		.uleb128 0x6
 7654 01ec 40       		.uleb128 0x40
 7655 01ed 18       		.uleb128 0x18
 7656 01ee 9642     		.uleb128 0x2116
 7657 01f0 19       		.uleb128 0x19
 7658 01f1 00       		.byte	0
 7659 01f2 00       		.byte	0
 7660 01f3 1B       		.uleb128 0x1b
 7661 01f4 01       		.uleb128 0x1
 7662 01f5 01       		.byte	0x1
 7663 01f6 49       		.uleb128 0x49
 7664 01f7 13       		.uleb128 0x13
 7665 01f8 01       		.uleb128 0x1
 7666 01f9 13       		.uleb128 0x13
 7667 01fa 00       		.byte	0
 7668 01fb 00       		.byte	0
 7669 01fc 1C       		.uleb128 0x1c
 7670 01fd 21       		.uleb128 0x21
 7671 01fe 00       		.byte	0
 7672 01ff 49       		.uleb128 0x49
 7673 0200 13       		.uleb128 0x13
 7674 0201 2F       		.uleb128 0x2f
 7675 0202 0B       		.uleb128 0xb
 7676 0203 00       		.byte	0
 7677 0204 00       		.byte	0
 7678 0205 1D       		.uleb128 0x1d
 7679 0206 34       		.uleb128 0x34
 7680 0207 00       		.byte	0
 7681 0208 03       		.uleb128 0x3
 7682 0209 0E       		.uleb128 0xe
 7683 020a 3A       		.uleb128 0x3a
 7684 020b 0B       		.uleb128 0xb
 7685 020c 3B       		.uleb128 0x3b
 7686 020d 0B       		.uleb128 0xb
 7687 020e 49       		.uleb128 0x49
 7688 020f 13       		.uleb128 0x13
 7689 0210 3F       		.uleb128 0x3f
 7690 0211 19       		.uleb128 0x19
 7691 0212 02       		.uleb128 0x2
 7692 0213 18       		.uleb128 0x18
 7693 0214 00       		.byte	0
 7694 0215 00       		.byte	0
 7695 0216 00       		.byte	0
 7696              		.section	.debug_aranges,"",%progbits
 7697 0000 9C020000 		.4byte	0x29c
 7698 0004 0200     		.2byte	0x2
 7699 0006 00000000 		.4byte	.Ldebug_info0
 7700 000a 04       		.byte	0x4
 7701 000b 00       		.byte	0
 7702 000c 0000     		.2byte	0
 7703 000e 0000     		.2byte	0
 7704 0010 00000000 		.4byte	.LFB0
 7705 0014 B0000000 		.4byte	.LFE0-.LFB0
 7706 0018 00000000 		.4byte	.LFB1
 7707 001c 20000000 		.4byte	.LFE1-.LFB1
 7708 0020 00000000 		.4byte	.LFB2
 7709 0024 90000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 188


 7710 0028 00000000 		.4byte	.LFB3
 7711 002c 54000000 		.4byte	.LFE3-.LFB3
 7712 0030 00000000 		.4byte	.LFB4
 7713 0034 94000000 		.4byte	.LFE4-.LFB4
 7714 0038 00000000 		.4byte	.LFB5
 7715 003c 34000000 		.4byte	.LFE5-.LFB5
 7716 0040 00000000 		.4byte	.LFB6
 7717 0044 60000000 		.4byte	.LFE6-.LFB6
 7718 0048 00000000 		.4byte	.LFB7
 7719 004c 08010000 		.4byte	.LFE7-.LFB7
 7720 0050 00000000 		.4byte	.LFB8
 7721 0054 AC010000 		.4byte	.LFE8-.LFB8
 7722 0058 00000000 		.4byte	.LFB9
 7723 005c 8C000000 		.4byte	.LFE9-.LFB9
 7724 0060 00000000 		.4byte	.LFB10
 7725 0064 20000000 		.4byte	.LFE10-.LFB10
 7726 0068 00000000 		.4byte	.LFB11
 7727 006c 20000000 		.4byte	.LFE11-.LFB11
 7728 0070 00000000 		.4byte	.LFB12
 7729 0074 34000000 		.4byte	.LFE12-.LFB12
 7730 0078 00000000 		.4byte	.LFB13
 7731 007c 20000000 		.4byte	.LFE13-.LFB13
 7732 0080 00000000 		.4byte	.LFB14
 7733 0084 78000000 		.4byte	.LFE14-.LFB14
 7734 0088 00000000 		.4byte	.LFB15
 7735 008c B4000000 		.4byte	.LFE15-.LFB15
 7736 0090 00000000 		.4byte	.LFB16
 7737 0094 34000000 		.4byte	.LFE16-.LFB16
 7738 0098 00000000 		.4byte	.LFB17
 7739 009c 20000000 		.4byte	.LFE17-.LFB17
 7740 00a0 00000000 		.4byte	.LFB18
 7741 00a4 20000000 		.4byte	.LFE18-.LFB18
 7742 00a8 00000000 		.4byte	.LFB19
 7743 00ac 20000000 		.4byte	.LFE19-.LFB19
 7744 00b0 00000000 		.4byte	.LFB20
 7745 00b4 20000000 		.4byte	.LFE20-.LFB20
 7746 00b8 00000000 		.4byte	.LFB21
 7747 00bc 20000000 		.4byte	.LFE21-.LFB21
 7748 00c0 00000000 		.4byte	.LFB22
 7749 00c4 20000000 		.4byte	.LFE22-.LFB22
 7750 00c8 00000000 		.4byte	.LFB23
 7751 00cc 38000000 		.4byte	.LFE23-.LFB23
 7752 00d0 00000000 		.4byte	.LFB24
 7753 00d4 4C000000 		.4byte	.LFE24-.LFB24
 7754 00d8 00000000 		.4byte	.LFB25
 7755 00dc 84000000 		.4byte	.LFE25-.LFB25
 7756 00e0 00000000 		.4byte	.LFB26
 7757 00e4 50000000 		.4byte	.LFE26-.LFB26
 7758 00e8 00000000 		.4byte	.LFB27
 7759 00ec 20000000 		.4byte	.LFE27-.LFB27
 7760 00f0 00000000 		.4byte	.LFB28
 7761 00f4 B4000000 		.4byte	.LFE28-.LFB28
 7762 00f8 00000000 		.4byte	.LFB29
 7763 00fc D0000000 		.4byte	.LFE29-.LFB29
 7764 0100 00000000 		.4byte	.LFB30
 7765 0104 20000000 		.4byte	.LFE30-.LFB30
 7766 0108 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 189


 7767 010c 20000000 		.4byte	.LFE31-.LFB31
 7768 0110 00000000 		.4byte	.LFB32
 7769 0114 20000000 		.4byte	.LFE32-.LFB32
 7770 0118 00000000 		.4byte	.LFB33
 7771 011c 28000000 		.4byte	.LFE33-.LFB33
 7772 0120 00000000 		.4byte	.LFB34
 7773 0124 20000000 		.4byte	.LFE34-.LFB34
 7774 0128 00000000 		.4byte	.LFB35
 7775 012c 20000000 		.4byte	.LFE35-.LFB35
 7776 0130 00000000 		.4byte	.LFB36
 7777 0134 34000000 		.4byte	.LFE36-.LFB36
 7778 0138 00000000 		.4byte	.LFB37
 7779 013c 34000000 		.4byte	.LFE37-.LFB37
 7780 0140 00000000 		.4byte	.LFB38
 7781 0144 38000000 		.4byte	.LFE38-.LFB38
 7782 0148 00000000 		.4byte	.LFB39
 7783 014c 16000000 		.4byte	.LFE39-.LFB39
 7784 0150 00000000 		.4byte	.LFB40
 7785 0154 20000000 		.4byte	.LFE40-.LFB40
 7786 0158 00000000 		.4byte	.LFB41
 7787 015c 44000000 		.4byte	.LFE41-.LFB41
 7788 0160 00000000 		.4byte	.LFB42
 7789 0164 24000000 		.4byte	.LFE42-.LFB42
 7790 0168 00000000 		.4byte	.LFB43
 7791 016c 7C000000 		.4byte	.LFE43-.LFB43
 7792 0170 00000000 		.4byte	.LFB44
 7793 0174 8C000000 		.4byte	.LFE44-.LFB44
 7794 0178 00000000 		.4byte	.LFB45
 7795 017c 18000000 		.4byte	.LFE45-.LFB45
 7796 0180 00000000 		.4byte	.LFB46
 7797 0184 CC000000 		.4byte	.LFE46-.LFB46
 7798 0188 00000000 		.4byte	.LFB47
 7799 018c C8000000 		.4byte	.LFE47-.LFB47
 7800 0190 00000000 		.4byte	.LFB48
 7801 0194 48000000 		.4byte	.LFE48-.LFB48
 7802 0198 00000000 		.4byte	.LFB49
 7803 019c 40000000 		.4byte	.LFE49-.LFB49
 7804 01a0 00000000 		.4byte	.LFB50
 7805 01a4 78000000 		.4byte	.LFE50-.LFB50
 7806 01a8 00000000 		.4byte	.LFB51
 7807 01ac 2C000000 		.4byte	.LFE51-.LFB51
 7808 01b0 00000000 		.4byte	.LFB52
 7809 01b4 5C000000 		.4byte	.LFE52-.LFB52
 7810 01b8 00000000 		.4byte	.LFB53
 7811 01bc 30000000 		.4byte	.LFE53-.LFB53
 7812 01c0 00000000 		.4byte	.LFB54
 7813 01c4 34000000 		.4byte	.LFE54-.LFB54
 7814 01c8 00000000 		.4byte	.LFB55
 7815 01cc 28000000 		.4byte	.LFE55-.LFB55
 7816 01d0 00000000 		.4byte	.LFB56
 7817 01d4 58000000 		.4byte	.LFE56-.LFB56
 7818 01d8 00000000 		.4byte	.LFB57
 7819 01dc 4C000000 		.4byte	.LFE57-.LFB57
 7820 01e0 00000000 		.4byte	.LFB58
 7821 01e4 38000000 		.4byte	.LFE58-.LFB58
 7822 01e8 00000000 		.4byte	.LFB59
 7823 01ec 50000000 		.4byte	.LFE59-.LFB59
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 190


 7824 01f0 00000000 		.4byte	.LFB60
 7825 01f4 38000000 		.4byte	.LFE60-.LFB60
 7826 01f8 00000000 		.4byte	.LFB61
 7827 01fc 44000000 		.4byte	.LFE61-.LFB61
 7828 0200 00000000 		.4byte	.LFB62
 7829 0204 36000000 		.4byte	.LFE62-.LFB62
 7830 0208 00000000 		.4byte	.LFB63
 7831 020c 44000000 		.4byte	.LFE63-.LFB63
 7832 0210 00000000 		.4byte	.LFB64
 7833 0214 20000000 		.4byte	.LFE64-.LFB64
 7834 0218 00000000 		.4byte	.LFB65
 7835 021c 68000000 		.4byte	.LFE65-.LFB65
 7836 0220 00000000 		.4byte	.LFB66
 7837 0224 1C000000 		.4byte	.LFE66-.LFB66
 7838 0228 00000000 		.4byte	.LFB67
 7839 022c 1C000000 		.4byte	.LFE67-.LFB67
 7840 0230 00000000 		.4byte	.LFB68
 7841 0234 1C000000 		.4byte	.LFE68-.LFB68
 7842 0238 00000000 		.4byte	.LFB69
 7843 023c 1C000000 		.4byte	.LFE69-.LFB69
 7844 0240 00000000 		.4byte	.LFB70
 7845 0244 20000000 		.4byte	.LFE70-.LFB70
 7846 0248 00000000 		.4byte	.LFB71
 7847 024c 1C000000 		.4byte	.LFE71-.LFB71
 7848 0250 00000000 		.4byte	.LFB72
 7849 0254 1C000000 		.4byte	.LFE72-.LFB72
 7850 0258 00000000 		.4byte	.LFB73
 7851 025c 38000000 		.4byte	.LFE73-.LFB73
 7852 0260 00000000 		.4byte	.LFB74
 7853 0264 1C000000 		.4byte	.LFE74-.LFB74
 7854 0268 00000000 		.4byte	.LFB75
 7855 026c 1C000000 		.4byte	.LFE75-.LFB75
 7856 0270 00000000 		.4byte	.LFB76
 7857 0274 18000000 		.4byte	.LFE76-.LFB76
 7858 0278 00000000 		.4byte	.LFB77
 7859 027c 30000000 		.4byte	.LFE77-.LFB77
 7860 0280 00000000 		.4byte	.LFB78
 7861 0284 20000000 		.4byte	.LFE78-.LFB78
 7862 0288 00000000 		.4byte	.LFB79
 7863 028c 44000000 		.4byte	.LFE79-.LFB79
 7864 0290 00000000 		.4byte	.LFB80
 7865 0294 C4000000 		.4byte	.LFE80-.LFB80
 7866 0298 00000000 		.4byte	0
 7867 029c 00000000 		.4byte	0
 7868              		.section	.debug_ranges,"",%progbits
 7869              	.Ldebug_ranges0:
 7870 0000 00000000 		.4byte	.LFB0
 7871 0004 B0000000 		.4byte	.LFE0
 7872 0008 00000000 		.4byte	.LFB1
 7873 000c 20000000 		.4byte	.LFE1
 7874 0010 00000000 		.4byte	.LFB2
 7875 0014 90000000 		.4byte	.LFE2
 7876 0018 00000000 		.4byte	.LFB3
 7877 001c 54000000 		.4byte	.LFE3
 7878 0020 00000000 		.4byte	.LFB4
 7879 0024 94000000 		.4byte	.LFE4
 7880 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 191


 7881 002c 34000000 		.4byte	.LFE5
 7882 0030 00000000 		.4byte	.LFB6
 7883 0034 60000000 		.4byte	.LFE6
 7884 0038 00000000 		.4byte	.LFB7
 7885 003c 08010000 		.4byte	.LFE7
 7886 0040 00000000 		.4byte	.LFB8
 7887 0044 AC010000 		.4byte	.LFE8
 7888 0048 00000000 		.4byte	.LFB9
 7889 004c 8C000000 		.4byte	.LFE9
 7890 0050 00000000 		.4byte	.LFB10
 7891 0054 20000000 		.4byte	.LFE10
 7892 0058 00000000 		.4byte	.LFB11
 7893 005c 20000000 		.4byte	.LFE11
 7894 0060 00000000 		.4byte	.LFB12
 7895 0064 34000000 		.4byte	.LFE12
 7896 0068 00000000 		.4byte	.LFB13
 7897 006c 20000000 		.4byte	.LFE13
 7898 0070 00000000 		.4byte	.LFB14
 7899 0074 78000000 		.4byte	.LFE14
 7900 0078 00000000 		.4byte	.LFB15
 7901 007c B4000000 		.4byte	.LFE15
 7902 0080 00000000 		.4byte	.LFB16
 7903 0084 34000000 		.4byte	.LFE16
 7904 0088 00000000 		.4byte	.LFB17
 7905 008c 20000000 		.4byte	.LFE17
 7906 0090 00000000 		.4byte	.LFB18
 7907 0094 20000000 		.4byte	.LFE18
 7908 0098 00000000 		.4byte	.LFB19
 7909 009c 20000000 		.4byte	.LFE19
 7910 00a0 00000000 		.4byte	.LFB20
 7911 00a4 20000000 		.4byte	.LFE20
 7912 00a8 00000000 		.4byte	.LFB21
 7913 00ac 20000000 		.4byte	.LFE21
 7914 00b0 00000000 		.4byte	.LFB22
 7915 00b4 20000000 		.4byte	.LFE22
 7916 00b8 00000000 		.4byte	.LFB23
 7917 00bc 38000000 		.4byte	.LFE23
 7918 00c0 00000000 		.4byte	.LFB24
 7919 00c4 4C000000 		.4byte	.LFE24
 7920 00c8 00000000 		.4byte	.LFB25
 7921 00cc 84000000 		.4byte	.LFE25
 7922 00d0 00000000 		.4byte	.LFB26
 7923 00d4 50000000 		.4byte	.LFE26
 7924 00d8 00000000 		.4byte	.LFB27
 7925 00dc 20000000 		.4byte	.LFE27
 7926 00e0 00000000 		.4byte	.LFB28
 7927 00e4 B4000000 		.4byte	.LFE28
 7928 00e8 00000000 		.4byte	.LFB29
 7929 00ec D0000000 		.4byte	.LFE29
 7930 00f0 00000000 		.4byte	.LFB30
 7931 00f4 20000000 		.4byte	.LFE30
 7932 00f8 00000000 		.4byte	.LFB31
 7933 00fc 20000000 		.4byte	.LFE31
 7934 0100 00000000 		.4byte	.LFB32
 7935 0104 20000000 		.4byte	.LFE32
 7936 0108 00000000 		.4byte	.LFB33
 7937 010c 28000000 		.4byte	.LFE33
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 192


 7938 0110 00000000 		.4byte	.LFB34
 7939 0114 20000000 		.4byte	.LFE34
 7940 0118 00000000 		.4byte	.LFB35
 7941 011c 20000000 		.4byte	.LFE35
 7942 0120 00000000 		.4byte	.LFB36
 7943 0124 34000000 		.4byte	.LFE36
 7944 0128 00000000 		.4byte	.LFB37
 7945 012c 34000000 		.4byte	.LFE37
 7946 0130 00000000 		.4byte	.LFB38
 7947 0134 38000000 		.4byte	.LFE38
 7948 0138 00000000 		.4byte	.LFB39
 7949 013c 16000000 		.4byte	.LFE39
 7950 0140 00000000 		.4byte	.LFB40
 7951 0144 20000000 		.4byte	.LFE40
 7952 0148 00000000 		.4byte	.LFB41
 7953 014c 44000000 		.4byte	.LFE41
 7954 0150 00000000 		.4byte	.LFB42
 7955 0154 24000000 		.4byte	.LFE42
 7956 0158 00000000 		.4byte	.LFB43
 7957 015c 7C000000 		.4byte	.LFE43
 7958 0160 00000000 		.4byte	.LFB44
 7959 0164 8C000000 		.4byte	.LFE44
 7960 0168 00000000 		.4byte	.LFB45
 7961 016c 18000000 		.4byte	.LFE45
 7962 0170 00000000 		.4byte	.LFB46
 7963 0174 CC000000 		.4byte	.LFE46
 7964 0178 00000000 		.4byte	.LFB47
 7965 017c C8000000 		.4byte	.LFE47
 7966 0180 00000000 		.4byte	.LFB48
 7967 0184 48000000 		.4byte	.LFE48
 7968 0188 00000000 		.4byte	.LFB49
 7969 018c 40000000 		.4byte	.LFE49
 7970 0190 00000000 		.4byte	.LFB50
 7971 0194 78000000 		.4byte	.LFE50
 7972 0198 00000000 		.4byte	.LFB51
 7973 019c 2C000000 		.4byte	.LFE51
 7974 01a0 00000000 		.4byte	.LFB52
 7975 01a4 5C000000 		.4byte	.LFE52
 7976 01a8 00000000 		.4byte	.LFB53
 7977 01ac 30000000 		.4byte	.LFE53
 7978 01b0 00000000 		.4byte	.LFB54
 7979 01b4 34000000 		.4byte	.LFE54
 7980 01b8 00000000 		.4byte	.LFB55
 7981 01bc 28000000 		.4byte	.LFE55
 7982 01c0 00000000 		.4byte	.LFB56
 7983 01c4 58000000 		.4byte	.LFE56
 7984 01c8 00000000 		.4byte	.LFB57
 7985 01cc 4C000000 		.4byte	.LFE57
 7986 01d0 00000000 		.4byte	.LFB58
 7987 01d4 38000000 		.4byte	.LFE58
 7988 01d8 00000000 		.4byte	.LFB59
 7989 01dc 50000000 		.4byte	.LFE59
 7990 01e0 00000000 		.4byte	.LFB60
 7991 01e4 38000000 		.4byte	.LFE60
 7992 01e8 00000000 		.4byte	.LFB61
 7993 01ec 44000000 		.4byte	.LFE61
 7994 01f0 00000000 		.4byte	.LFB62
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 193


 7995 01f4 36000000 		.4byte	.LFE62
 7996 01f8 00000000 		.4byte	.LFB63
 7997 01fc 44000000 		.4byte	.LFE63
 7998 0200 00000000 		.4byte	.LFB64
 7999 0204 20000000 		.4byte	.LFE64
 8000 0208 00000000 		.4byte	.LFB65
 8001 020c 68000000 		.4byte	.LFE65
 8002 0210 00000000 		.4byte	.LFB66
 8003 0214 1C000000 		.4byte	.LFE66
 8004 0218 00000000 		.4byte	.LFB67
 8005 021c 1C000000 		.4byte	.LFE67
 8006 0220 00000000 		.4byte	.LFB68
 8007 0224 1C000000 		.4byte	.LFE68
 8008 0228 00000000 		.4byte	.LFB69
 8009 022c 1C000000 		.4byte	.LFE69
 8010 0230 00000000 		.4byte	.LFB70
 8011 0234 20000000 		.4byte	.LFE70
 8012 0238 00000000 		.4byte	.LFB71
 8013 023c 1C000000 		.4byte	.LFE71
 8014 0240 00000000 		.4byte	.LFB72
 8015 0244 1C000000 		.4byte	.LFE72
 8016 0248 00000000 		.4byte	.LFB73
 8017 024c 38000000 		.4byte	.LFE73
 8018 0250 00000000 		.4byte	.LFB74
 8019 0254 1C000000 		.4byte	.LFE74
 8020 0258 00000000 		.4byte	.LFB75
 8021 025c 1C000000 		.4byte	.LFE75
 8022 0260 00000000 		.4byte	.LFB76
 8023 0264 18000000 		.4byte	.LFE76
 8024 0268 00000000 		.4byte	.LFB77
 8025 026c 30000000 		.4byte	.LFE77
 8026 0270 00000000 		.4byte	.LFB78
 8027 0274 20000000 		.4byte	.LFE78
 8028 0278 00000000 		.4byte	.LFB79
 8029 027c 44000000 		.4byte	.LFE79
 8030 0280 00000000 		.4byte	.LFB80
 8031 0284 C4000000 		.4byte	.LFE80
 8032 0288 00000000 		.4byte	0
 8033 028c 00000000 		.4byte	0
 8034              		.section	.debug_line,"",%progbits
 8035              	.Ldebug_line0:
 8036 0000 7E080000 		.section	.debug_str,"MS",%progbits,1
 8036      02004D00 
 8036      00000201 
 8036      FB0E0D00 
 8036      01010101 
 8037              	.LASF126:
 8038 0000 4379496E 		.ascii	"CyIntGetVector\000"
 8038      74476574 
 8038      56656374 
 8038      6F7200
 8039              	.LASF146:
 8040 000f 43795379 		.ascii	"CySysTickClear\000"
 8040      73546963 
 8040      6B436C65 
 8040      617200
 8041              	.LASF91:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 194


 8042 001e 43794465 		.ascii	"CyDelay\000"
 8042      6C617900 
 8043              	.LASF127:
 8044 0026 4379496E 		.ascii	"CyIntSetPriority\000"
 8044      74536574 
 8044      5072696F 
 8044      72697479 
 8044      00
 8045              	.LASF51:
 8046 0037 4379494D 		.ascii	"CyIMO_SetTrimValue\000"
 8046      4F5F5365 
 8046      74547269 
 8046      6D56616C 
 8046      756500
 8047              	.LASF81:
 8048 004a 43795854 		.ascii	"CyXTAL_ReadStatus\000"
 8048      414C5F52 
 8048      65616453 
 8048      74617475 
 8048      7300
 8049              	.LASF129:
 8050 005c 4379496E 		.ascii	"CyIntGetPriority\000"
 8050      74476574 
 8050      5072696F 
 8050      72697479 
 8050      00
 8051              	.LASF99:
 8052 006d 43795764 		.ascii	"CyWdtClear\000"
 8052      74436C65 
 8052      617200
 8053              	.LASF162:
 8054 0078 47656E65 		.ascii	"Generated_Source\\PSoC5\\CyLib.c\000"
 8054      72617465 
 8054      645F536F 
 8054      75726365 
 8054      5C50536F 
 8055              	.LASF158:
 8056 0097 63796465 		.ascii	"cydelay_freq_mhz\000"
 8056      6C61795F 
 8056      66726571 
 8056      5F6D687A 
 8056      00
 8057              	.LASF92:
 8058 00a8 6D696C6C 		.ascii	"milliseconds\000"
 8058      69736563 
 8058      6F6E6473 
 8058      00
 8059              	.LASF63:
 8060 00b5 4379494C 		.ascii	"CyILO_Disable33K\000"
 8060      4F5F4469 
 8060      7361626C 
 8060      6533334B 
 8060      00
 8061              	.LASF30:
 8062 00c6 4379504C 		.ascii	"CyPLL_OUT_SetPQ\000"
 8062      4C5F4F55 
 8062      545F5365 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 195


 8062      74505100 
 8063              	.LASF75:
 8064 00d6 706D5477 		.ascii	"pmTwCfg0Tmp\000"
 8064      43666730 
 8064      546D7000 
 8065              	.LASF34:
 8066 00e2 706D4674 		.ascii	"pmFtwCfg2Reg\000"
 8066      77436667 
 8066      32526567 
 8066      00
 8067              	.LASF0:
 8068 00ef 756E7369 		.ascii	"unsigned int\000"
 8068      676E6564 
 8068      20696E74 
 8068      00
 8069              	.LASF54:
 8070 00fc 6D617374 		.ascii	"masterClkDiv\000"
 8070      6572436C 
 8070      6B446976 
 8070      00
 8071              	.LASF79:
 8072 0109 43795854 		.ascii	"CyXTAL_DisableErrStatus\000"
 8072      414C5F44 
 8072      69736162 
 8072      6C654572 
 8072      72537461 
 8073              	.LASF110:
 8074 0121 6D61736B 		.ascii	"mask\000"
 8074      00
 8075              	.LASF98:
 8076 0126 6C704D6F 		.ascii	"lpMode\000"
 8076      646500
 8077              	.LASF56:
 8078 012d 696E7465 		.ascii	"interruptState\000"
 8078      72727570 
 8078      74537461 
 8078      746500
 8079              	.LASF17:
 8080 013c 72656738 		.ascii	"reg8\000"
 8080      00
 8081              	.LASF97:
 8082 0141 7469636B 		.ascii	"ticks\000"
 8082      7300
 8083              	.LASF84:
 8084 0147 43795854 		.ascii	"CyXTAL_SetStartup\000"
 8084      414C5F53 
 8084      65745374 
 8084      61727475 
 8084      7000
 8085              	.LASF59:
 8086 0159 4379494C 		.ascii	"CyILO_Stop1K\000"
 8086      4F5F5374 
 8086      6F70314B 
 8086      00
 8087              	.LASF67:
 8088 0166 6D6F6465 		.ascii	"mode\000"
 8088      00
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 196


 8089              	.LASF160:
 8090 016b 43795379 		.ascii	"CySysTickInitVar\000"
 8090      73546963 
 8090      6B496E69 
 8090      74566172 
 8090      00
 8091              	.LASF46:
 8092 017c 4379494D 		.ascii	"CyIMO_EnableDoubler\000"
 8092      4F5F456E 
 8092      61626C65 
 8092      446F7562 
 8092      6C657200 
 8093              	.LASF27:
 8094 0190 70446976 		.ascii	"pDiv\000"
 8094      00
 8095              	.LASF147:
 8096 0195 43795379 		.ascii	"CySysTickSetCallback\000"
 8096      73546963 
 8096      6B536574 
 8096      43616C6C 
 8096      6261636B 
 8097              	.LASF105:
 8098 01aa 43795664 		.ascii	"CyVdLvDigitDisable\000"
 8098      4C764469 
 8098      67697444 
 8098      69736162 
 8098      6C6500
 8099              	.LASF77:
 8100 01bd 43795854 		.ascii	"CyXTAL_Stop\000"
 8100      414C5F53 
 8100      746F7000 
 8101              	.LASF117:
 8102 01c9 4379456E 		.ascii	"CyEnableInts\000"
 8102      61626C65 
 8102      496E7473 
 8102      00
 8103              	.LASF83:
 8104 01d6 43795854 		.ascii	"CyXTAL_DisableFaultRecovery\000"
 8104      414C5F44 
 8104      69736162 
 8104      6C654661 
 8104      756C7452 
 8105              	.LASF103:
 8106 01f2 696E7452 		.ascii	"intRegTmp\000"
 8106      6567546D 
 8106      7000
 8107              	.LASF42:
 8108 01fc 4379494D 		.ascii	"CyIMO_SetFreq\000"
 8108      4F5F5365 
 8108      74467265 
 8108      7100
 8109              	.LASF85:
 8110 020a 73657474 		.ascii	"setting\000"
 8110      696E6700 
 8111              	.LASF76:
 8112 0212 706D5477 		.ascii	"pmTwCfg2Tmp\000"
 8112      43666732 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 197


 8112      546D7000 
 8113              	.LASF163:
 8114 021e 433A5C53 		.ascii	"C:\\SVN\\apps\\trunk\\Cypress Academy\\PSoC-121-Ana"
 8114      564E5C61 
 8114      7070735C 
 8114      7472756E 
 8114      6B5C4379 
 8115 024c 6C6F675C 		.ascii	"log\\Scope\\KEES_Scope\\PSoC\\Scope.cydsn\000"
 8115      53636F70 
 8115      655C4B45 
 8115      45535F53 
 8115      636F7065 
 8116              	.LASF14:
 8117 0272 666C6F61 		.ascii	"float\000"
 8117      7400
 8118              	.LASF49:
 8119 0278 43794D61 		.ascii	"CyMasterClk_SetDivider\000"
 8119      73746572 
 8119      436C6B5F 
 8119      53657444 
 8119      69766964 
 8120              	.LASF37:
 8121 028f 4379504C 		.ascii	"CyPLL_OUT_Stop\000"
 8121      4C5F4F55 
 8121      545F5374 
 8121      6F7000
 8122              	.LASF140:
 8123 029e 43795379 		.ascii	"CySysTickGetReload\000"
 8123      73546963 
 8123      6B476574 
 8123      52656C6F 
 8123      616400
 8124              	.LASF44:
 8125 02b1 6E657874 		.ascii	"nextFreq\000"
 8125      46726571 
 8125      00
 8126              	.LASF157:
 8127 02ba 63796465 		.ascii	"cydelay_freq_khz\000"
 8127      6C61795F 
 8127      66726571 
 8127      5F6B687A 
 8127      00
 8128              	.LASF93:
 8129 02cb 43794465 		.ascii	"CyDelayUs\000"
 8129      6C617955 
 8129      7300
 8130              	.LASF8:
 8131 02d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 8131      206C6F6E 
 8131      6720756E 
 8131      7369676E 
 8131      65642069 
 8132              	.LASF89:
 8133 02ec 72656173 		.ascii	"reason\000"
 8133      6F6E00
 8134              	.LASF69:
 8135 02f3 43795854 		.ascii	"CyXTAL_32KHZ_Start\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 198


 8135      414C5F33 
 8135      324B485A 
 8135      5F537461 
 8135      727400
 8136              	.LASF72:
 8137 0306 43795854 		.ascii	"CyXTAL_Start\000"
 8137      414C5F53 
 8137      74617274 
 8137      00
 8138              	.LASF71:
 8139 0313 43795854 		.ascii	"CyXTAL_32KHZ_SetPowerMode\000"
 8139      414C5F33 
 8139      324B485A 
 8139      5F536574 
 8139      506F7765 
 8140              	.LASF136:
 8141 032d 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 8141      73546963 
 8141      6B456E61 
 8141      626C6549 
 8141      6E746572 
 8142              	.LASF52:
 8143 0346 43794275 		.ascii	"CyBusClk_Internal_SetDivider\000"
 8143      73436C6B 
 8143      5F496E74 
 8143      65726E61 
 8143      6C5F5365 
 8144              	.LASF135:
 8145 0363 43795379 		.ascii	"CySysTickStop\000"
 8145      73546963 
 8145      6B53746F 
 8145      7000
 8146              	.LASF130:
 8147 0371 4379496E 		.ascii	"CyIntGetState\000"
 8147      74476574 
 8147      53746174 
 8147      6500
 8148              	.LASF38:
 8149 037f 4379494D 		.ascii	"CyIMO_Stop\000"
 8149      4F5F5374 
 8149      6F7000
 8150              	.LASF150:
 8151 038a 43795379 		.ascii	"CySysTickGetCallback\000"
 8151      73546963 
 8151      6B476574 
 8151      43616C6C 
 8151      6261636B 
 8152              	.LASF104:
 8153 039f 43795664 		.ascii	"CyVdLvAnalogEnable\000"
 8153      4C76416E 
 8153      616C6F67 
 8153      456E6162 
 8153      6C6500
 8154              	.LASF122:
 8155 03b2 6F6C6449 		.ascii	"oldIsr\000"
 8155      737200
 8156              	.LASF55:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 199


 8157 03b9 62757343 		.ascii	"busClkDiv\000"
 8157      6C6B4469 
 8157      7600
 8158              	.LASF43:
 8159 03c3 63757272 		.ascii	"currentFreq\000"
 8159      656E7446 
 8159      72657100 
 8160              	.LASF114:
 8161 03cf 7664466C 		.ascii	"vdFlagsState\000"
 8161      61677353 
 8161      74617465 
 8161      00
 8162              	.LASF58:
 8163 03dc 4379494C 		.ascii	"CyILO_Start1K\000"
 8163      4F5F5374 
 8163      61727431 
 8163      4B00
 8164              	.LASF40:
 8165 03ea 66726571 		.ascii	"freq\000"
 8165      00
 8166              	.LASF164:
 8167 03ef 43795553 		.ascii	"CyUSB_PowerOnCheck\000"
 8167      425F506F 
 8167      7765724F 
 8167      6E436865 
 8167      636B00
 8168              	.LASF111:
 8169 0402 696E7465 		.ascii	"interruptStatus\000"
 8169      72727570 
 8169      74537461 
 8169      74757300 
 8170              	.LASF159:
 8171 0412 63796465 		.ascii	"cydelay_32k_ms\000"
 8171      6C61795F 
 8171      33326B5F 
 8171      6D7300
 8172              	.LASF74:
 8173 0421 636F756E 		.ascii	"count\000"
 8173      7400
 8174              	.LASF21:
 8175 0427 63795379 		.ascii	"cySysTickCallback\000"
 8175      73546963 
 8175      6B43616C 
 8175      6C626163 
 8175      6B00
 8176              	.LASF10:
 8177 0439 63686172 		.ascii	"char\000"
 8177      00
 8178              	.LASF145:
 8179 043e 43795379 		.ascii	"CySysTickGetCountFlag\000"
 8179      73546963 
 8179      6B476574 
 8179      436F756E 
 8179      74466C61 
 8180              	.LASF65:
 8181 0454 4379504C 		.ascii	"CyPLL_OUT_Start\000"
 8181      4C5F4F55 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 200


 8181      545F5374 
 8181      61727400 
 8182              	.LASF116:
 8183 0464 696E7453 		.ascii	"intState\000"
 8183      74617465 
 8183      00
 8184              	.LASF12:
 8185 046d 75696E74 		.ascii	"uint16\000"
 8185      313600
 8186              	.LASF39:
 8187 0474 706F7765 		.ascii	"poweredOn\000"
 8187      7265644F 
 8187      6E00
 8188              	.LASF125:
 8189 047e 4379496E 		.ascii	"CyIntSetVector\000"
 8189      74536574 
 8189      56656374 
 8189      6F7200
 8190              	.LASF22:
 8191 048d 73746174 		.ascii	"status\000"
 8191      757300
 8192              	.LASF100:
 8193 0494 43795664 		.ascii	"CyVdLvDigitEnable\000"
 8193      4C764469 
 8193      67697445 
 8193      6E61626C 
 8193      6500
 8194              	.LASF156:
 8195 04a6 63796465 		.ascii	"cydelay_freq_hz\000"
 8195      6C61795F 
 8195      66726571 
 8195      5F687A00 
 8196              	.LASF107:
 8197 04b6 43795664 		.ascii	"CyVdHvAnalogEnable\000"
 8197      4876416E 
 8197      616C6F67 
 8197      456E6162 
 8197      6C6500
 8198              	.LASF64:
 8199 04c9 4379494C 		.ascii	"CyILO_SetSource\000"
 8199      4F5F5365 
 8199      74536F75 
 8199      72636500 
 8200              	.LASF7:
 8201 04d9 6C6F6E67 		.ascii	"long long int\000"
 8201      206C6F6E 
 8201      6720696E 
 8201      7400
 8202              	.LASF18:
 8203 04e7 72656731 		.ascii	"reg16\000"
 8203      3600
 8204              	.LASF134:
 8205 04ed 43795379 		.ascii	"CySysTickEnable\000"
 8205      73546963 
 8205      6B456E61 
 8205      626C6500 
 8206              	.LASF87:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 201


 8207 04fd 43795854 		.ascii	"CyXTAL_SetWdVoltage\000"
 8207      414C5F53 
 8207      65745764 
 8207      566F6C74 
 8207      61676500 
 8208              	.LASF33:
 8209 0511 4379494D 		.ascii	"CyIMO_Start\000"
 8209      4F5F5374 
 8209      61727400 
 8210              	.LASF66:
 8211 051d 4379494C 		.ascii	"CyILO_SetPowerMode\000"
 8211      4F5F5365 
 8211      74506F77 
 8211      65724D6F 
 8211      646500
 8212              	.LASF124:
 8213 0530 4379496E 		.ascii	"CyIntGetSysVector\000"
 8213      74476574 
 8213      53797356 
 8213      6563746F 
 8213      7200
 8214              	.LASF154:
 8215 0542 43795379 		.ascii	"CySysTickCallbacks\000"
 8215      73546963 
 8215      6B43616C 
 8215      6C626163 
 8215      6B7300
 8216              	.LASF161:
 8217 0555 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 8217      4320342E 
 8217      392E3320 
 8217      32303135 
 8217      30333033 
 8218 0588 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 8218      20726576 
 8218      6973696F 
 8218      6E203232 
 8218      31323230 
 8219 05bb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 8219      66756E63 
 8219      74696F6E 
 8219      2D736563 
 8219      74696F6E 
 8220              	.LASF24:
 8221 05e3 706D5477 		.ascii	"pmTwCfg0State\000"
 8221      43666730 
 8221      53746174 
 8221      6500
 8222              	.LASF20:
 8223 05f1 63796973 		.ascii	"cyisraddress\000"
 8223      72616464 
 8223      72657373 
 8223      00
 8224              	.LASF78:
 8225 05fe 43795854 		.ascii	"CyXTAL_EnableErrStatus\000"
 8225      414C5F45 
 8225      6E61626C 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 202


 8225      65457272 
 8225      53746174 
 8226              	.LASF13:
 8227 0615 75696E74 		.ascii	"uint32\000"
 8227      333200
 8228              	.LASF141:
 8229 061c 43795379 		.ascii	"CySysTickGetValue\000"
 8229      73546963 
 8229      6B476574 
 8229      56616C75 
 8229      6500
 8230              	.LASF132:
 8231 062e 43795379 		.ascii	"CySysTickStart\000"
 8231      73546963 
 8231      6B537461 
 8231      727400
 8232              	.LASF151:
 8233 063d 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 8233      73546963 
 8233      6B536572 
 8233      76696365 
 8233      43616C6C 
 8234              	.LASF80:
 8235 0657 43795854 		.ascii	"CyXTAL_32KHZ_ReadStatus\000"
 8235      414C5F33 
 8235      324B485A 
 8235      5F526561 
 8235      64537461 
 8236              	.LASF142:
 8237 066f 43795379 		.ascii	"CySysTickSetClockSource\000"
 8237      73546963 
 8237      6B536574 
 8237      436C6F63 
 8237      6B536F75 
 8238              	.LASF96:
 8239 0687 43795764 		.ascii	"CyWdtStart\000"
 8239      74537461 
 8239      727400
 8240              	.LASF26:
 8241 0692 77616974 		.ascii	"wait\000"
 8241      00
 8242              	.LASF70:
 8243 0697 43795854 		.ascii	"CyXTAL_32KHZ_Stop\000"
 8243      414C5F33 
 8243      324B485A 
 8243      5F53746F 
 8243      7000
 8244              	.LASF48:
 8245 06a9 43794D61 		.ascii	"CyMasterClk_SetSource\000"
 8245      73746572 
 8245      436C6B5F 
 8245      53657453 
 8245      6F757263 
 8246              	.LASF60:
 8247 06bf 4379494C 		.ascii	"CyILO_Start100K\000"
 8247      4F5F5374 
 8247      61727431 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 203


 8247      30304B00 
 8248              	.LASF47:
 8249 06cf 4379494D 		.ascii	"CyIMO_DisableDoubler\000"
 8249      4F5F4469 
 8249      7361626C 
 8249      65446F75 
 8249      626C6572 
 8250              	.LASF118:
 8251 06e4 4379466C 		.ascii	"CyFlushCache\000"
 8251      75736843 
 8251      61636865 
 8251      00
 8252              	.LASF115:
 8253 06f1 43794469 		.ascii	"CyDisableInts\000"
 8253      7361626C 
 8253      65496E74 
 8253      7300
 8254              	.LASF19:
 8255 06ff 72656733 		.ascii	"reg32\000"
 8255      3200
 8256              	.LASF143:
 8257 0705 636C6F63 		.ascii	"clockSource\000"
 8257      6B536F75 
 8257      72636500 
 8258              	.LASF41:
 8259 0711 75736250 		.ascii	"usbPowerOn\000"
 8259      6F776572 
 8259      4F6E00
 8260              	.LASF31:
 8261 071c 4379504C 		.ascii	"CyPLL_OUT_SetSource\000"
 8261      4C5F4F55 
 8261      545F5365 
 8261      74536F75 
 8261      72636500 
 8262              	.LASF138:
 8263 0730 43795379 		.ascii	"CySysTickSetReload\000"
 8263      73546963 
 8263      6B536574 
 8263      52656C6F 
 8263      616400
 8264              	.LASF3:
 8265 0743 73686F72 		.ascii	"short int\000"
 8265      7420696E 
 8265      7400
 8266              	.LASF50:
 8267 074d 64697669 		.ascii	"divider\000"
 8267      64657200 
 8268              	.LASF5:
 8269 0755 6C6F6E67 		.ascii	"long int\000"
 8269      20696E74 
 8269      00
 8270              	.LASF95:
 8271 075e 43794465 		.ascii	"CyDelayFreq\000"
 8271      6C617946 
 8271      72657100 
 8272              	.LASF131:
 8273 076a 73746174 		.ascii	"stateReg\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 204


 8273      65526567 
 8273      00
 8274              	.LASF119:
 8275 0773 4379496E 		.ascii	"CyIntSetSysVector\000"
 8275      74536574 
 8275      53797356 
 8275      6563746F 
 8275      7200
 8276              	.LASF128:
 8277 0785 7072696F 		.ascii	"priority\000"
 8277      72697479 
 8277      00
 8278              	.LASF155:
 8279 078e 43795265 		.ascii	"CyResetStatus\000"
 8279      73657453 
 8279      74617475 
 8279      7300
 8280              	.LASF137:
 8281 079c 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 8281      73546963 
 8281      6B446973 
 8281      61626C65 
 8281      496E7465 
 8282              	.LASF25:
 8283 07b6 706D5477 		.ascii	"pmTwCfg2State\000"
 8283      43666732 
 8283      53746174 
 8283      6500
 8284              	.LASF106:
 8285 07c4 43795664 		.ascii	"CyVdLvAnalogDisable\000"
 8285      4C76416E 
 8285      616C6F67 
 8285      44697361 
 8285      626C6500 
 8286              	.LASF28:
 8287 07d8 71446976 		.ascii	"qDiv\000"
 8287      00
 8288              	.LASF101:
 8289 07dd 72657365 		.ascii	"reset\000"
 8289      7400
 8290              	.LASF32:
 8291 07e3 736F7572 		.ascii	"source\000"
 8291      636500
 8292              	.LASF120:
 8293 07ea 6E756D62 		.ascii	"number\000"
 8293      657200
 8294              	.LASF133:
 8295 07f1 43795379 		.ascii	"CySysTickInit\000"
 8295      73546963 
 8295      6B496E69 
 8295      7400
 8296              	.LASF9:
 8297 07ff 73697A65 		.ascii	"sizetype\000"
 8297      74797065 
 8297      00
 8298              	.LASF6:
 8299 0808 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 205


 8299      20756E73 
 8299      69676E65 
 8299      6420696E 
 8299      7400
 8300              	.LASF149:
 8301 081a 72657456 		.ascii	"retVal\000"
 8301      616C00
 8302              	.LASF121:
 8303 0821 61646472 		.ascii	"address\000"
 8303      65737300 
 8304              	.LASF109:
 8305 0829 43795664 		.ascii	"CyVdStickyStatus\000"
 8305      53746963 
 8305      6B795374 
 8305      61747573 
 8305      00
 8306              	.LASF36:
 8307 083a 696C6F31 		.ascii	"ilo100KhzEnable\000"
 8307      30304B68 
 8307      7A456E61 
 8307      626C6500 
 8308              	.LASF144:
 8309 084a 43795379 		.ascii	"CySysTickGetClockSource\000"
 8309      73546963 
 8309      6B476574 
 8309      436C6F63 
 8309      6B536F75 
 8310              	.LASF90:
 8311 0862 4379536F 		.ascii	"CySoftwareReset\000"
 8311      66747761 
 8311      72655265 
 8311      73657400 
 8312              	.LASF16:
 8313 0872 63797374 		.ascii	"cystatus\000"
 8313      61747573 
 8313      00
 8314              	.LASF53:
 8315 087b 43794275 		.ascii	"CyBusClk_SetDivider\000"
 8315      73436C6B 
 8315      5F536574 
 8315      44697669 
 8315      64657200 
 8316              	.LASF2:
 8317 088f 756E7369 		.ascii	"unsigned char\000"
 8317      676E6564 
 8317      20636861 
 8317      7200
 8318              	.LASF123:
 8319 089d 72616D56 		.ascii	"ramVectorTable\000"
 8319      6563746F 
 8319      72546162 
 8319      6C6500
 8320              	.LASF152:
 8321 08ac 43794765 		.ascii	"CyGetUniqueId\000"
 8321      74556E69 
 8321      71756549 
 8321      6400
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 206


 8322              	.LASF148:
 8323 08ba 66756E63 		.ascii	"function\000"
 8323      74696F6E 
 8323      00
 8324              	.LASF73:
 8325 08c3 74696D65 		.ascii	"timeout\000"
 8325      6F757400 
 8326              	.LASF94:
 8327 08cb 6D696372 		.ascii	"microseconds\000"
 8327      6F736563 
 8327      6F6E6473 
 8327      00
 8328              	.LASF88:
 8329 08d8 43794861 		.ascii	"CyHalt\000"
 8329      6C7400
 8330              	.LASF57:
 8331 08df 43795573 		.ascii	"CyUsbClk_SetSource\000"
 8331      62436C6B 
 8331      5F536574 
 8331      536F7572 
 8331      636500
 8332              	.LASF68:
 8333 08f2 73746174 		.ascii	"state\000"
 8333      6500
 8334              	.LASF113:
 8335 08f8 43795664 		.ascii	"CyVdRealTimeStatus\000"
 8335      5265616C 
 8335      54696D65 
 8335      53746174 
 8335      757300
 8336              	.LASF112:
 8337 090b 746D7053 		.ascii	"tmpStatus\000"
 8337      74617475 
 8337      7300
 8338              	.LASF61:
 8339 0915 4379494C 		.ascii	"CyILO_Stop100K\000"
 8339      4F5F5374 
 8339      6F703130 
 8339      304B00
 8340              	.LASF82:
 8341 0924 43795854 		.ascii	"CyXTAL_EnableFaultRecovery\000"
 8341      414C5F45 
 8341      6E61626C 
 8341      65466175 
 8341      6C745265 
 8342              	.LASF86:
 8343 093f 43795854 		.ascii	"CyXTAL_SetFbVoltage\000"
 8343      414C5F53 
 8343      65744662 
 8343      566F6C74 
 8343      61676500 
 8344              	.LASF102:
 8345 0953 74687265 		.ascii	"threshold\000"
 8345      73686F6C 
 8345      6400
 8346              	.LASF1:
 8347 095d 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccRQHRAu.s 			page 207


 8347      65642063 
 8347      68617200 
 8348              	.LASF4:
 8349 0969 73686F72 		.ascii	"short unsigned int\000"
 8349      7420756E 
 8349      7369676E 
 8349      65642069 
 8349      6E7400
 8350              	.LASF35:
 8351 097c 706D4674 		.ascii	"pmFtwCfg0Reg\000"
 8351      77436667 
 8351      30526567 
 8351      00
 8352              	.LASF45:
 8353 0989 4379494D 		.ascii	"CyIMO_SetSource\000"
 8353      4F5F5365 
 8353      74536F75 
 8353      72636500 
 8354              	.LASF153:
 8355 0999 756E6971 		.ascii	"uniqueId\000"
 8355      75654964 
 8355      00
 8356              	.LASF29:
 8357 09a2 63757272 		.ascii	"current\000"
 8357      656E7400 
 8358              	.LASF62:
 8359 09aa 4379494C 		.ascii	"CyILO_Enable33K\000"
 8359      4F5F456E 
 8359      61626C65 
 8359      33334B00 
 8360              	.LASF11:
 8361 09ba 75696E74 		.ascii	"uint8\000"
 8361      3800
 8362              	.LASF15:
 8363 09c0 646F7562 		.ascii	"double\000"
 8363      6C6500
 8364              	.LASF23:
 8365 09c7 696C6F45 		.ascii	"iloEnableState\000"
 8365      6E61626C 
 8365      65537461 
 8365      746500
 8366              	.LASF139:
 8367 09d6 76616C75 		.ascii	"value\000"
 8367      6500
 8368              	.LASF108:
 8369 09dc 43795664 		.ascii	"CyVdHvAnalogDisable\000"
 8369      4876416E 
 8369      616C6F67 
 8369      44697361 
 8369      626C6500 
 8370              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
