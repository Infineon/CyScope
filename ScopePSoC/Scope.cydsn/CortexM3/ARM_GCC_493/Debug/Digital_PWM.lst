ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Digital_PWM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Digital_PWM_initVar
  19              		.bss
  20              		.type	Digital_PWM_initVar, %object
  21              		.size	Digital_PWM_initVar, 1
  22              	Digital_PWM_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.Digital_PWM_Start,"ax",%progbits
  25              		.align	2
  26              		.global	Digital_PWM_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	Digital_PWM_Start, %function
  30              	Digital_PWM_Start:
  31              	.LFB0:
  32              		.file 1 "Generated_Source\\PSoC5\\Digital_PWM.c"
   1:Generated_Source\PSoC5/Digital_PWM.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Digital_PWM.c **** * File Name: Digital_PWM.c
   3:Generated_Source\PSoC5/Digital_PWM.c **** * Version 3.30
   4:Generated_Source\PSoC5/Digital_PWM.c **** *
   5:Generated_Source\PSoC5/Digital_PWM.c **** * Description:
   6:Generated_Source\PSoC5/Digital_PWM.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/Digital_PWM.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/Digital_PWM.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/Digital_PWM.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/Digital_PWM.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/Digital_PWM.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/Digital_PWM.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/Digital_PWM.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/Digital_PWM.c **** *
  15:Generated_Source\PSoC5/Digital_PWM.c **** * Note:
  16:Generated_Source\PSoC5/Digital_PWM.c **** *
  17:Generated_Source\PSoC5/Digital_PWM.c **** *******************************************************************************
  18:Generated_Source\PSoC5/Digital_PWM.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Digital_PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Digital_PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Digital_PWM.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Digital_PWM.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Digital_PWM.c **** 
  24:Generated_Source\PSoC5/Digital_PWM.c **** #include "Digital_PWM.h"
  25:Generated_Source\PSoC5/Digital_PWM.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 2


  26:Generated_Source\PSoC5/Digital_PWM.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/Digital_PWM.c **** #ifdef Digital_PWM_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/Digital_PWM.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/Digital_PWM.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/Digital_PWM.c **** #endif /* Digital_PWM_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/Digital_PWM.c **** 
  32:Generated_Source\PSoC5/Digital_PWM.c **** uint8 Digital_PWM_initVar = 0u;
  33:Generated_Source\PSoC5/Digital_PWM.c **** 
  34:Generated_Source\PSoC5/Digital_PWM.c **** 
  35:Generated_Source\PSoC5/Digital_PWM.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/Digital_PWM.c **** * Function Name: Digital_PWM_Start
  37:Generated_Source\PSoC5/Digital_PWM.c **** ********************************************************************************
  38:Generated_Source\PSoC5/Digital_PWM.c **** *
  39:Generated_Source\PSoC5/Digital_PWM.c **** * Summary:
  40:Generated_Source\PSoC5/Digital_PWM.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/Digital_PWM.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/Digital_PWM.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/Digital_PWM.c **** *
  44:Generated_Source\PSoC5/Digital_PWM.c **** * Parameters:
  45:Generated_Source\PSoC5/Digital_PWM.c **** *  None
  46:Generated_Source\PSoC5/Digital_PWM.c **** *
  47:Generated_Source\PSoC5/Digital_PWM.c **** * Return:
  48:Generated_Source\PSoC5/Digital_PWM.c **** *  None
  49:Generated_Source\PSoC5/Digital_PWM.c **** *
  50:Generated_Source\PSoC5/Digital_PWM.c **** * Global variables:
  51:Generated_Source\PSoC5/Digital_PWM.c **** *  Digital_PWM_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/Digital_PWM.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/Digital_PWM.c **** *
  54:Generated_Source\PSoC5/Digital_PWM.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/Digital_PWM.c **** void Digital_PWM_Start(void) 
  56:Generated_Source\PSoC5/Digital_PWM.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/Digital_PWM.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/Digital_PWM.c ****     if(Digital_PWM_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/Digital_PWM.c ****     {
  60:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	Digital_PWM_Init
  61:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 3


  54              	.L2:
  62:Generated_Source\PSoC5/Digital_PWM.c ****     }
  63:Generated_Source\PSoC5/Digital_PWM.c ****     Digital_PWM_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	Digital_PWM_Enable
  64:Generated_Source\PSoC5/Digital_PWM.c **** 
  65:Generated_Source\PSoC5/Digital_PWM.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	Digital_PWM_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	Digital_PWM_Start, .-Digital_PWM_Start
  66              		.section	.text.Digital_PWM_Init,"ax",%progbits
  67              		.align	2
  68              		.global	Digital_PWM_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	Digital_PWM_Init, %function
  72              	Digital_PWM_Init:
  73              	.LFB1:
  66:Generated_Source\PSoC5/Digital_PWM.c **** 
  67:Generated_Source\PSoC5/Digital_PWM.c **** 
  68:Generated_Source\PSoC5/Digital_PWM.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/Digital_PWM.c **** * Function Name: Digital_PWM_Init
  70:Generated_Source\PSoC5/Digital_PWM.c **** ********************************************************************************
  71:Generated_Source\PSoC5/Digital_PWM.c **** *
  72:Generated_Source\PSoC5/Digital_PWM.c **** * Summary:
  73:Generated_Source\PSoC5/Digital_PWM.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/Digital_PWM.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/Digital_PWM.c **** *  Digital_PWM_Start().
  76:Generated_Source\PSoC5/Digital_PWM.c **** *
  77:Generated_Source\PSoC5/Digital_PWM.c **** * Parameters:
  78:Generated_Source\PSoC5/Digital_PWM.c **** *  None
  79:Generated_Source\PSoC5/Digital_PWM.c **** *
  80:Generated_Source\PSoC5/Digital_PWM.c **** * Return:
  81:Generated_Source\PSoC5/Digital_PWM.c **** *  None
  82:Generated_Source\PSoC5/Digital_PWM.c **** *
  83:Generated_Source\PSoC5/Digital_PWM.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/Digital_PWM.c **** void Digital_PWM_Init(void) 
  85:Generated_Source\PSoC5/Digital_PWM.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_UsingFixedFunction || Digital_PWM_UseControl)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 4


  87:Generated_Source\PSoC5/Digital_PWM.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UsingFixedFunction || Digital_PWM_UseControl) */
  89:Generated_Source\PSoC5/Digital_PWM.c **** 
  90:Generated_Source\PSoC5/Digital_PWM.c ****     #if(!Digital_PWM_UsingFixedFunction)
  91:Generated_Source\PSoC5/Digital_PWM.c ****         #if(Digital_PWM_UseStatus)
  92:Generated_Source\PSoC5/Digital_PWM.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/Digital_PWM.c ****             uint8 Digital_PWM_interruptState;
  94:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_UseStatus) */
  95:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (!Digital_PWM_UsingFixedFunction) */
  96:Generated_Source\PSoC5/Digital_PWM.c **** 
  97:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_UsingFixedFunction)
  98:Generated_Source\PSoC5/Digital_PWM.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_CONTROL |= Digital_PWM_CFG0_MODE;
 100:Generated_Source\PSoC5/Digital_PWM.c ****         #if (Digital_PWM_DeadBand2_4)
 101:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_CONTROL |= Digital_PWM_CFG0_DB;
 102:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_DeadBand2_4) */
 103:Generated_Source\PSoC5/Digital_PWM.c **** 
 104:Generated_Source\PSoC5/Digital_PWM.c ****         ctrl = Digital_PWM_CONTROL3 & ((uint8 )(~Digital_PWM_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_CONTROL3 = ctrl | Digital_PWM_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/Digital_PWM.c **** 
 107:Generated_Source\PSoC5/Digital_PWM.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_RT1 &= ((uint8)(~Digital_PWM_RT1_MASK));
 109:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_RT1 |= Digital_PWM_SYNC;
 110:Generated_Source\PSoC5/Digital_PWM.c **** 
 111:Generated_Source\PSoC5/Digital_PWM.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_RT1 &= ((uint8)(~Digital_PWM_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_RT1 |= Digital_PWM_SYNCDSI_EN;
 114:Generated_Source\PSoC5/Digital_PWM.c **** 
 115:Generated_Source\PSoC5/Digital_PWM.c ****     #elif (Digital_PWM_UseControl)
 116:Generated_Source\PSoC5/Digital_PWM.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/Digital_PWM.c ****         ctrl = Digital_PWM_CONTROL & ((uint8)(~Digital_PWM_CTRL_CMPMODE2_MASK)) &
  86              		.loc 1 117 0
  87 0006 1C4B     		ldr	r3, .L6
  88 0008 1B78     		ldrb	r3, [r3]
  89 000a DBB2     		uxtb	r3, r3
  90 000c 23F03F03 		bic	r3, r3, #63
  91 0010 FB71     		strb	r3, [r7, #7]
 118:Generated_Source\PSoC5/Digital_PWM.c ****                 ((uint8)(~Digital_PWM_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_CONTROL = ctrl | Digital_PWM_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0012 194A     		ldr	r2, .L6
  94 0014 FB79     		ldrb	r3, [r7, #7]
  95 0016 43F01903 		orr	r3, r3, #25
  96 001a DBB2     		uxtb	r3, r3
  97 001c 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/Digital_PWM.c ****                                    Digital_PWM_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UsingFixedFunction) */
 122:Generated_Source\PSoC5/Digital_PWM.c **** 
 123:Generated_Source\PSoC5/Digital_PWM.c ****     #if (!Digital_PWM_UsingFixedFunction)
 124:Generated_Source\PSoC5/Digital_PWM.c ****         #if (Digital_PWM_Resolution == 8)
 125:Generated_Source\PSoC5/Digital_PWM.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_AUX_CONTROLDP0 |= (Digital_PWM_AUX_CTRL_FIFO0_CLR);
  98              		.loc 1 126 0
  99 001e 174A     		ldr	r2, .L6+4
 100 0020 164B     		ldr	r3, .L6+4
 101 0022 1B78     		ldrb	r3, [r3]
 102 0024 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 5


 103 0026 43F00103 		orr	r3, r3, #1
 104 002a DBB2     		uxtb	r3, r3
 105 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/Digital_PWM.c ****         #else /* (Digital_PWM_Resolution == 16)*/
 128:Generated_Source\PSoC5/Digital_PWM.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_AUX_CONTROLDP0 |= (Digital_PWM_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_AUX_CONTROLDP1 |= (Digital_PWM_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_Resolution == 8) */
 132:Generated_Source\PSoC5/Digital_PWM.c **** 
 133:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_WriteCounter(Digital_PWM_INIT_PERIOD_VALUE);
 106              		.loc 1 133 0
 107 002e F920     		movs	r0, #249
 108 0030 FFF7FEFF 		bl	Digital_PWM_WriteCounter
 134:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (!Digital_PWM_UsingFixedFunction) */
 135:Generated_Source\PSoC5/Digital_PWM.c **** 
 136:Generated_Source\PSoC5/Digital_PWM.c ****     Digital_PWM_WritePeriod(Digital_PWM_INIT_PERIOD_VALUE);
 109              		.loc 1 136 0
 110 0034 F920     		movs	r0, #249
 111 0036 FFF7FEFF 		bl	Digital_PWM_WritePeriod
 137:Generated_Source\PSoC5/Digital_PWM.c **** 
 138:Generated_Source\PSoC5/Digital_PWM.c ****         #if (Digital_PWM_UseOneCompareMode)
 139:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_WriteCompare(Digital_PWM_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC5/Digital_PWM.c ****         #else
 141:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_WriteCompare1(Digital_PWM_INIT_COMPARE_VALUE1);
 112              		.loc 1 141 0
 113 003a 0020     		movs	r0, #0
 114 003c FFF7FEFF 		bl	Digital_PWM_WriteCompare1
 142:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_WriteCompare2(Digital_PWM_INIT_COMPARE_VALUE2);
 115              		.loc 1 142 0
 116 0040 0020     		movs	r0, #0
 117 0042 FFF7FEFF 		bl	Digital_PWM_WriteCompare2
 143:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_UseOneCompareMode) */
 144:Generated_Source\PSoC5/Digital_PWM.c **** 
 145:Generated_Source\PSoC5/Digital_PWM.c ****         #if (Digital_PWM_KillModeMinTime)
 146:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_WriteKillTime(Digital_PWM_MinimumKillTime);
 147:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_KillModeMinTime) */
 148:Generated_Source\PSoC5/Digital_PWM.c **** 
 149:Generated_Source\PSoC5/Digital_PWM.c ****         #if (Digital_PWM_DeadBandUsed)
 150:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_WriteDeadTime(Digital_PWM_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_DeadBandUsed) */
 152:Generated_Source\PSoC5/Digital_PWM.c **** 
 153:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_UseStatus || Digital_PWM_UsingFixedFunction)
 154:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_SetInterruptMode(Digital_PWM_INIT_INTERRUPTS_MODE);
 118              		.loc 1 154 0
 119 0046 0020     		movs	r0, #0
 120 0048 FFF7FEFF 		bl	Digital_PWM_SetInterruptMode
 155:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UseStatus || Digital_PWM_UsingFixedFunction) */
 156:Generated_Source\PSoC5/Digital_PWM.c **** 
 157:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_UsingFixedFunction)
 158:Generated_Source\PSoC5/Digital_PWM.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_GLOBAL_ENABLE |= Digital_PWM_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/Digital_PWM.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_CONTROL2 |= Digital_PWM_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/Digital_PWM.c ****     #else
 163:Generated_Source\PSoC5/Digital_PWM.c ****         #if(Digital_PWM_UseStatus)
 164:Generated_Source\PSoC5/Digital_PWM.c **** 
 165:Generated_Source\PSoC5/Digital_PWM.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 6


 166:Generated_Source\PSoC5/Digital_PWM.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_interruptState = CyEnterCriticalSection();
 121              		.loc 1 167 0
 122 004c FFF7FEFF 		bl	CyEnterCriticalSection
 123 0050 0346     		mov	r3, r0
 124 0052 BB71     		strb	r3, [r7, #6]
 168:Generated_Source\PSoC5/Digital_PWM.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_STATUS_AUX_CTRL |= Digital_PWM_STATUS_ACTL_INT_EN_MASK;
 125              		.loc 1 169 0
 126 0054 094A     		ldr	r2, .L6+4
 127 0056 094B     		ldr	r3, .L6+4
 128 0058 1B78     		ldrb	r3, [r3]
 129 005a DBB2     		uxtb	r3, r3
 130 005c 43F01003 		orr	r3, r3, #16
 131 0060 DBB2     		uxtb	r3, r3
 132 0062 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC5/Digital_PWM.c **** 
 171:Generated_Source\PSoC5/Digital_PWM.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/Digital_PWM.c ****             CyExitCriticalSection(Digital_PWM_interruptState);
 133              		.loc 1 172 0
 134 0064 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 135 0066 1846     		mov	r0, r3
 136 0068 FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC5/Digital_PWM.c **** 
 174:Generated_Source\PSoC5/Digital_PWM.c ****             /* Clear the FIFO to enable the Digital_PWM_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/Digital_PWM.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_ClearFIFO();
 137              		.loc 1 176 0
 138 006c FFF7FEFF 		bl	Digital_PWM_ClearFIFO
 177:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_UseStatus) */
 178:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UsingFixedFunction) */
 179:Generated_Source\PSoC5/Digital_PWM.c **** }
 139              		.loc 1 179 0
 140 0070 0837     		adds	r7, r7, #8
 141              		.cfi_def_cfa_offset 8
 142 0072 BD46     		mov	sp, r7
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 0074 80BD     		pop	{r7, pc}
 146              	.L7:
 147 0076 00BF     		.align	2
 148              	.L6:
 149 0078 73640040 		.word	1073767539
 150 007c 93640040 		.word	1073767571
 151              		.cfi_endproc
 152              	.LFE1:
 153              		.size	Digital_PWM_Init, .-Digital_PWM_Init
 154              		.section	.text.Digital_PWM_Enable,"ax",%progbits
 155              		.align	2
 156              		.global	Digital_PWM_Enable
 157              		.thumb
 158              		.thumb_func
 159              		.type	Digital_PWM_Enable, %function
 160              	Digital_PWM_Enable:
 161              	.LFB2:
 180:Generated_Source\PSoC5/Digital_PWM.c **** 
 181:Generated_Source\PSoC5/Digital_PWM.c **** 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 7


 182:Generated_Source\PSoC5/Digital_PWM.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/Digital_PWM.c **** * Function Name: Digital_PWM_Enable
 184:Generated_Source\PSoC5/Digital_PWM.c **** ********************************************************************************
 185:Generated_Source\PSoC5/Digital_PWM.c **** *
 186:Generated_Source\PSoC5/Digital_PWM.c **** * Summary:
 187:Generated_Source\PSoC5/Digital_PWM.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/Digital_PWM.c **** *
 189:Generated_Source\PSoC5/Digital_PWM.c **** * Parameters:
 190:Generated_Source\PSoC5/Digital_PWM.c **** *  None
 191:Generated_Source\PSoC5/Digital_PWM.c **** *
 192:Generated_Source\PSoC5/Digital_PWM.c **** * Return:
 193:Generated_Source\PSoC5/Digital_PWM.c **** *  None
 194:Generated_Source\PSoC5/Digital_PWM.c **** *
 195:Generated_Source\PSoC5/Digital_PWM.c **** * Side Effects:
 196:Generated_Source\PSoC5/Digital_PWM.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/Digital_PWM.c **** *
 198:Generated_Source\PSoC5/Digital_PWM.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/Digital_PWM.c **** void Digital_PWM_Enable(void) 
 200:Generated_Source\PSoC5/Digital_PWM.c **** {
 162              		.loc 1 200 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 167 0000 80B4     		push	{r7}
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 7, -4
 170 0002 00AF     		add	r7, sp, #0
 171              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/Digital_PWM.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_UsingFixedFunction)
 203:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_GLOBAL_ENABLE |= Digital_PWM_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_GLOBAL_STBY_ENABLE |= Digital_PWM_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UsingFixedFunction) */
 206:Generated_Source\PSoC5/Digital_PWM.c **** 
 207:Generated_Source\PSoC5/Digital_PWM.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_UseControl || Digital_PWM_UsingFixedFunction)
 209:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_CONTROL |= Digital_PWM_CTRL_ENABLE;
 172              		.loc 1 209 0
 173 0004 054A     		ldr	r2, .L9
 174 0006 054B     		ldr	r3, .L9
 175 0008 1B78     		ldrb	r3, [r3]
 176 000a DBB2     		uxtb	r3, r3
 177 000c 63F07F03 		orn	r3, r3, #127
 178 0010 DBB2     		uxtb	r3, r3
 179 0012 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UseControl || Digital_PWM_UsingFixedFunction) */
 211:Generated_Source\PSoC5/Digital_PWM.c **** }
 180              		.loc 1 211 0
 181 0014 BD46     		mov	sp, r7
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 0016 5DF8047B 		ldr	r7, [sp], #4
 185              		.cfi_restore 7
 186              		.cfi_def_cfa_offset 0
 187 001a 7047     		bx	lr
 188              	.L10:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 8


 189              		.align	2
 190              	.L9:
 191 001c 73640040 		.word	1073767539
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	Digital_PWM_Enable, .-Digital_PWM_Enable
 195              		.section	.text.Digital_PWM_Stop,"ax",%progbits
 196              		.align	2
 197              		.global	Digital_PWM_Stop
 198              		.thumb
 199              		.thumb_func
 200              		.type	Digital_PWM_Stop, %function
 201              	Digital_PWM_Stop:
 202              	.LFB3:
 212:Generated_Source\PSoC5/Digital_PWM.c **** 
 213:Generated_Source\PSoC5/Digital_PWM.c **** 
 214:Generated_Source\PSoC5/Digital_PWM.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/Digital_PWM.c **** * Function Name: Digital_PWM_Stop
 216:Generated_Source\PSoC5/Digital_PWM.c **** ********************************************************************************
 217:Generated_Source\PSoC5/Digital_PWM.c **** *
 218:Generated_Source\PSoC5/Digital_PWM.c **** * Summary:
 219:Generated_Source\PSoC5/Digital_PWM.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/Digital_PWM.c **** *  interrupts.
 221:Generated_Source\PSoC5/Digital_PWM.c **** *
 222:Generated_Source\PSoC5/Digital_PWM.c **** * Parameters:
 223:Generated_Source\PSoC5/Digital_PWM.c **** *  None
 224:Generated_Source\PSoC5/Digital_PWM.c **** *
 225:Generated_Source\PSoC5/Digital_PWM.c **** * Return:
 226:Generated_Source\PSoC5/Digital_PWM.c **** *  None
 227:Generated_Source\PSoC5/Digital_PWM.c **** *
 228:Generated_Source\PSoC5/Digital_PWM.c **** * Side Effects:
 229:Generated_Source\PSoC5/Digital_PWM.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/Digital_PWM.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/Digital_PWM.c **** *
 232:Generated_Source\PSoC5/Digital_PWM.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/Digital_PWM.c **** void Digital_PWM_Stop(void) 
 234:Generated_Source\PSoC5/Digital_PWM.c **** {
 203              		.loc 1 234 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 208 0000 80B4     		push	{r7}
 209              		.cfi_def_cfa_offset 4
 210              		.cfi_offset 7, -4
 211 0002 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_UseControl || Digital_PWM_UsingFixedFunction)
 236:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_CONTROL &= ((uint8)(~Digital_PWM_CTRL_ENABLE));
 213              		.loc 1 236 0
 214 0004 054A     		ldr	r2, .L12
 215 0006 054B     		ldr	r3, .L12
 216 0008 1B78     		ldrb	r3, [r3]
 217 000a DBB2     		uxtb	r3, r3
 218 000c 03F07F03 		and	r3, r3, #127
 219 0010 DBB2     		uxtb	r3, r3
 220 0012 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 9


 237:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UseControl || Digital_PWM_UsingFixedFunction) */
 238:Generated_Source\PSoC5/Digital_PWM.c **** 
 239:Generated_Source\PSoC5/Digital_PWM.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_UsingFixedFunction)
 241:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_GLOBAL_ENABLE &= ((uint8)(~Digital_PWM_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/Digital_PWM.c ****         Digital_PWM_GLOBAL_STBY_ENABLE &= ((uint8)(~Digital_PWM_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UsingFixedFunction) */
 244:Generated_Source\PSoC5/Digital_PWM.c **** }
 221              		.loc 1 244 0
 222 0014 BD46     		mov	sp, r7
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 0016 5DF8047B 		ldr	r7, [sp], #4
 226              		.cfi_restore 7
 227              		.cfi_def_cfa_offset 0
 228 001a 7047     		bx	lr
 229              	.L13:
 230              		.align	2
 231              	.L12:
 232 001c 73640040 		.word	1073767539
 233              		.cfi_endproc
 234              	.LFE3:
 235              		.size	Digital_PWM_Stop, .-Digital_PWM_Stop
 236              		.section	.text.Digital_PWM_WriteCounter,"ax",%progbits
 237              		.align	2
 238              		.global	Digital_PWM_WriteCounter
 239              		.thumb
 240              		.thumb_func
 241              		.type	Digital_PWM_WriteCounter, %function
 242              	Digital_PWM_WriteCounter:
 243              	.LFB4:
 245:Generated_Source\PSoC5/Digital_PWM.c **** 
 246:Generated_Source\PSoC5/Digital_PWM.c **** #if (Digital_PWM_UseOneCompareMode)
 247:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_CompareMode1SW)
 248:Generated_Source\PSoC5/Digital_PWM.c **** 
 249:Generated_Source\PSoC5/Digital_PWM.c **** 
 250:Generated_Source\PSoC5/Digital_PWM.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/Digital_PWM.c ****         * Function Name: Digital_PWM_SetCompareMode
 252:Generated_Source\PSoC5/Digital_PWM.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/Digital_PWM.c ****         *
 254:Generated_Source\PSoC5/Digital_PWM.c ****         * Summary:
 255:Generated_Source\PSoC5/Digital_PWM.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/Digital_PWM.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/Digital_PWM.c ****         *
 258:Generated_Source\PSoC5/Digital_PWM.c ****         * Parameters:
 259:Generated_Source\PSoC5/Digital_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/Digital_PWM.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/Digital_PWM.c ****         *
 262:Generated_Source\PSoC5/Digital_PWM.c ****         * Return:
 263:Generated_Source\PSoC5/Digital_PWM.c ****         *  None
 264:Generated_Source\PSoC5/Digital_PWM.c ****         *
 265:Generated_Source\PSoC5/Digital_PWM.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/Digital_PWM.c ****         void Digital_PWM_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/Digital_PWM.c ****         {
 268:Generated_Source\PSoC5/Digital_PWM.c ****             #if(Digital_PWM_UsingFixedFunction)
 269:Generated_Source\PSoC5/Digital_PWM.c **** 
 270:Generated_Source\PSoC5/Digital_PWM.c ****                 #if(0 != Digital_PWM_CTRL_CMPMODE1_SHIFT)
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 10


 271:Generated_Source\PSoC5/Digital_PWM.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << Digital_PWM_CTRL_CMPMO
 272:Generated_Source\PSoC5/Digital_PWM.c ****                 #else
 273:Generated_Source\PSoC5/Digital_PWM.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC5/Digital_PWM.c ****                 #endif /* (0 != Digital_PWM_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/Digital_PWM.c **** 
 276:Generated_Source\PSoC5/Digital_PWM.c ****                 Digital_PWM_CONTROL3 &= ((uint8)(~Digital_PWM_CTRL_CMPMODE1_MASK)); /*Clear Existin
 277:Generated_Source\PSoC5/Digital_PWM.c ****                 Digital_PWM_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/Digital_PWM.c **** 
 279:Generated_Source\PSoC5/Digital_PWM.c ****             #elif (Digital_PWM_UseControl)
 280:Generated_Source\PSoC5/Digital_PWM.c **** 
 281:Generated_Source\PSoC5/Digital_PWM.c ****                 #if(0 != Digital_PWM_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/Digital_PWM.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << Digital_PWM_CTRL_CMPM
 283:Generated_Source\PSoC5/Digital_PWM.c ****                                                 Digital_PWM_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/Digital_PWM.c ****                 #else
 285:Generated_Source\PSoC5/Digital_PWM.c ****                     uint8 comparemode1masked = comparemode & Digital_PWM_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/Digital_PWM.c ****                 #endif /* (0 != Digital_PWM_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/Digital_PWM.c **** 
 288:Generated_Source\PSoC5/Digital_PWM.c ****                 #if(0 != Digital_PWM_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/Digital_PWM.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << Digital_PWM_CTRL_CMPM
 290:Generated_Source\PSoC5/Digital_PWM.c ****                                                Digital_PWM_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/Digital_PWM.c ****                 #else
 292:Generated_Source\PSoC5/Digital_PWM.c ****                     uint8 comparemode2masked = comparemode & Digital_PWM_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/Digital_PWM.c ****                 #endif /* (0 != Digital_PWM_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/Digital_PWM.c **** 
 295:Generated_Source\PSoC5/Digital_PWM.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/Digital_PWM.c ****                 Digital_PWM_CONTROL &= ((uint8)(~(Digital_PWM_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/Digital_PWM.c ****                                             Digital_PWM_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/Digital_PWM.c ****                 Digital_PWM_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/Digital_PWM.c **** 
 300:Generated_Source\PSoC5/Digital_PWM.c ****             #else
 301:Generated_Source\PSoC5/Digital_PWM.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/Digital_PWM.c ****             #endif /* (Digital_PWM_UsingFixedFunction) */
 303:Generated_Source\PSoC5/Digital_PWM.c ****         }
 304:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* Digital_PWM_CompareMode1SW */
 305:Generated_Source\PSoC5/Digital_PWM.c **** 
 306:Generated_Source\PSoC5/Digital_PWM.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/Digital_PWM.c **** 
 308:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_CompareMode1SW)
 309:Generated_Source\PSoC5/Digital_PWM.c **** 
 310:Generated_Source\PSoC5/Digital_PWM.c **** 
 311:Generated_Source\PSoC5/Digital_PWM.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/Digital_PWM.c ****         * Function Name: Digital_PWM_SetCompareMode1
 313:Generated_Source\PSoC5/Digital_PWM.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/Digital_PWM.c ****         *
 315:Generated_Source\PSoC5/Digital_PWM.c ****         * Summary:
 316:Generated_Source\PSoC5/Digital_PWM.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/Digital_PWM.c ****         *
 318:Generated_Source\PSoC5/Digital_PWM.c ****         * Parameters:
 319:Generated_Source\PSoC5/Digital_PWM.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/Digital_PWM.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/Digital_PWM.c ****         *
 322:Generated_Source\PSoC5/Digital_PWM.c ****         * Return:
 323:Generated_Source\PSoC5/Digital_PWM.c ****         *  None
 324:Generated_Source\PSoC5/Digital_PWM.c ****         *
 325:Generated_Source\PSoC5/Digital_PWM.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/Digital_PWM.c ****         void Digital_PWM_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/Digital_PWM.c ****         {
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 11


 328:Generated_Source\PSoC5/Digital_PWM.c ****             #if(0 != Digital_PWM_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/Digital_PWM.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << Digital_PWM_CTRL_CMPMODE1_
 330:Generated_Source\PSoC5/Digital_PWM.c ****                                            Digital_PWM_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC5/Digital_PWM.c ****             #else
 332:Generated_Source\PSoC5/Digital_PWM.c ****                 uint8 comparemodemasked = comparemode & Digital_PWM_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/Digital_PWM.c ****             #endif /* (0 != Digital_PWM_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/Digital_PWM.c **** 
 335:Generated_Source\PSoC5/Digital_PWM.c ****             #if (Digital_PWM_UseControl)
 336:Generated_Source\PSoC5/Digital_PWM.c ****                 Digital_PWM_CONTROL &= ((uint8)(~Digital_PWM_CTRL_CMPMODE1_MASK)); /*Clear existing
 337:Generated_Source\PSoC5/Digital_PWM.c ****                 Digital_PWM_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/Digital_PWM.c ****             #endif /* (Digital_PWM_UseControl) */
 339:Generated_Source\PSoC5/Digital_PWM.c ****         }
 340:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* Digital_PWM_CompareMode1SW */
 341:Generated_Source\PSoC5/Digital_PWM.c **** 
 342:Generated_Source\PSoC5/Digital_PWM.c **** #if (Digital_PWM_CompareMode2SW)
 343:Generated_Source\PSoC5/Digital_PWM.c **** 
 344:Generated_Source\PSoC5/Digital_PWM.c **** 
 345:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_SetCompareMode2
 347:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/Digital_PWM.c ****     *
 349:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 350:Generated_Source\PSoC5/Digital_PWM.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/Digital_PWM.c ****     *
 352:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 353:Generated_Source\PSoC5/Digital_PWM.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/Digital_PWM.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/Digital_PWM.c ****     *
 356:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 357:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 358:Generated_Source\PSoC5/Digital_PWM.c ****     *
 359:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/Digital_PWM.c ****     void Digital_PWM_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/Digital_PWM.c ****     {
 362:Generated_Source\PSoC5/Digital_PWM.c **** 
 363:Generated_Source\PSoC5/Digital_PWM.c ****         #if(0 != Digital_PWM_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/Digital_PWM.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << Digital_PWM_CTRL_CMPMODE2_SHIF
 365:Generated_Source\PSoC5/Digital_PWM.c ****                                                  Digital_PWM_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/Digital_PWM.c ****         #else
 367:Generated_Source\PSoC5/Digital_PWM.c ****             uint8 comparemodemasked = comparemode & Digital_PWM_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (0 != Digital_PWM_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/Digital_PWM.c **** 
 370:Generated_Source\PSoC5/Digital_PWM.c ****         #if (Digital_PWM_UseControl)
 371:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_CONTROL &= ((uint8)(~Digital_PWM_CTRL_CMPMODE2_MASK)); /*Clear existing mod
 372:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_UseControl) */
 374:Generated_Source\PSoC5/Digital_PWM.c ****     }
 375:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /*Digital_PWM_CompareMode2SW */
 376:Generated_Source\PSoC5/Digital_PWM.c **** 
 377:Generated_Source\PSoC5/Digital_PWM.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/Digital_PWM.c **** 
 379:Generated_Source\PSoC5/Digital_PWM.c **** 
 380:Generated_Source\PSoC5/Digital_PWM.c **** #if (!Digital_PWM_UsingFixedFunction)
 381:Generated_Source\PSoC5/Digital_PWM.c **** 
 382:Generated_Source\PSoC5/Digital_PWM.c **** 
 383:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_WriteCounter
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 12


 385:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/Digital_PWM.c ****     *
 387:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 388:Generated_Source\PSoC5/Digital_PWM.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/Digital_PWM.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/Digital_PWM.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/Digital_PWM.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/Digital_PWM.c ****     *
 393:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 394:Generated_Source\PSoC5/Digital_PWM.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/Digital_PWM.c ****     *
 396:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 397:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 398:Generated_Source\PSoC5/Digital_PWM.c ****     *
 399:Generated_Source\PSoC5/Digital_PWM.c ****     * Side Effects:
 400:Generated_Source\PSoC5/Digital_PWM.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/Digital_PWM.c ****     *
 402:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/Digital_PWM.c ****     void Digital_PWM_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/Digital_PWM.c ****                                        
 405:Generated_Source\PSoC5/Digital_PWM.c ****     {
 244              		.loc 1 405 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 8
 247              		@ frame_needed = 1, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249 0000 80B4     		push	{r7}
 250              		.cfi_def_cfa_offset 4
 251              		.cfi_offset 7, -4
 252 0002 83B0     		sub	sp, sp, #12
 253              		.cfi_def_cfa_offset 16
 254 0004 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
 256 0006 0346     		mov	r3, r0
 257 0008 FB71     		strb	r3, [r7, #7]
 406:Generated_Source\PSoC5/Digital_PWM.c ****         CY_SET_REG8(Digital_PWM_COUNTER_LSB_PTR, counter);
 258              		.loc 1 406 0
 259 000a 044A     		ldr	r2, .L15
 260 000c FB79     		ldrb	r3, [r7, #7]
 261 000e 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/Digital_PWM.c ****     }
 262              		.loc 1 407 0
 263 0010 0C37     		adds	r7, r7, #12
 264              		.cfi_def_cfa_offset 4
 265 0012 BD46     		mov	sp, r7
 266              		.cfi_def_cfa_register 13
 267              		@ sp needed
 268 0014 5DF8047B 		ldr	r7, [sp], #4
 269              		.cfi_restore 7
 270              		.cfi_def_cfa_offset 0
 271 0018 7047     		bx	lr
 272              	.L16:
 273 001a 00BF     		.align	2
 274              	.L15:
 275 001c 03640040 		.word	1073767427
 276              		.cfi_endproc
 277              	.LFE4:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 13


 278              		.size	Digital_PWM_WriteCounter, .-Digital_PWM_WriteCounter
 279              		.section	.text.Digital_PWM_ReadCounter,"ax",%progbits
 280              		.align	2
 281              		.global	Digital_PWM_ReadCounter
 282              		.thumb
 283              		.thumb_func
 284              		.type	Digital_PWM_ReadCounter, %function
 285              	Digital_PWM_ReadCounter:
 286              	.LFB5:
 408:Generated_Source\PSoC5/Digital_PWM.c **** 
 409:Generated_Source\PSoC5/Digital_PWM.c **** 
 410:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_ReadCounter
 412:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/Digital_PWM.c ****     *
 414:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 415:Generated_Source\PSoC5/Digital_PWM.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/Digital_PWM.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/Digital_PWM.c ****     *
 418:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 419:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 420:Generated_Source\PSoC5/Digital_PWM.c ****     *
 421:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 422:Generated_Source\PSoC5/Digital_PWM.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/Digital_PWM.c ****     *
 424:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/Digital_PWM.c ****     uint8 Digital_PWM_ReadCounter(void) 
 426:Generated_Source\PSoC5/Digital_PWM.c ****     {
 287              		.loc 1 426 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 7, -4
 295 0002 00AF     		add	r7, sp, #0
 296              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/Digital_PWM.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/Digital_PWM.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/Digital_PWM.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/Digital_PWM.c ****           (void)CY_GET_REG8(Digital_PWM_COUNTERCAP_LSB_PTR_8BIT);
 297              		.loc 1 430 0
 298 0004 044B     		ldr	r3, .L19
 299 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC5/Digital_PWM.c **** 
 432:Generated_Source\PSoC5/Digital_PWM.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/Digital_PWM.c ****         return (CY_GET_REG8(Digital_PWM_CAPTURE_LSB_PTR));
 300              		.loc 1 433 0
 301 0008 044B     		ldr	r3, .L19+4
 302 000a 1B78     		ldrb	r3, [r3]
 303 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC5/Digital_PWM.c ****     }
 304              		.loc 1 434 0
 305 000e 1846     		mov	r0, r3
 306 0010 BD46     		mov	sp, r7
 307              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 14


 308              		@ sp needed
 309 0012 5DF8047B 		ldr	r7, [sp], #4
 310              		.cfi_restore 7
 311              		.cfi_def_cfa_offset 0
 312 0016 7047     		bx	lr
 313              	.L20:
 314              		.align	2
 315              	.L19:
 316 0018 13640040 		.word	1073767443
 317 001c 53640040 		.word	1073767507
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	Digital_PWM_ReadCounter, .-Digital_PWM_ReadCounter
 321              		.section	.text.Digital_PWM_ClearFIFO,"ax",%progbits
 322              		.align	2
 323              		.global	Digital_PWM_ClearFIFO
 324              		.thumb
 325              		.thumb_func
 326              		.type	Digital_PWM_ClearFIFO, %function
 327              	Digital_PWM_ClearFIFO:
 328              	.LFB6:
 435:Generated_Source\PSoC5/Digital_PWM.c **** 
 436:Generated_Source\PSoC5/Digital_PWM.c ****     #if (Digital_PWM_UseStatus)
 437:Generated_Source\PSoC5/Digital_PWM.c **** 
 438:Generated_Source\PSoC5/Digital_PWM.c **** 
 439:Generated_Source\PSoC5/Digital_PWM.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/Digital_PWM.c ****         * Function Name: Digital_PWM_ClearFIFO
 441:Generated_Source\PSoC5/Digital_PWM.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/Digital_PWM.c ****         *
 443:Generated_Source\PSoC5/Digital_PWM.c ****         * Summary:
 444:Generated_Source\PSoC5/Digital_PWM.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/Digital_PWM.c ****         *
 446:Generated_Source\PSoC5/Digital_PWM.c ****         * Parameters:
 447:Generated_Source\PSoC5/Digital_PWM.c ****         *  None
 448:Generated_Source\PSoC5/Digital_PWM.c ****         *
 449:Generated_Source\PSoC5/Digital_PWM.c ****         * Return:
 450:Generated_Source\PSoC5/Digital_PWM.c ****         *  None
 451:Generated_Source\PSoC5/Digital_PWM.c ****         *
 452:Generated_Source\PSoC5/Digital_PWM.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/Digital_PWM.c ****         void Digital_PWM_ClearFIFO(void) 
 454:Generated_Source\PSoC5/Digital_PWM.c ****         {
 329              		.loc 1 454 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 00AF     		add	r7, sp, #0
 338              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC5/Digital_PWM.c ****             while(0u != (Digital_PWM_ReadStatusRegister() & Digital_PWM_STATUS_FIFONEMPTY))
 339              		.loc 1 455 0
 340 0004 01E0     		b	.L22
 341              	.L23:
 456:Generated_Source\PSoC5/Digital_PWM.c ****             {
 457:Generated_Source\PSoC5/Digital_PWM.c ****                 (void)Digital_PWM_ReadCapture();
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 15


 342              		.loc 1 457 0
 343 0006 FFF7FEFF 		bl	Digital_PWM_ReadCapture
 344              	.L22:
 455:Generated_Source\PSoC5/Digital_PWM.c ****             while(0u != (Digital_PWM_ReadStatusRegister() & Digital_PWM_STATUS_FIFONEMPTY))
 345              		.loc 1 455 0
 346 000a FFF7FEFF 		bl	Digital_PWM_ReadStatusRegister
 347 000e 0346     		mov	r3, r0
 348 0010 03F01003 		and	r3, r3, #16
 349 0014 002B     		cmp	r3, #0
 350 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC5/Digital_PWM.c ****             }
 459:Generated_Source\PSoC5/Digital_PWM.c ****         }
 351              		.loc 1 459 0
 352 0018 80BD     		pop	{r7, pc}
 353              		.cfi_endproc
 354              	.LFE6:
 355              		.size	Digital_PWM_ClearFIFO, .-Digital_PWM_ClearFIFO
 356 001a 00BF     		.section	.text.Digital_PWM_WritePeriod,"ax",%progbits
 357              		.align	2
 358              		.global	Digital_PWM_WritePeriod
 359              		.thumb
 360              		.thumb_func
 361              		.type	Digital_PWM_WritePeriod, %function
 362              	Digital_PWM_WritePeriod:
 363              	.LFB7:
 460:Generated_Source\PSoC5/Digital_PWM.c **** 
 461:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* Digital_PWM_UseStatus */
 462:Generated_Source\PSoC5/Digital_PWM.c **** 
 463:Generated_Source\PSoC5/Digital_PWM.c **** #endif /* !Digital_PWM_UsingFixedFunction */
 464:Generated_Source\PSoC5/Digital_PWM.c **** 
 465:Generated_Source\PSoC5/Digital_PWM.c **** 
 466:Generated_Source\PSoC5/Digital_PWM.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Digital_PWM.c **** * Function Name: Digital_PWM_WritePeriod
 468:Generated_Source\PSoC5/Digital_PWM.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Digital_PWM.c **** *
 470:Generated_Source\PSoC5/Digital_PWM.c **** * Summary:
 471:Generated_Source\PSoC5/Digital_PWM.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/Digital_PWM.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/Digital_PWM.c **** *
 474:Generated_Source\PSoC5/Digital_PWM.c **** * Parameters:
 475:Generated_Source\PSoC5/Digital_PWM.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/Digital_PWM.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/Digital_PWM.c **** *
 478:Generated_Source\PSoC5/Digital_PWM.c **** * Return:
 479:Generated_Source\PSoC5/Digital_PWM.c **** *  None
 480:Generated_Source\PSoC5/Digital_PWM.c **** *
 481:Generated_Source\PSoC5/Digital_PWM.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/Digital_PWM.c **** void Digital_PWM_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/Digital_PWM.c **** {
 364              		.loc 1 483 0
 365              		.cfi_startproc
 366              		@ args = 0, pretend = 0, frame = 8
 367              		@ frame_needed = 1, uses_anonymous_args = 0
 368              		@ link register save eliminated.
 369 0000 80B4     		push	{r7}
 370              		.cfi_def_cfa_offset 4
 371              		.cfi_offset 7, -4
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 16


 372 0002 83B0     		sub	sp, sp, #12
 373              		.cfi_def_cfa_offset 16
 374 0004 00AF     		add	r7, sp, #0
 375              		.cfi_def_cfa_register 7
 376 0006 0346     		mov	r3, r0
 377 0008 FB71     		strb	r3, [r7, #7]
 484:Generated_Source\PSoC5/Digital_PWM.c ****     #if(Digital_PWM_UsingFixedFunction)
 485:Generated_Source\PSoC5/Digital_PWM.c ****         CY_SET_REG16(Digital_PWM_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/Digital_PWM.c ****     #else
 487:Generated_Source\PSoC5/Digital_PWM.c ****         CY_SET_REG8(Digital_PWM_PERIOD_LSB_PTR, period);
 378              		.loc 1 487 0
 379 000a 044A     		ldr	r2, .L25
 380 000c FB79     		ldrb	r3, [r7, #7]
 381 000e 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UsingFixedFunction) */
 489:Generated_Source\PSoC5/Digital_PWM.c **** }
 382              		.loc 1 489 0
 383 0010 0C37     		adds	r7, r7, #12
 384              		.cfi_def_cfa_offset 4
 385 0012 BD46     		mov	sp, r7
 386              		.cfi_def_cfa_register 13
 387              		@ sp needed
 388 0014 5DF8047B 		ldr	r7, [sp], #4
 389              		.cfi_restore 7
 390              		.cfi_def_cfa_offset 0
 391 0018 7047     		bx	lr
 392              	.L26:
 393 001a 00BF     		.align	2
 394              	.L25:
 395 001c 43640040 		.word	1073767491
 396              		.cfi_endproc
 397              	.LFE7:
 398              		.size	Digital_PWM_WritePeriod, .-Digital_PWM_WritePeriod
 399              		.section	.text.Digital_PWM_WriteCompare1,"ax",%progbits
 400              		.align	2
 401              		.global	Digital_PWM_WriteCompare1
 402              		.thumb
 403              		.thumb_func
 404              		.type	Digital_PWM_WriteCompare1, %function
 405              	Digital_PWM_WriteCompare1:
 406              	.LFB8:
 490:Generated_Source\PSoC5/Digital_PWM.c **** 
 491:Generated_Source\PSoC5/Digital_PWM.c **** #if (Digital_PWM_UseOneCompareMode)
 492:Generated_Source\PSoC5/Digital_PWM.c **** 
 493:Generated_Source\PSoC5/Digital_PWM.c **** 
 494:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_WriteCompare
 496:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/Digital_PWM.c ****     *
 498:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 499:Generated_Source\PSoC5/Digital_PWM.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/Digital_PWM.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/Digital_PWM.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/Digital_PWM.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/Digital_PWM.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/Digital_PWM.c ****     *
 505:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 17


 506:Generated_Source\PSoC5/Digital_PWM.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/Digital_PWM.c ****     *
 508:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 509:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 510:Generated_Source\PSoC5/Digital_PWM.c ****     *
 511:Generated_Source\PSoC5/Digital_PWM.c ****     * Side Effects:
 512:Generated_Source\PSoC5/Digital_PWM.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/Digital_PWM.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/Digital_PWM.c ****     *
 515:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/Digital_PWM.c ****     void Digital_PWM_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/Digital_PWM.c ****                                        
 518:Generated_Source\PSoC5/Digital_PWM.c ****     {
 519:Generated_Source\PSoC5/Digital_PWM.c ****         #if(Digital_PWM_UsingFixedFunction)
 520:Generated_Source\PSoC5/Digital_PWM.c ****             CY_SET_REG16(Digital_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/Digital_PWM.c ****         #else
 522:Generated_Source\PSoC5/Digital_PWM.c ****             CY_SET_REG8(Digital_PWM_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_UsingFixedFunction) */
 524:Generated_Source\PSoC5/Digital_PWM.c **** 
 525:Generated_Source\PSoC5/Digital_PWM.c ****         #if (Digital_PWM_PWMMode == Digital_PWM__B_PWM__DITHER)
 526:Generated_Source\PSoC5/Digital_PWM.c ****             #if(Digital_PWM_UsingFixedFunction)
 527:Generated_Source\PSoC5/Digital_PWM.c ****                 CY_SET_REG16(Digital_PWM_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/Digital_PWM.c ****             #else
 529:Generated_Source\PSoC5/Digital_PWM.c ****                 CY_SET_REG8(Digital_PWM_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/Digital_PWM.c ****             #endif /* (Digital_PWM_UsingFixedFunction) */
 531:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_PWMMode == Digital_PWM__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/Digital_PWM.c ****     }
 533:Generated_Source\PSoC5/Digital_PWM.c **** 
 534:Generated_Source\PSoC5/Digital_PWM.c **** 
 535:Generated_Source\PSoC5/Digital_PWM.c **** #else
 536:Generated_Source\PSoC5/Digital_PWM.c **** 
 537:Generated_Source\PSoC5/Digital_PWM.c **** 
 538:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_WriteCompare1
 540:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/Digital_PWM.c ****     *
 542:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 543:Generated_Source\PSoC5/Digital_PWM.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/Digital_PWM.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/Digital_PWM.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/Digital_PWM.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/Digital_PWM.c ****     *
 548:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 549:Generated_Source\PSoC5/Digital_PWM.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/Digital_PWM.c ****     *
 551:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 552:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 553:Generated_Source\PSoC5/Digital_PWM.c ****     *
 554:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/Digital_PWM.c ****     void Digital_PWM_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/Digital_PWM.c ****                                         
 557:Generated_Source\PSoC5/Digital_PWM.c ****     {
 407              		.loc 1 557 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 8
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411              		@ link register save eliminated.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 18


 412 0000 80B4     		push	{r7}
 413              		.cfi_def_cfa_offset 4
 414              		.cfi_offset 7, -4
 415 0002 83B0     		sub	sp, sp, #12
 416              		.cfi_def_cfa_offset 16
 417 0004 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 419 0006 0346     		mov	r3, r0
 420 0008 FB71     		strb	r3, [r7, #7]
 558:Generated_Source\PSoC5/Digital_PWM.c ****         #if(Digital_PWM_UsingFixedFunction)
 559:Generated_Source\PSoC5/Digital_PWM.c ****             CY_SET_REG16(Digital_PWM_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/Digital_PWM.c ****         #else
 561:Generated_Source\PSoC5/Digital_PWM.c ****             CY_SET_REG8(Digital_PWM_COMPARE1_LSB_PTR, compare);
 421              		.loc 1 561 0
 422 000a 044A     		ldr	r2, .L28
 423 000c FB79     		ldrb	r3, [r7, #7]
 424 000e 1370     		strb	r3, [r2]
 562:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_UsingFixedFunction) */
 563:Generated_Source\PSoC5/Digital_PWM.c ****     }
 425              		.loc 1 563 0
 426 0010 0C37     		adds	r7, r7, #12
 427              		.cfi_def_cfa_offset 4
 428 0012 BD46     		mov	sp, r7
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 0014 5DF8047B 		ldr	r7, [sp], #4
 432              		.cfi_restore 7
 433              		.cfi_def_cfa_offset 0
 434 0018 7047     		bx	lr
 435              	.L29:
 436 001a 00BF     		.align	2
 437              	.L28:
 438 001c 23640040 		.word	1073767459
 439              		.cfi_endproc
 440              	.LFE8:
 441              		.size	Digital_PWM_WriteCompare1, .-Digital_PWM_WriteCompare1
 442              		.section	.text.Digital_PWM_WriteCompare2,"ax",%progbits
 443              		.align	2
 444              		.global	Digital_PWM_WriteCompare2
 445              		.thumb
 446              		.thumb_func
 447              		.type	Digital_PWM_WriteCompare2, %function
 448              	Digital_PWM_WriteCompare2:
 449              	.LFB9:
 564:Generated_Source\PSoC5/Digital_PWM.c **** 
 565:Generated_Source\PSoC5/Digital_PWM.c **** 
 566:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_WriteCompare2
 568:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/Digital_PWM.c ****     *
 570:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 571:Generated_Source\PSoC5/Digital_PWM.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/Digital_PWM.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/Digital_PWM.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/Digital_PWM.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/Digital_PWM.c ****     *  mode.
 576:Generated_Source\PSoC5/Digital_PWM.c ****     *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 19


 577:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 578:Generated_Source\PSoC5/Digital_PWM.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/Digital_PWM.c ****     *
 580:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 581:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 582:Generated_Source\PSoC5/Digital_PWM.c ****     *
 583:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/Digital_PWM.c ****     void Digital_PWM_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/Digital_PWM.c ****                                         
 586:Generated_Source\PSoC5/Digital_PWM.c ****     {
 450              		.loc 1 586 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 8
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 83B0     		sub	sp, sp, #12
 459              		.cfi_def_cfa_offset 16
 460 0004 00AF     		add	r7, sp, #0
 461              		.cfi_def_cfa_register 7
 462 0006 0346     		mov	r3, r0
 463 0008 FB71     		strb	r3, [r7, #7]
 587:Generated_Source\PSoC5/Digital_PWM.c ****         #if(Digital_PWM_UsingFixedFunction)
 588:Generated_Source\PSoC5/Digital_PWM.c ****             CY_SET_REG16(Digital_PWM_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/Digital_PWM.c ****         #else
 590:Generated_Source\PSoC5/Digital_PWM.c ****             CY_SET_REG8(Digital_PWM_COMPARE2_LSB_PTR, compare);
 464              		.loc 1 590 0
 465 000a 044A     		ldr	r2, .L31
 466 000c FB79     		ldrb	r3, [r7, #7]
 467 000e 1370     		strb	r3, [r2]
 591:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_UsingFixedFunction) */
 592:Generated_Source\PSoC5/Digital_PWM.c ****     }
 468              		.loc 1 592 0
 469 0010 0C37     		adds	r7, r7, #12
 470              		.cfi_def_cfa_offset 4
 471 0012 BD46     		mov	sp, r7
 472              		.cfi_def_cfa_register 13
 473              		@ sp needed
 474 0014 5DF8047B 		ldr	r7, [sp], #4
 475              		.cfi_restore 7
 476              		.cfi_def_cfa_offset 0
 477 0018 7047     		bx	lr
 478              	.L32:
 479 001a 00BF     		.align	2
 480              	.L31:
 481 001c 33640040 		.word	1073767475
 482              		.cfi_endproc
 483              	.LFE9:
 484              		.size	Digital_PWM_WriteCompare2, .-Digital_PWM_WriteCompare2
 485              		.section	.text.Digital_PWM_SetInterruptMode,"ax",%progbits
 486              		.align	2
 487              		.global	Digital_PWM_SetInterruptMode
 488              		.thumb
 489              		.thumb_func
 490              		.type	Digital_PWM_SetInterruptMode, %function
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 20


 491              	Digital_PWM_SetInterruptMode:
 492              	.LFB10:
 593:Generated_Source\PSoC5/Digital_PWM.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/Digital_PWM.c **** 
 595:Generated_Source\PSoC5/Digital_PWM.c **** #if (Digital_PWM_DeadBandUsed)
 596:Generated_Source\PSoC5/Digital_PWM.c **** 
 597:Generated_Source\PSoC5/Digital_PWM.c **** 
 598:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_WriteDeadTime
 600:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/Digital_PWM.c ****     *
 602:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 603:Generated_Source\PSoC5/Digital_PWM.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/Digital_PWM.c ****     *
 605:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 606:Generated_Source\PSoC5/Digital_PWM.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/Digital_PWM.c ****     *
 608:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 609:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 610:Generated_Source\PSoC5/Digital_PWM.c ****     *
 611:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/Digital_PWM.c ****     void Digital_PWM_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/Digital_PWM.c ****     {
 614:Generated_Source\PSoC5/Digital_PWM.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/Digital_PWM.c ****         #if(!Digital_PWM_DeadBand2_4)
 616:Generated_Source\PSoC5/Digital_PWM.c ****             CY_SET_REG8(Digital_PWM_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/Digital_PWM.c ****         #else
 618:Generated_Source\PSoC5/Digital_PWM.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/Digital_PWM.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/Digital_PWM.c ****             Digital_PWM_DEADBAND_COUNT &= ((uint8)(~Digital_PWM_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/Digital_PWM.c **** 
 622:Generated_Source\PSoC5/Digital_PWM.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/Digital_PWM.c ****             #if(Digital_PWM_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/Digital_PWM.c ****                 Digital_PWM_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << Digital_PWM_DEADBAND_COUN
 625:Generated_Source\PSoC5/Digital_PWM.c ****                                                     Digital_PWM_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/Digital_PWM.c ****             #else
 627:Generated_Source\PSoC5/Digital_PWM.c ****                 Digital_PWM_DEADBAND_COUNT |= deadtime & Digital_PWM_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/Digital_PWM.c ****             #endif /* (Digital_PWM_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/Digital_PWM.c **** 
 630:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (!Digital_PWM_DeadBand2_4) */
 631:Generated_Source\PSoC5/Digital_PWM.c ****     }
 632:Generated_Source\PSoC5/Digital_PWM.c **** 
 633:Generated_Source\PSoC5/Digital_PWM.c **** 
 634:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_ReadDeadTime
 636:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 637:Generated_Source\PSoC5/Digital_PWM.c ****     *
 638:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 639:Generated_Source\PSoC5/Digital_PWM.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/Digital_PWM.c ****     *
 641:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 642:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 643:Generated_Source\PSoC5/Digital_PWM.c ****     *
 644:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 645:Generated_Source\PSoC5/Digital_PWM.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/Digital_PWM.c ****     *
 647:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 21


 648:Generated_Source\PSoC5/Digital_PWM.c ****     uint8 Digital_PWM_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/Digital_PWM.c ****     {
 650:Generated_Source\PSoC5/Digital_PWM.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/Digital_PWM.c ****         #if(!Digital_PWM_DeadBand2_4)
 652:Generated_Source\PSoC5/Digital_PWM.c ****             return (CY_GET_REG8(Digital_PWM_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/Digital_PWM.c ****         #else
 654:Generated_Source\PSoC5/Digital_PWM.c **** 
 655:Generated_Source\PSoC5/Digital_PWM.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/Digital_PWM.c ****             #if(Digital_PWM_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/Digital_PWM.c ****                 return ((uint8)(((uint8)(Digital_PWM_DEADBAND_COUNT & Digital_PWM_DEADBAND_COUNT_MA
 658:Generated_Source\PSoC5/Digital_PWM.c ****                                                                            Digital_PWM_DEADBAND_COU
 659:Generated_Source\PSoC5/Digital_PWM.c ****             #else
 660:Generated_Source\PSoC5/Digital_PWM.c ****                 return (Digital_PWM_DEADBAND_COUNT & Digital_PWM_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/Digital_PWM.c ****             #endif /* (Digital_PWM_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (!Digital_PWM_DeadBand2_4) */
 663:Generated_Source\PSoC5/Digital_PWM.c ****     }
 664:Generated_Source\PSoC5/Digital_PWM.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/Digital_PWM.c **** 
 666:Generated_Source\PSoC5/Digital_PWM.c **** #if (Digital_PWM_UseStatus || Digital_PWM_UsingFixedFunction)
 667:Generated_Source\PSoC5/Digital_PWM.c **** 
 668:Generated_Source\PSoC5/Digital_PWM.c **** 
 669:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_SetInterruptMode
 671:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/Digital_PWM.c ****     *
 673:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 674:Generated_Source\PSoC5/Digital_PWM.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/Digital_PWM.c ****     *  source status register.
 676:Generated_Source\PSoC5/Digital_PWM.c ****     *
 677:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 678:Generated_Source\PSoC5/Digital_PWM.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/Digital_PWM.c ****     *
 680:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 681:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 682:Generated_Source\PSoC5/Digital_PWM.c ****     *
 683:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/Digital_PWM.c ****     void Digital_PWM_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/Digital_PWM.c ****     {
 493              		.loc 1 685 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 8
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498 0000 80B4     		push	{r7}
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 7, -4
 501 0002 83B0     		sub	sp, sp, #12
 502              		.cfi_def_cfa_offset 16
 503 0004 00AF     		add	r7, sp, #0
 504              		.cfi_def_cfa_register 7
 505 0006 0346     		mov	r3, r0
 506 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/Digital_PWM.c ****         CY_SET_REG8(Digital_PWM_STATUS_MASK_PTR, interruptMode);
 507              		.loc 1 686 0
 508 000a 044A     		ldr	r2, .L34
 509 000c FB79     		ldrb	r3, [r7, #7]
 510 000e 1370     		strb	r3, [r2]
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 22


 687:Generated_Source\PSoC5/Digital_PWM.c ****     }
 511              		.loc 1 687 0
 512 0010 0C37     		adds	r7, r7, #12
 513              		.cfi_def_cfa_offset 4
 514 0012 BD46     		mov	sp, r7
 515              		.cfi_def_cfa_register 13
 516              		@ sp needed
 517 0014 5DF8047B 		ldr	r7, [sp], #4
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 0018 7047     		bx	lr
 521              	.L35:
 522 001a 00BF     		.align	2
 523              	.L34:
 524 001c 83640040 		.word	1073767555
 525              		.cfi_endproc
 526              	.LFE10:
 527              		.size	Digital_PWM_SetInterruptMode, .-Digital_PWM_SetInterruptMode
 528              		.section	.text.Digital_PWM_ReadStatusRegister,"ax",%progbits
 529              		.align	2
 530              		.global	Digital_PWM_ReadStatusRegister
 531              		.thumb
 532              		.thumb_func
 533              		.type	Digital_PWM_ReadStatusRegister, %function
 534              	Digital_PWM_ReadStatusRegister:
 535              	.LFB11:
 688:Generated_Source\PSoC5/Digital_PWM.c **** 
 689:Generated_Source\PSoC5/Digital_PWM.c **** 
 690:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_ReadStatusRegister
 692:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/Digital_PWM.c ****     *
 694:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 695:Generated_Source\PSoC5/Digital_PWM.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/Digital_PWM.c ****     *
 697:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 698:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 699:Generated_Source\PSoC5/Digital_PWM.c ****     *
 700:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 701:Generated_Source\PSoC5/Digital_PWM.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/Digital_PWM.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/Digital_PWM.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/Digital_PWM.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/Digital_PWM.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/Digital_PWM.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/Digital_PWM.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC5/Digital_PWM.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/Digital_PWM.c ****     *
 710:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/Digital_PWM.c ****     uint8 Digital_PWM_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/Digital_PWM.c ****     {
 536              		.loc 1 712 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541 0000 80B4     		push	{r7}
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 23


 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 7, -4
 544 0002 00AF     		add	r7, sp, #0
 545              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/Digital_PWM.c ****         return (CY_GET_REG8(Digital_PWM_STATUS_PTR));
 546              		.loc 1 713 0
 547 0004 034B     		ldr	r3, .L38
 548 0006 1B78     		ldrb	r3, [r3]
 549 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/Digital_PWM.c ****     }
 550              		.loc 1 714 0
 551 000a 1846     		mov	r0, r3
 552 000c BD46     		mov	sp, r7
 553              		.cfi_def_cfa_register 13
 554              		@ sp needed
 555 000e 5DF8047B 		ldr	r7, [sp], #4
 556              		.cfi_restore 7
 557              		.cfi_def_cfa_offset 0
 558 0012 7047     		bx	lr
 559              	.L39:
 560              		.align	2
 561              	.L38:
 562 0014 63640040 		.word	1073767523
 563              		.cfi_endproc
 564              	.LFE11:
 565              		.size	Digital_PWM_ReadStatusRegister, .-Digital_PWM_ReadStatusRegister
 566              		.section	.text.Digital_PWM_ReadControlRegister,"ax",%progbits
 567              		.align	2
 568              		.global	Digital_PWM_ReadControlRegister
 569              		.thumb
 570              		.thumb_func
 571              		.type	Digital_PWM_ReadControlRegister, %function
 572              	Digital_PWM_ReadControlRegister:
 573              	.LFB12:
 715:Generated_Source\PSoC5/Digital_PWM.c **** 
 716:Generated_Source\PSoC5/Digital_PWM.c **** #endif /* (Digital_PWM_UseStatus || Digital_PWM_UsingFixedFunction) */
 717:Generated_Source\PSoC5/Digital_PWM.c **** 
 718:Generated_Source\PSoC5/Digital_PWM.c **** 
 719:Generated_Source\PSoC5/Digital_PWM.c **** #if (Digital_PWM_UseControl)
 720:Generated_Source\PSoC5/Digital_PWM.c **** 
 721:Generated_Source\PSoC5/Digital_PWM.c **** 
 722:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_ReadControlRegister
 724:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/Digital_PWM.c ****     *
 726:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 727:Generated_Source\PSoC5/Digital_PWM.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/Digital_PWM.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/Digital_PWM.c ****     *
 730:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 731:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 732:Generated_Source\PSoC5/Digital_PWM.c ****     *
 733:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 734:Generated_Source\PSoC5/Digital_PWM.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/Digital_PWM.c ****     *
 736:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/Digital_PWM.c ****     uint8 Digital_PWM_ReadControlRegister(void) 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 24


 738:Generated_Source\PSoC5/Digital_PWM.c ****     {
 574              		.loc 1 738 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 8
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578              		@ link register save eliminated.
 579 0000 80B4     		push	{r7}
 580              		.cfi_def_cfa_offset 4
 581              		.cfi_offset 7, -4
 582 0002 83B0     		sub	sp, sp, #12
 583              		.cfi_def_cfa_offset 16
 584 0004 00AF     		add	r7, sp, #0
 585              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/Digital_PWM.c ****         uint8 result;
 740:Generated_Source\PSoC5/Digital_PWM.c **** 
 741:Generated_Source\PSoC5/Digital_PWM.c ****         result = CY_GET_REG8(Digital_PWM_CONTROL_PTR);
 586              		.loc 1 741 0
 587 0006 054B     		ldr	r3, .L42
 588 0008 1B78     		ldrb	r3, [r3]
 589 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/Digital_PWM.c ****         return (result);
 590              		.loc 1 742 0
 591 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/Digital_PWM.c ****     }
 592              		.loc 1 743 0
 593 000e 1846     		mov	r0, r3
 594 0010 0C37     		adds	r7, r7, #12
 595              		.cfi_def_cfa_offset 4
 596 0012 BD46     		mov	sp, r7
 597              		.cfi_def_cfa_register 13
 598              		@ sp needed
 599 0014 5DF8047B 		ldr	r7, [sp], #4
 600              		.cfi_restore 7
 601              		.cfi_def_cfa_offset 0
 602 0018 7047     		bx	lr
 603              	.L43:
 604 001a 00BF     		.align	2
 605              	.L42:
 606 001c 73640040 		.word	1073767539
 607              		.cfi_endproc
 608              	.LFE12:
 609              		.size	Digital_PWM_ReadControlRegister, .-Digital_PWM_ReadControlRegister
 610              		.section	.text.Digital_PWM_WriteControlRegister,"ax",%progbits
 611              		.align	2
 612              		.global	Digital_PWM_WriteControlRegister
 613              		.thumb
 614              		.thumb_func
 615              		.type	Digital_PWM_WriteControlRegister, %function
 616              	Digital_PWM_WriteControlRegister:
 617              	.LFB13:
 744:Generated_Source\PSoC5/Digital_PWM.c **** 
 745:Generated_Source\PSoC5/Digital_PWM.c **** 
 746:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_WriteControlRegister
 748:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/Digital_PWM.c ****     *
 750:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 25


 751:Generated_Source\PSoC5/Digital_PWM.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/Digital_PWM.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/Digital_PWM.c ****     *
 754:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 755:Generated_Source\PSoC5/Digital_PWM.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/Digital_PWM.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/Digital_PWM.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/Digital_PWM.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/Digital_PWM.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/Digital_PWM.c ****     *
 761:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 762:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 763:Generated_Source\PSoC5/Digital_PWM.c ****     *
 764:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/Digital_PWM.c ****     void Digital_PWM_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/Digital_PWM.c ****     {
 618              		.loc 1 766 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622              		@ link register save eliminated.
 623 0000 80B4     		push	{r7}
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 7, -4
 626 0002 83B0     		sub	sp, sp, #12
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
 630 0006 0346     		mov	r3, r0
 631 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/Digital_PWM.c ****         CY_SET_REG8(Digital_PWM_CONTROL_PTR, control);
 632              		.loc 1 767 0
 633 000a 044A     		ldr	r2, .L45
 634 000c FB79     		ldrb	r3, [r7, #7]
 635 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/Digital_PWM.c ****     }
 636              		.loc 1 768 0
 637 0010 0C37     		adds	r7, r7, #12
 638              		.cfi_def_cfa_offset 4
 639 0012 BD46     		mov	sp, r7
 640              		.cfi_def_cfa_register 13
 641              		@ sp needed
 642 0014 5DF8047B 		ldr	r7, [sp], #4
 643              		.cfi_restore 7
 644              		.cfi_def_cfa_offset 0
 645 0018 7047     		bx	lr
 646              	.L46:
 647 001a 00BF     		.align	2
 648              	.L45:
 649 001c 73640040 		.word	1073767539
 650              		.cfi_endproc
 651              	.LFE13:
 652              		.size	Digital_PWM_WriteControlRegister, .-Digital_PWM_WriteControlRegister
 653              		.section	.text.Digital_PWM_ReadCapture,"ax",%progbits
 654              		.align	2
 655              		.global	Digital_PWM_ReadCapture
 656              		.thumb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 26


 657              		.thumb_func
 658              		.type	Digital_PWM_ReadCapture, %function
 659              	Digital_PWM_ReadCapture:
 660              	.LFB14:
 769:Generated_Source\PSoC5/Digital_PWM.c **** 
 770:Generated_Source\PSoC5/Digital_PWM.c **** #endif /* (Digital_PWM_UseControl) */
 771:Generated_Source\PSoC5/Digital_PWM.c **** 
 772:Generated_Source\PSoC5/Digital_PWM.c **** 
 773:Generated_Source\PSoC5/Digital_PWM.c **** #if (!Digital_PWM_UsingFixedFunction)
 774:Generated_Source\PSoC5/Digital_PWM.c **** 
 775:Generated_Source\PSoC5/Digital_PWM.c **** 
 776:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_ReadCapture
 778:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/Digital_PWM.c ****     *
 780:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 781:Generated_Source\PSoC5/Digital_PWM.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/Digital_PWM.c ****     *
 783:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 784:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 785:Generated_Source\PSoC5/Digital_PWM.c ****     *
 786:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 787:Generated_Source\PSoC5/Digital_PWM.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/Digital_PWM.c ****     *
 789:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/Digital_PWM.c ****     uint8 Digital_PWM_ReadCapture(void) 
 791:Generated_Source\PSoC5/Digital_PWM.c ****     {
 661              		.loc 1 791 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 1, uses_anonymous_args = 0
 665              		@ link register save eliminated.
 666 0000 80B4     		push	{r7}
 667              		.cfi_def_cfa_offset 4
 668              		.cfi_offset 7, -4
 669 0002 00AF     		add	r7, sp, #0
 670              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/Digital_PWM.c ****         return (CY_GET_REG8(Digital_PWM_CAPTURE_LSB_PTR));
 671              		.loc 1 792 0
 672 0004 034B     		ldr	r3, .L49
 673 0006 1B78     		ldrb	r3, [r3]
 674 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC5/Digital_PWM.c ****     }
 675              		.loc 1 793 0
 676 000a 1846     		mov	r0, r3
 677 000c BD46     		mov	sp, r7
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 000e 5DF8047B 		ldr	r7, [sp], #4
 681              		.cfi_restore 7
 682              		.cfi_def_cfa_offset 0
 683 0012 7047     		bx	lr
 684              	.L50:
 685              		.align	2
 686              	.L49:
 687 0014 53640040 		.word	1073767507
 688              		.cfi_endproc
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 27


 689              	.LFE14:
 690              		.size	Digital_PWM_ReadCapture, .-Digital_PWM_ReadCapture
 691              		.section	.text.Digital_PWM_ReadCompare1,"ax",%progbits
 692              		.align	2
 693              		.global	Digital_PWM_ReadCompare1
 694              		.thumb
 695              		.thumb_func
 696              		.type	Digital_PWM_ReadCompare1, %function
 697              	Digital_PWM_ReadCompare1:
 698              	.LFB15:
 794:Generated_Source\PSoC5/Digital_PWM.c **** 
 795:Generated_Source\PSoC5/Digital_PWM.c **** #endif /* (!Digital_PWM_UsingFixedFunction) */
 796:Generated_Source\PSoC5/Digital_PWM.c **** 
 797:Generated_Source\PSoC5/Digital_PWM.c **** 
 798:Generated_Source\PSoC5/Digital_PWM.c **** #if (Digital_PWM_UseOneCompareMode)
 799:Generated_Source\PSoC5/Digital_PWM.c **** 
 800:Generated_Source\PSoC5/Digital_PWM.c **** 
 801:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_ReadCompare
 803:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/Digital_PWM.c ****     *
 805:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 806:Generated_Source\PSoC5/Digital_PWM.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/Digital_PWM.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/Digital_PWM.c ****     *
 809:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 810:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 811:Generated_Source\PSoC5/Digital_PWM.c ****     *
 812:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 813:Generated_Source\PSoC5/Digital_PWM.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/Digital_PWM.c ****     *
 815:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/Digital_PWM.c ****     uint8 Digital_PWM_ReadCompare(void) 
 817:Generated_Source\PSoC5/Digital_PWM.c ****     {
 818:Generated_Source\PSoC5/Digital_PWM.c ****         #if(Digital_PWM_UsingFixedFunction)
 819:Generated_Source\PSoC5/Digital_PWM.c ****             return ((uint8)CY_GET_REG16(Digital_PWM_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC5/Digital_PWM.c ****         #else
 821:Generated_Source\PSoC5/Digital_PWM.c ****             return (CY_GET_REG8(Digital_PWM_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC5/Digital_PWM.c ****         #endif /* (Digital_PWM_UsingFixedFunction) */
 823:Generated_Source\PSoC5/Digital_PWM.c ****     }
 824:Generated_Source\PSoC5/Digital_PWM.c **** 
 825:Generated_Source\PSoC5/Digital_PWM.c **** #else
 826:Generated_Source\PSoC5/Digital_PWM.c **** 
 827:Generated_Source\PSoC5/Digital_PWM.c **** 
 828:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_ReadCompare1
 830:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/Digital_PWM.c ****     *
 832:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 833:Generated_Source\PSoC5/Digital_PWM.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/Digital_PWM.c ****     *
 835:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 836:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 837:Generated_Source\PSoC5/Digital_PWM.c ****     *
 838:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 839:Generated_Source\PSoC5/Digital_PWM.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/Digital_PWM.c ****     *
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 28


 841:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/Digital_PWM.c ****     uint8 Digital_PWM_ReadCompare1(void) 
 843:Generated_Source\PSoC5/Digital_PWM.c ****     {
 699              		.loc 1 843 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704 0000 80B4     		push	{r7}
 705              		.cfi_def_cfa_offset 4
 706              		.cfi_offset 7, -4
 707 0002 00AF     		add	r7, sp, #0
 708              		.cfi_def_cfa_register 7
 844:Generated_Source\PSoC5/Digital_PWM.c ****         return (CY_GET_REG8(Digital_PWM_COMPARE1_LSB_PTR));
 709              		.loc 1 844 0
 710 0004 034B     		ldr	r3, .L53
 711 0006 1B78     		ldrb	r3, [r3]
 712 0008 DBB2     		uxtb	r3, r3
 845:Generated_Source\PSoC5/Digital_PWM.c ****     }
 713              		.loc 1 845 0
 714 000a 1846     		mov	r0, r3
 715 000c BD46     		mov	sp, r7
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 000e 5DF8047B 		ldr	r7, [sp], #4
 719              		.cfi_restore 7
 720              		.cfi_def_cfa_offset 0
 721 0012 7047     		bx	lr
 722              	.L54:
 723              		.align	2
 724              	.L53:
 725 0014 23640040 		.word	1073767459
 726              		.cfi_endproc
 727              	.LFE15:
 728              		.size	Digital_PWM_ReadCompare1, .-Digital_PWM_ReadCompare1
 729              		.section	.text.Digital_PWM_ReadCompare2,"ax",%progbits
 730              		.align	2
 731              		.global	Digital_PWM_ReadCompare2
 732              		.thumb
 733              		.thumb_func
 734              		.type	Digital_PWM_ReadCompare2, %function
 735              	Digital_PWM_ReadCompare2:
 736              	.LFB16:
 846:Generated_Source\PSoC5/Digital_PWM.c **** 
 847:Generated_Source\PSoC5/Digital_PWM.c **** 
 848:Generated_Source\PSoC5/Digital_PWM.c ****     /*******************************************************************************
 849:Generated_Source\PSoC5/Digital_PWM.c ****     * Function Name: Digital_PWM_ReadCompare2
 850:Generated_Source\PSoC5/Digital_PWM.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/Digital_PWM.c ****     *
 852:Generated_Source\PSoC5/Digital_PWM.c ****     * Summary:
 853:Generated_Source\PSoC5/Digital_PWM.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/Digital_PWM.c ****     *
 855:Generated_Source\PSoC5/Digital_PWM.c ****     * Parameters:
 856:Generated_Source\PSoC5/Digital_PWM.c ****     *  None
 857:Generated_Source\PSoC5/Digital_PWM.c ****     *
 858:Generated_Source\PSoC5/Digital_PWM.c ****     * Return:
 859:Generated_Source\PSoC5/Digital_PWM.c ****     *  uint8/uint16: Current compare value.
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 29


 860:Generated_Source\PSoC5/Digital_PWM.c ****     *
 861:Generated_Source\PSoC5/Digital_PWM.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/Digital_PWM.c ****     uint8 Digital_PWM_ReadCompare2(void) 
 863:Generated_Source\PSoC5/Digital_PWM.c ****     {
 737              		.loc 1 863 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 0
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 864:Generated_Source\PSoC5/Digital_PWM.c ****         return (CY_GET_REG8(Digital_PWM_COMPARE2_LSB_PTR));
 747              		.loc 1 864 0
 748 0004 034B     		ldr	r3, .L57
 749 0006 1B78     		ldrb	r3, [r3]
 750 0008 DBB2     		uxtb	r3, r3
 865:Generated_Source\PSoC5/Digital_PWM.c ****     }
 751              		.loc 1 865 0
 752 000a 1846     		mov	r0, r3
 753 000c BD46     		mov	sp, r7
 754              		.cfi_def_cfa_register 13
 755              		@ sp needed
 756 000e 5DF8047B 		ldr	r7, [sp], #4
 757              		.cfi_restore 7
 758              		.cfi_def_cfa_offset 0
 759 0012 7047     		bx	lr
 760              	.L58:
 761              		.align	2
 762              	.L57:
 763 0014 33640040 		.word	1073767475
 764              		.cfi_endproc
 765              	.LFE16:
 766              		.size	Digital_PWM_ReadCompare2, .-Digital_PWM_ReadCompare2
 767              		.section	.text.Digital_PWM_ReadPeriod,"ax",%progbits
 768              		.align	2
 769              		.global	Digital_PWM_ReadPeriod
 770              		.thumb
 771              		.thumb_func
 772              		.type	Digital_PWM_ReadPeriod, %function
 773              	Digital_PWM_ReadPeriod:
 774              	.LFB17:
 866:Generated_Source\PSoC5/Digital_PWM.c **** 
 867:Generated_Source\PSoC5/Digital_PWM.c **** #endif /* (Digital_PWM_UseOneCompareMode) */
 868:Generated_Source\PSoC5/Digital_PWM.c **** 
 869:Generated_Source\PSoC5/Digital_PWM.c **** 
 870:Generated_Source\PSoC5/Digital_PWM.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/Digital_PWM.c **** * Function Name: Digital_PWM_ReadPeriod
 872:Generated_Source\PSoC5/Digital_PWM.c **** ********************************************************************************
 873:Generated_Source\PSoC5/Digital_PWM.c **** *
 874:Generated_Source\PSoC5/Digital_PWM.c **** * Summary:
 875:Generated_Source\PSoC5/Digital_PWM.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/Digital_PWM.c **** *
 877:Generated_Source\PSoC5/Digital_PWM.c **** * Parameters:
 878:Generated_Source\PSoC5/Digital_PWM.c **** *  None
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 30


 879:Generated_Source\PSoC5/Digital_PWM.c **** *
 880:Generated_Source\PSoC5/Digital_PWM.c **** * Return:
 881:Generated_Source\PSoC5/Digital_PWM.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/Digital_PWM.c **** *
 883:Generated_Source\PSoC5/Digital_PWM.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/Digital_PWM.c **** uint8 Digital_PWM_ReadPeriod(void) 
 885:Generated_Source\PSoC5/Digital_PWM.c **** {
 775              		.loc 1 885 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 1, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 780 0000 80B4     		push	{r7}
 781              		.cfi_def_cfa_offset 4
 782              		.cfi_offset 7, -4
 783 0002 00AF     		add	r7, sp, #0
 784              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/Digital_PWM.c ****     #if(Digital_PWM_UsingFixedFunction)
 887:Generated_Source\PSoC5/Digital_PWM.c ****         return ((uint8)CY_GET_REG16(Digital_PWM_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/Digital_PWM.c ****     #else
 889:Generated_Source\PSoC5/Digital_PWM.c ****         return (CY_GET_REG8(Digital_PWM_PERIOD_LSB_PTR));
 785              		.loc 1 889 0
 786 0004 034B     		ldr	r3, .L61
 787 0006 1B78     		ldrb	r3, [r3]
 788 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC5/Digital_PWM.c ****     #endif /* (Digital_PWM_UsingFixedFunction) */
 891:Generated_Source\PSoC5/Digital_PWM.c **** }
 789              		.loc 1 891 0
 790 000a 1846     		mov	r0, r3
 791 000c BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 000e 5DF8047B 		ldr	r7, [sp], #4
 795              		.cfi_restore 7
 796              		.cfi_def_cfa_offset 0
 797 0012 7047     		bx	lr
 798              	.L62:
 799              		.align	2
 800              	.L61:
 801 0014 43640040 		.word	1073767491
 802              		.cfi_endproc
 803              	.LFE17:
 804              		.size	Digital_PWM_ReadPeriod, .-Digital_PWM_ReadPeriod
 805              		.text
 806              	.Letext0:
 807              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 808              		.section	.debug_info,"",%progbits
 809              	.Ldebug_info0:
 810 0000 BB020000 		.4byte	0x2bb
 811 0004 0400     		.2byte	0x4
 812 0006 00000000 		.4byte	.Ldebug_abbrev0
 813 000a 04       		.byte	0x4
 814 000b 01       		.uleb128 0x1
 815 000c 30010000 		.4byte	.LASF40
 816 0010 01       		.byte	0x1
 817 0011 19030000 		.4byte	.LASF41
 818 0015 E6010000 		.4byte	.LASF42
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 31


 819 0019 00000000 		.4byte	.Ldebug_ranges0+0
 820 001d 00000000 		.4byte	0
 821 0021 00000000 		.4byte	.Ldebug_line0
 822 0025 02       		.uleb128 0x2
 823 0026 01       		.byte	0x1
 824 0027 06       		.byte	0x6
 825 0028 BD030000 		.4byte	.LASF0
 826 002c 02       		.uleb128 0x2
 827 002d 01       		.byte	0x1
 828 002e 08       		.byte	0x8
 829 002f E0000000 		.4byte	.LASF1
 830 0033 02       		.uleb128 0x2
 831 0034 02       		.byte	0x2
 832 0035 05       		.byte	0x5
 833 0036 0F030000 		.4byte	.LASF2
 834 003a 02       		.uleb128 0x2
 835 003b 02       		.byte	0x2
 836 003c 07       		.byte	0x7
 837 003d 63000000 		.4byte	.LASF3
 838 0041 02       		.uleb128 0x2
 839 0042 04       		.byte	0x4
 840 0043 05       		.byte	0x5
 841 0044 5A000000 		.4byte	.LASF4
 842 0048 02       		.uleb128 0x2
 843 0049 04       		.byte	0x4
 844 004a 07       		.byte	0x7
 845 004b 10010000 		.4byte	.LASF5
 846 004f 02       		.uleb128 0x2
 847 0050 08       		.byte	0x8
 848 0051 05       		.byte	0x5
 849 0052 CB020000 		.4byte	.LASF6
 850 0056 02       		.uleb128 0x2
 851 0057 08       		.byte	0x8
 852 0058 07       		.byte	0x7
 853 0059 70020000 		.4byte	.LASF7
 854 005d 03       		.uleb128 0x3
 855 005e 04       		.byte	0x4
 856 005f 05       		.byte	0x5
 857 0060 696E7400 		.ascii	"int\000"
 858 0064 02       		.uleb128 0x2
 859 0065 04       		.byte	0x4
 860 0066 07       		.byte	0x7
 861 0067 63020000 		.4byte	.LASF8
 862 006b 04       		.uleb128 0x4
 863 006c 22010000 		.4byte	.LASF12
 864 0070 02       		.byte	0x2
 865 0071 9201     		.2byte	0x192
 866 0073 2C000000 		.4byte	0x2c
 867 0077 02       		.uleb128 0x2
 868 0078 04       		.byte	0x4
 869 0079 04       		.byte	0x4
 870 007a D2000000 		.4byte	.LASF9
 871 007e 02       		.uleb128 0x2
 872 007f 08       		.byte	0x8
 873 0080 04       		.byte	0x4
 874 0081 BE010000 		.4byte	.LASF10
 875 0085 02       		.uleb128 0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 32


 876 0086 01       		.byte	0x1
 877 0087 08       		.byte	0x8
 878 0088 00000000 		.4byte	.LASF11
 879 008c 04       		.uleb128 0x4
 880 008d 0B010000 		.4byte	.LASF13
 881 0091 02       		.byte	0x2
 882 0092 3C02     		.2byte	0x23c
 883 0094 98000000 		.4byte	0x98
 884 0098 05       		.uleb128 0x5
 885 0099 6B000000 		.4byte	0x6b
 886 009d 02       		.uleb128 0x2
 887 009e 04       		.byte	0x4
 888 009f 07       		.byte	0x7
 889 00a0 C2020000 		.4byte	.LASF14
 890 00a4 06       		.uleb128 0x6
 891 00a5 D9020000 		.4byte	.LASF17
 892 00a9 01       		.byte	0x1
 893 00aa 37       		.byte	0x37
 894 00ab 00000000 		.4byte	.LFB0
 895 00af 20000000 		.4byte	.LFE0-.LFB0
 896 00b3 01       		.uleb128 0x1
 897 00b4 9C       		.byte	0x9c
 898 00b5 07       		.uleb128 0x7
 899 00b6 76000000 		.4byte	.LASF20
 900 00ba 01       		.byte	0x1
 901 00bb 54       		.byte	0x54
 902 00bc 00000000 		.4byte	.LFB1
 903 00c0 80000000 		.4byte	.LFE1-.LFB1
 904 00c4 01       		.uleb128 0x1
 905 00c5 9C       		.byte	0x9c
 906 00c6 E7000000 		.4byte	0xe7
 907 00ca 08       		.uleb128 0x8
 908 00cb BD020000 		.4byte	.LASF15
 909 00cf 01       		.byte	0x1
 910 00d0 57       		.byte	0x57
 911 00d1 6B000000 		.4byte	0x6b
 912 00d5 02       		.uleb128 0x2
 913 00d6 91       		.byte	0x91
 914 00d7 77       		.sleb128 -9
 915 00d8 08       		.uleb128 0x8
 916 00d9 05000000 		.4byte	.LASF16
 917 00dd 01       		.byte	0x1
 918 00de 5D       		.byte	0x5d
 919 00df 6B000000 		.4byte	0x6b
 920 00e3 02       		.uleb128 0x2
 921 00e4 91       		.byte	0x91
 922 00e5 76       		.sleb128 -10
 923 00e6 00       		.byte	0
 924 00e7 09       		.uleb128 0x9
 925 00e8 40000000 		.4byte	.LASF18
 926 00ec 01       		.byte	0x1
 927 00ed C7       		.byte	0xc7
 928 00ee 00000000 		.4byte	.LFB2
 929 00f2 20000000 		.4byte	.LFE2-.LFB2
 930 00f6 01       		.uleb128 0x1
 931 00f7 9C       		.byte	0x9c
 932 00f8 09       		.uleb128 0x9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 33


 933 00f9 52020000 		.4byte	.LASF19
 934 00fd 01       		.byte	0x1
 935 00fe E9       		.byte	0xe9
 936 00ff 00000000 		.4byte	.LFB3
 937 0103 20000000 		.4byte	.LFE3-.LFB3
 938 0107 01       		.uleb128 0x1
 939 0108 9C       		.byte	0x9c
 940 0109 0A       		.uleb128 0xa
 941 010a 3E030000 		.4byte	.LASF21
 942 010e 01       		.byte	0x1
 943 010f 9301     		.2byte	0x193
 944 0111 00000000 		.4byte	.LFB4
 945 0115 20000000 		.4byte	.LFE4-.LFB4
 946 0119 01       		.uleb128 0x1
 947 011a 9C       		.byte	0x9c
 948 011b 2F010000 		.4byte	0x12f
 949 011f 0B       		.uleb128 0xb
 950 0120 D8000000 		.4byte	.LASF24
 951 0124 01       		.byte	0x1
 952 0125 9301     		.2byte	0x193
 953 0127 6B000000 		.4byte	0x6b
 954 012b 02       		.uleb128 0x2
 955 012c 91       		.byte	0x91
 956 012d 77       		.sleb128 -9
 957 012e 00       		.byte	0
 958 012f 0C       		.uleb128 0xc
 959 0130 3A020000 		.4byte	.LASF31
 960 0134 01       		.byte	0x1
 961 0135 A901     		.2byte	0x1a9
 962 0137 6B000000 		.4byte	0x6b
 963 013b 00000000 		.4byte	.LFB5
 964 013f 20000000 		.4byte	.LFE5-.LFB5
 965 0143 01       		.uleb128 0x1
 966 0144 9C       		.byte	0x9c
 967 0145 0D       		.uleb128 0xd
 968 0146 EB020000 		.4byte	.LASF22
 969 014a 01       		.byte	0x1
 970 014b C501     		.2byte	0x1c5
 971 014d 00000000 		.4byte	.LFB6
 972 0151 1A000000 		.4byte	.LFE6-.LFB6
 973 0155 01       		.uleb128 0x1
 974 0156 9C       		.byte	0x9c
 975 0157 0A       		.uleb128 0xa
 976 0158 A5020000 		.4byte	.LASF23
 977 015c 01       		.byte	0x1
 978 015d E201     		.2byte	0x1e2
 979 015f 00000000 		.4byte	.LFB7
 980 0163 20000000 		.4byte	.LFE7-.LFB7
 981 0167 01       		.uleb128 0x1
 982 0168 9C       		.byte	0x9c
 983 0169 7D010000 		.4byte	0x17d
 984 016d 0B       		.uleb128 0xb
 985 016e 53000000 		.4byte	.LASF25
 986 0172 01       		.byte	0x1
 987 0173 E201     		.2byte	0x1e2
 988 0175 6B000000 		.4byte	0x6b
 989 0179 02       		.uleb128 0x2
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 34


 990 017a 91       		.byte	0x91
 991 017b 77       		.sleb128 -9
 992 017c 00       		.byte	0
 993 017d 0A       		.uleb128 0xa
 994 017e 57030000 		.4byte	.LASF26
 995 0182 01       		.byte	0x1
 996 0183 2B02     		.2byte	0x22b
 997 0185 00000000 		.4byte	.LFB8
 998 0189 20000000 		.4byte	.LFE8-.LFB8
 999 018d 01       		.uleb128 0x1
 1000 018e 9C       		.byte	0x9c
 1001 018f A3010000 		.4byte	0x1a3
 1002 0193 0B       		.uleb128 0xb
 1003 0194 C9030000 		.4byte	.LASF27
 1004 0198 01       		.byte	0x1
 1005 0199 2B02     		.2byte	0x22b
 1006 019b 6B000000 		.4byte	0x6b
 1007 019f 02       		.uleb128 0x2
 1008 01a0 91       		.byte	0x91
 1009 01a1 77       		.sleb128 -9
 1010 01a2 00       		.byte	0
 1011 01a3 0A       		.uleb128 0xa
 1012 01a4 71030000 		.4byte	.LASF28
 1013 01a8 01       		.byte	0x1
 1014 01a9 4802     		.2byte	0x248
 1015 01ab 00000000 		.4byte	.LFB9
 1016 01af 20000000 		.4byte	.LFE9-.LFB9
 1017 01b3 01       		.uleb128 0x1
 1018 01b4 9C       		.byte	0x9c
 1019 01b5 C9010000 		.4byte	0x1c9
 1020 01b9 0B       		.uleb128 0xb
 1021 01ba C9030000 		.4byte	.LASF27
 1022 01be 01       		.byte	0x1
 1023 01bf 4802     		.2byte	0x248
 1024 01c1 6B000000 		.4byte	0x6b
 1025 01c5 02       		.uleb128 0x2
 1026 01c6 91       		.byte	0x91
 1027 01c7 77       		.sleb128 -9
 1028 01c8 00       		.byte	0
 1029 01c9 0A       		.uleb128 0xa
 1030 01ca EE000000 		.4byte	.LASF29
 1031 01ce 01       		.byte	0x1
 1032 01cf AC02     		.2byte	0x2ac
 1033 01d1 00000000 		.4byte	.LFB10
 1034 01d5 20000000 		.4byte	.LFE10-.LFB10
 1035 01d9 01       		.uleb128 0x1
 1036 01da 9C       		.byte	0x9c
 1037 01db EF010000 		.4byte	0x1ef
 1038 01df 0B       		.uleb128 0xb
 1039 01e0 01030000 		.4byte	.LASF30
 1040 01e4 01       		.byte	0x1
 1041 01e5 AC02     		.2byte	0x2ac
 1042 01e7 6B000000 		.4byte	0x6b
 1043 01eb 02       		.uleb128 0x2
 1044 01ec 91       		.byte	0x91
 1045 01ed 77       		.sleb128 -9
 1046 01ee 00       		.byte	0
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 35


 1047 01ef 0C       		.uleb128 0xc
 1048 01f0 B3000000 		.4byte	.LASF32
 1049 01f4 01       		.byte	0x1
 1050 01f5 C702     		.2byte	0x2c7
 1051 01f7 6B000000 		.4byte	0x6b
 1052 01fb 00000000 		.4byte	.LFB11
 1053 01ff 18000000 		.4byte	.LFE11-.LFB11
 1054 0203 01       		.uleb128 0x1
 1055 0204 9C       		.byte	0x9c
 1056 0205 0E       		.uleb128 0xe
 1057 0206 20000000 		.4byte	.LASF43
 1058 020a 01       		.byte	0x1
 1059 020b E102     		.2byte	0x2e1
 1060 020d 6B000000 		.4byte	0x6b
 1061 0211 00000000 		.4byte	.LFB12
 1062 0215 20000000 		.4byte	.LFE12-.LFB12
 1063 0219 01       		.uleb128 0x1
 1064 021a 9C       		.byte	0x9c
 1065 021b 2F020000 		.4byte	0x22f
 1066 021f 0F       		.uleb128 0xf
 1067 0220 9E020000 		.4byte	.LASF33
 1068 0224 01       		.byte	0x1
 1069 0225 E302     		.2byte	0x2e3
 1070 0227 6B000000 		.4byte	0x6b
 1071 022b 02       		.uleb128 0x2
 1072 022c 91       		.byte	0x91
 1073 022d 77       		.sleb128 -9
 1074 022e 00       		.byte	0
 1075 022f 0A       		.uleb128 0xa
 1076 0230 C5010000 		.4byte	.LASF34
 1077 0234 01       		.byte	0x1
 1078 0235 FD02     		.2byte	0x2fd
 1079 0237 00000000 		.4byte	.LFB13
 1080 023b 20000000 		.4byte	.LFE13-.LFB13
 1081 023f 01       		.uleb128 0x1
 1082 0240 9C       		.byte	0x9c
 1083 0241 55020000 		.4byte	0x255
 1084 0245 0B       		.uleb128 0xb
 1085 0246 28010000 		.4byte	.LASF35
 1086 024a 01       		.byte	0x1
 1087 024b FD02     		.2byte	0x2fd
 1088 024d 6B000000 		.4byte	0x6b
 1089 0251 02       		.uleb128 0x2
 1090 0252 91       		.byte	0x91
 1091 0253 77       		.sleb128 -9
 1092 0254 00       		.byte	0
 1093 0255 0C       		.uleb128 0xc
 1094 0256 87000000 		.4byte	.LASF36
 1095 025a 01       		.byte	0x1
 1096 025b 1603     		.2byte	0x316
 1097 025d 6B000000 		.4byte	0x6b
 1098 0261 00000000 		.4byte	.LFB14
 1099 0265 18000000 		.4byte	.LFE14-.LFB14
 1100 0269 01       		.uleb128 0x1
 1101 026a 9C       		.byte	0x9c
 1102 026b 0C       		.uleb128 0xc
 1103 026c 8B030000 		.4byte	.LASF37
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 36


 1104 0270 01       		.byte	0x1
 1105 0271 4A03     		.2byte	0x34a
 1106 0273 6B000000 		.4byte	0x6b
 1107 0277 00000000 		.4byte	.LFB15
 1108 027b 18000000 		.4byte	.LFE15-.LFB15
 1109 027f 01       		.uleb128 0x1
 1110 0280 9C       		.byte	0x9c
 1111 0281 0C       		.uleb128 0xc
 1112 0282 A4030000 		.4byte	.LASF38
 1113 0286 01       		.byte	0x1
 1114 0287 5E03     		.2byte	0x35e
 1115 0289 6B000000 		.4byte	0x6b
 1116 028d 00000000 		.4byte	.LFB16
 1117 0291 18000000 		.4byte	.LFE16-.LFB16
 1118 0295 01       		.uleb128 0x1
 1119 0296 9C       		.byte	0x9c
 1120 0297 0C       		.uleb128 0xc
 1121 0298 87020000 		.4byte	.LASF39
 1122 029c 01       		.byte	0x1
 1123 029d 7403     		.2byte	0x374
 1124 029f 6B000000 		.4byte	0x6b
 1125 02a3 00000000 		.4byte	.LFB17
 1126 02a7 18000000 		.4byte	.LFE17-.LFB17
 1127 02ab 01       		.uleb128 0x1
 1128 02ac 9C       		.byte	0x9c
 1129 02ad 10       		.uleb128 0x10
 1130 02ae 9F000000 		.4byte	.LASF44
 1131 02b2 01       		.byte	0x1
 1132 02b3 20       		.byte	0x20
 1133 02b4 6B000000 		.4byte	0x6b
 1134 02b8 05       		.uleb128 0x5
 1135 02b9 03       		.byte	0x3
 1136 02ba 00000000 		.4byte	Digital_PWM_initVar
 1137 02be 00       		.byte	0
 1138              		.section	.debug_abbrev,"",%progbits
 1139              	.Ldebug_abbrev0:
 1140 0000 01       		.uleb128 0x1
 1141 0001 11       		.uleb128 0x11
 1142 0002 01       		.byte	0x1
 1143 0003 25       		.uleb128 0x25
 1144 0004 0E       		.uleb128 0xe
 1145 0005 13       		.uleb128 0x13
 1146 0006 0B       		.uleb128 0xb
 1147 0007 03       		.uleb128 0x3
 1148 0008 0E       		.uleb128 0xe
 1149 0009 1B       		.uleb128 0x1b
 1150 000a 0E       		.uleb128 0xe
 1151 000b 55       		.uleb128 0x55
 1152 000c 17       		.uleb128 0x17
 1153 000d 11       		.uleb128 0x11
 1154 000e 01       		.uleb128 0x1
 1155 000f 10       		.uleb128 0x10
 1156 0010 17       		.uleb128 0x17
 1157 0011 00       		.byte	0
 1158 0012 00       		.byte	0
 1159 0013 02       		.uleb128 0x2
 1160 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 37


 1161 0015 00       		.byte	0
 1162 0016 0B       		.uleb128 0xb
 1163 0017 0B       		.uleb128 0xb
 1164 0018 3E       		.uleb128 0x3e
 1165 0019 0B       		.uleb128 0xb
 1166 001a 03       		.uleb128 0x3
 1167 001b 0E       		.uleb128 0xe
 1168 001c 00       		.byte	0
 1169 001d 00       		.byte	0
 1170 001e 03       		.uleb128 0x3
 1171 001f 24       		.uleb128 0x24
 1172 0020 00       		.byte	0
 1173 0021 0B       		.uleb128 0xb
 1174 0022 0B       		.uleb128 0xb
 1175 0023 3E       		.uleb128 0x3e
 1176 0024 0B       		.uleb128 0xb
 1177 0025 03       		.uleb128 0x3
 1178 0026 08       		.uleb128 0x8
 1179 0027 00       		.byte	0
 1180 0028 00       		.byte	0
 1181 0029 04       		.uleb128 0x4
 1182 002a 16       		.uleb128 0x16
 1183 002b 00       		.byte	0
 1184 002c 03       		.uleb128 0x3
 1185 002d 0E       		.uleb128 0xe
 1186 002e 3A       		.uleb128 0x3a
 1187 002f 0B       		.uleb128 0xb
 1188 0030 3B       		.uleb128 0x3b
 1189 0031 05       		.uleb128 0x5
 1190 0032 49       		.uleb128 0x49
 1191 0033 13       		.uleb128 0x13
 1192 0034 00       		.byte	0
 1193 0035 00       		.byte	0
 1194 0036 05       		.uleb128 0x5
 1195 0037 35       		.uleb128 0x35
 1196 0038 00       		.byte	0
 1197 0039 49       		.uleb128 0x49
 1198 003a 13       		.uleb128 0x13
 1199 003b 00       		.byte	0
 1200 003c 00       		.byte	0
 1201 003d 06       		.uleb128 0x6
 1202 003e 2E       		.uleb128 0x2e
 1203 003f 00       		.byte	0
 1204 0040 3F       		.uleb128 0x3f
 1205 0041 19       		.uleb128 0x19
 1206 0042 03       		.uleb128 0x3
 1207 0043 0E       		.uleb128 0xe
 1208 0044 3A       		.uleb128 0x3a
 1209 0045 0B       		.uleb128 0xb
 1210 0046 3B       		.uleb128 0x3b
 1211 0047 0B       		.uleb128 0xb
 1212 0048 27       		.uleb128 0x27
 1213 0049 19       		.uleb128 0x19
 1214 004a 11       		.uleb128 0x11
 1215 004b 01       		.uleb128 0x1
 1216 004c 12       		.uleb128 0x12
 1217 004d 06       		.uleb128 0x6
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 38


 1218 004e 40       		.uleb128 0x40
 1219 004f 18       		.uleb128 0x18
 1220 0050 9642     		.uleb128 0x2116
 1221 0052 19       		.uleb128 0x19
 1222 0053 00       		.byte	0
 1223 0054 00       		.byte	0
 1224 0055 07       		.uleb128 0x7
 1225 0056 2E       		.uleb128 0x2e
 1226 0057 01       		.byte	0x1
 1227 0058 3F       		.uleb128 0x3f
 1228 0059 19       		.uleb128 0x19
 1229 005a 03       		.uleb128 0x3
 1230 005b 0E       		.uleb128 0xe
 1231 005c 3A       		.uleb128 0x3a
 1232 005d 0B       		.uleb128 0xb
 1233 005e 3B       		.uleb128 0x3b
 1234 005f 0B       		.uleb128 0xb
 1235 0060 27       		.uleb128 0x27
 1236 0061 19       		.uleb128 0x19
 1237 0062 11       		.uleb128 0x11
 1238 0063 01       		.uleb128 0x1
 1239 0064 12       		.uleb128 0x12
 1240 0065 06       		.uleb128 0x6
 1241 0066 40       		.uleb128 0x40
 1242 0067 18       		.uleb128 0x18
 1243 0068 9642     		.uleb128 0x2116
 1244 006a 19       		.uleb128 0x19
 1245 006b 01       		.uleb128 0x1
 1246 006c 13       		.uleb128 0x13
 1247 006d 00       		.byte	0
 1248 006e 00       		.byte	0
 1249 006f 08       		.uleb128 0x8
 1250 0070 34       		.uleb128 0x34
 1251 0071 00       		.byte	0
 1252 0072 03       		.uleb128 0x3
 1253 0073 0E       		.uleb128 0xe
 1254 0074 3A       		.uleb128 0x3a
 1255 0075 0B       		.uleb128 0xb
 1256 0076 3B       		.uleb128 0x3b
 1257 0077 0B       		.uleb128 0xb
 1258 0078 49       		.uleb128 0x49
 1259 0079 13       		.uleb128 0x13
 1260 007a 02       		.uleb128 0x2
 1261 007b 18       		.uleb128 0x18
 1262 007c 00       		.byte	0
 1263 007d 00       		.byte	0
 1264 007e 09       		.uleb128 0x9
 1265 007f 2E       		.uleb128 0x2e
 1266 0080 00       		.byte	0
 1267 0081 3F       		.uleb128 0x3f
 1268 0082 19       		.uleb128 0x19
 1269 0083 03       		.uleb128 0x3
 1270 0084 0E       		.uleb128 0xe
 1271 0085 3A       		.uleb128 0x3a
 1272 0086 0B       		.uleb128 0xb
 1273 0087 3B       		.uleb128 0x3b
 1274 0088 0B       		.uleb128 0xb
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 39


 1275 0089 27       		.uleb128 0x27
 1276 008a 19       		.uleb128 0x19
 1277 008b 11       		.uleb128 0x11
 1278 008c 01       		.uleb128 0x1
 1279 008d 12       		.uleb128 0x12
 1280 008e 06       		.uleb128 0x6
 1281 008f 40       		.uleb128 0x40
 1282 0090 18       		.uleb128 0x18
 1283 0091 9742     		.uleb128 0x2117
 1284 0093 19       		.uleb128 0x19
 1285 0094 00       		.byte	0
 1286 0095 00       		.byte	0
 1287 0096 0A       		.uleb128 0xa
 1288 0097 2E       		.uleb128 0x2e
 1289 0098 01       		.byte	0x1
 1290 0099 3F       		.uleb128 0x3f
 1291 009a 19       		.uleb128 0x19
 1292 009b 03       		.uleb128 0x3
 1293 009c 0E       		.uleb128 0xe
 1294 009d 3A       		.uleb128 0x3a
 1295 009e 0B       		.uleb128 0xb
 1296 009f 3B       		.uleb128 0x3b
 1297 00a0 05       		.uleb128 0x5
 1298 00a1 27       		.uleb128 0x27
 1299 00a2 19       		.uleb128 0x19
 1300 00a3 11       		.uleb128 0x11
 1301 00a4 01       		.uleb128 0x1
 1302 00a5 12       		.uleb128 0x12
 1303 00a6 06       		.uleb128 0x6
 1304 00a7 40       		.uleb128 0x40
 1305 00a8 18       		.uleb128 0x18
 1306 00a9 9742     		.uleb128 0x2117
 1307 00ab 19       		.uleb128 0x19
 1308 00ac 01       		.uleb128 0x1
 1309 00ad 13       		.uleb128 0x13
 1310 00ae 00       		.byte	0
 1311 00af 00       		.byte	0
 1312 00b0 0B       		.uleb128 0xb
 1313 00b1 05       		.uleb128 0x5
 1314 00b2 00       		.byte	0
 1315 00b3 03       		.uleb128 0x3
 1316 00b4 0E       		.uleb128 0xe
 1317 00b5 3A       		.uleb128 0x3a
 1318 00b6 0B       		.uleb128 0xb
 1319 00b7 3B       		.uleb128 0x3b
 1320 00b8 05       		.uleb128 0x5
 1321 00b9 49       		.uleb128 0x49
 1322 00ba 13       		.uleb128 0x13
 1323 00bb 02       		.uleb128 0x2
 1324 00bc 18       		.uleb128 0x18
 1325 00bd 00       		.byte	0
 1326 00be 00       		.byte	0
 1327 00bf 0C       		.uleb128 0xc
 1328 00c0 2E       		.uleb128 0x2e
 1329 00c1 00       		.byte	0
 1330 00c2 3F       		.uleb128 0x3f
 1331 00c3 19       		.uleb128 0x19
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 40


 1332 00c4 03       		.uleb128 0x3
 1333 00c5 0E       		.uleb128 0xe
 1334 00c6 3A       		.uleb128 0x3a
 1335 00c7 0B       		.uleb128 0xb
 1336 00c8 3B       		.uleb128 0x3b
 1337 00c9 05       		.uleb128 0x5
 1338 00ca 27       		.uleb128 0x27
 1339 00cb 19       		.uleb128 0x19
 1340 00cc 49       		.uleb128 0x49
 1341 00cd 13       		.uleb128 0x13
 1342 00ce 11       		.uleb128 0x11
 1343 00cf 01       		.uleb128 0x1
 1344 00d0 12       		.uleb128 0x12
 1345 00d1 06       		.uleb128 0x6
 1346 00d2 40       		.uleb128 0x40
 1347 00d3 18       		.uleb128 0x18
 1348 00d4 9742     		.uleb128 0x2117
 1349 00d6 19       		.uleb128 0x19
 1350 00d7 00       		.byte	0
 1351 00d8 00       		.byte	0
 1352 00d9 0D       		.uleb128 0xd
 1353 00da 2E       		.uleb128 0x2e
 1354 00db 00       		.byte	0
 1355 00dc 3F       		.uleb128 0x3f
 1356 00dd 19       		.uleb128 0x19
 1357 00de 03       		.uleb128 0x3
 1358 00df 0E       		.uleb128 0xe
 1359 00e0 3A       		.uleb128 0x3a
 1360 00e1 0B       		.uleb128 0xb
 1361 00e2 3B       		.uleb128 0x3b
 1362 00e3 05       		.uleb128 0x5
 1363 00e4 27       		.uleb128 0x27
 1364 00e5 19       		.uleb128 0x19
 1365 00e6 11       		.uleb128 0x11
 1366 00e7 01       		.uleb128 0x1
 1367 00e8 12       		.uleb128 0x12
 1368 00e9 06       		.uleb128 0x6
 1369 00ea 40       		.uleb128 0x40
 1370 00eb 18       		.uleb128 0x18
 1371 00ec 9642     		.uleb128 0x2116
 1372 00ee 19       		.uleb128 0x19
 1373 00ef 00       		.byte	0
 1374 00f0 00       		.byte	0
 1375 00f1 0E       		.uleb128 0xe
 1376 00f2 2E       		.uleb128 0x2e
 1377 00f3 01       		.byte	0x1
 1378 00f4 3F       		.uleb128 0x3f
 1379 00f5 19       		.uleb128 0x19
 1380 00f6 03       		.uleb128 0x3
 1381 00f7 0E       		.uleb128 0xe
 1382 00f8 3A       		.uleb128 0x3a
 1383 00f9 0B       		.uleb128 0xb
 1384 00fa 3B       		.uleb128 0x3b
 1385 00fb 05       		.uleb128 0x5
 1386 00fc 27       		.uleb128 0x27
 1387 00fd 19       		.uleb128 0x19
 1388 00fe 49       		.uleb128 0x49
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 41


 1389 00ff 13       		.uleb128 0x13
 1390 0100 11       		.uleb128 0x11
 1391 0101 01       		.uleb128 0x1
 1392 0102 12       		.uleb128 0x12
 1393 0103 06       		.uleb128 0x6
 1394 0104 40       		.uleb128 0x40
 1395 0105 18       		.uleb128 0x18
 1396 0106 9742     		.uleb128 0x2117
 1397 0108 19       		.uleb128 0x19
 1398 0109 01       		.uleb128 0x1
 1399 010a 13       		.uleb128 0x13
 1400 010b 00       		.byte	0
 1401 010c 00       		.byte	0
 1402 010d 0F       		.uleb128 0xf
 1403 010e 34       		.uleb128 0x34
 1404 010f 00       		.byte	0
 1405 0110 03       		.uleb128 0x3
 1406 0111 0E       		.uleb128 0xe
 1407 0112 3A       		.uleb128 0x3a
 1408 0113 0B       		.uleb128 0xb
 1409 0114 3B       		.uleb128 0x3b
 1410 0115 05       		.uleb128 0x5
 1411 0116 49       		.uleb128 0x49
 1412 0117 13       		.uleb128 0x13
 1413 0118 02       		.uleb128 0x2
 1414 0119 18       		.uleb128 0x18
 1415 011a 00       		.byte	0
 1416 011b 00       		.byte	0
 1417 011c 10       		.uleb128 0x10
 1418 011d 34       		.uleb128 0x34
 1419 011e 00       		.byte	0
 1420 011f 03       		.uleb128 0x3
 1421 0120 0E       		.uleb128 0xe
 1422 0121 3A       		.uleb128 0x3a
 1423 0122 0B       		.uleb128 0xb
 1424 0123 3B       		.uleb128 0x3b
 1425 0124 0B       		.uleb128 0xb
 1426 0125 49       		.uleb128 0x49
 1427 0126 13       		.uleb128 0x13
 1428 0127 3F       		.uleb128 0x3f
 1429 0128 19       		.uleb128 0x19
 1430 0129 02       		.uleb128 0x2
 1431 012a 18       		.uleb128 0x18
 1432 012b 00       		.byte	0
 1433 012c 00       		.byte	0
 1434 012d 00       		.byte	0
 1435              		.section	.debug_aranges,"",%progbits
 1436 0000 A4000000 		.4byte	0xa4
 1437 0004 0200     		.2byte	0x2
 1438 0006 00000000 		.4byte	.Ldebug_info0
 1439 000a 04       		.byte	0x4
 1440 000b 00       		.byte	0
 1441 000c 0000     		.2byte	0
 1442 000e 0000     		.2byte	0
 1443 0010 00000000 		.4byte	.LFB0
 1444 0014 20000000 		.4byte	.LFE0-.LFB0
 1445 0018 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 42


 1446 001c 80000000 		.4byte	.LFE1-.LFB1
 1447 0020 00000000 		.4byte	.LFB2
 1448 0024 20000000 		.4byte	.LFE2-.LFB2
 1449 0028 00000000 		.4byte	.LFB3
 1450 002c 20000000 		.4byte	.LFE3-.LFB3
 1451 0030 00000000 		.4byte	.LFB4
 1452 0034 20000000 		.4byte	.LFE4-.LFB4
 1453 0038 00000000 		.4byte	.LFB5
 1454 003c 20000000 		.4byte	.LFE5-.LFB5
 1455 0040 00000000 		.4byte	.LFB6
 1456 0044 1A000000 		.4byte	.LFE6-.LFB6
 1457 0048 00000000 		.4byte	.LFB7
 1458 004c 20000000 		.4byte	.LFE7-.LFB7
 1459 0050 00000000 		.4byte	.LFB8
 1460 0054 20000000 		.4byte	.LFE8-.LFB8
 1461 0058 00000000 		.4byte	.LFB9
 1462 005c 20000000 		.4byte	.LFE9-.LFB9
 1463 0060 00000000 		.4byte	.LFB10
 1464 0064 20000000 		.4byte	.LFE10-.LFB10
 1465 0068 00000000 		.4byte	.LFB11
 1466 006c 18000000 		.4byte	.LFE11-.LFB11
 1467 0070 00000000 		.4byte	.LFB12
 1468 0074 20000000 		.4byte	.LFE12-.LFB12
 1469 0078 00000000 		.4byte	.LFB13
 1470 007c 20000000 		.4byte	.LFE13-.LFB13
 1471 0080 00000000 		.4byte	.LFB14
 1472 0084 18000000 		.4byte	.LFE14-.LFB14
 1473 0088 00000000 		.4byte	.LFB15
 1474 008c 18000000 		.4byte	.LFE15-.LFB15
 1475 0090 00000000 		.4byte	.LFB16
 1476 0094 18000000 		.4byte	.LFE16-.LFB16
 1477 0098 00000000 		.4byte	.LFB17
 1478 009c 18000000 		.4byte	.LFE17-.LFB17
 1479 00a0 00000000 		.4byte	0
 1480 00a4 00000000 		.4byte	0
 1481              		.section	.debug_ranges,"",%progbits
 1482              	.Ldebug_ranges0:
 1483 0000 00000000 		.4byte	.LFB0
 1484 0004 20000000 		.4byte	.LFE0
 1485 0008 00000000 		.4byte	.LFB1
 1486 000c 80000000 		.4byte	.LFE1
 1487 0010 00000000 		.4byte	.LFB2
 1488 0014 20000000 		.4byte	.LFE2
 1489 0018 00000000 		.4byte	.LFB3
 1490 001c 20000000 		.4byte	.LFE3
 1491 0020 00000000 		.4byte	.LFB4
 1492 0024 20000000 		.4byte	.LFE4
 1493 0028 00000000 		.4byte	.LFB5
 1494 002c 20000000 		.4byte	.LFE5
 1495 0030 00000000 		.4byte	.LFB6
 1496 0034 1A000000 		.4byte	.LFE6
 1497 0038 00000000 		.4byte	.LFB7
 1498 003c 20000000 		.4byte	.LFE7
 1499 0040 00000000 		.4byte	.LFB8
 1500 0044 20000000 		.4byte	.LFE8
 1501 0048 00000000 		.4byte	.LFB9
 1502 004c 20000000 		.4byte	.LFE9
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 43


 1503 0050 00000000 		.4byte	.LFB10
 1504 0054 20000000 		.4byte	.LFE10
 1505 0058 00000000 		.4byte	.LFB11
 1506 005c 18000000 		.4byte	.LFE11
 1507 0060 00000000 		.4byte	.LFB12
 1508 0064 20000000 		.4byte	.LFE12
 1509 0068 00000000 		.4byte	.LFB13
 1510 006c 20000000 		.4byte	.LFE13
 1511 0070 00000000 		.4byte	.LFB14
 1512 0074 18000000 		.4byte	.LFE14
 1513 0078 00000000 		.4byte	.LFB15
 1514 007c 18000000 		.4byte	.LFE15
 1515 0080 00000000 		.4byte	.LFB16
 1516 0084 18000000 		.4byte	.LFE16
 1517 0088 00000000 		.4byte	.LFB17
 1518 008c 18000000 		.4byte	.LFE17
 1519 0090 00000000 		.4byte	0
 1520 0094 00000000 		.4byte	0
 1521              		.section	.debug_line,"",%progbits
 1522              	.Ldebug_line0:
 1523 0000 AB010000 		.section	.debug_str,"MS",%progbits,1
 1523      02004800 
 1523      00000201 
 1523      FB0E0D00 
 1523      01010101 
 1524              	.LASF11:
 1525 0000 63686172 		.ascii	"char\000"
 1525      00
 1526              	.LASF16:
 1527 0005 44696769 		.ascii	"Digital_PWM_interruptState\000"
 1527      74616C5F 
 1527      50574D5F 
 1527      696E7465 
 1527      72727570 
 1528              	.LASF43:
 1529 0020 44696769 		.ascii	"Digital_PWM_ReadControlRegister\000"
 1529      74616C5F 
 1529      50574D5F 
 1529      52656164 
 1529      436F6E74 
 1530              	.LASF18:
 1531 0040 44696769 		.ascii	"Digital_PWM_Enable\000"
 1531      74616C5F 
 1531      50574D5F 
 1531      456E6162 
 1531      6C6500
 1532              	.LASF25:
 1533 0053 70657269 		.ascii	"period\000"
 1533      6F6400
 1534              	.LASF4:
 1535 005a 6C6F6E67 		.ascii	"long int\000"
 1535      20696E74 
 1535      00
 1536              	.LASF3:
 1537 0063 73686F72 		.ascii	"short unsigned int\000"
 1537      7420756E 
 1537      7369676E 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 44


 1537      65642069 
 1537      6E7400
 1538              	.LASF20:
 1539 0076 44696769 		.ascii	"Digital_PWM_Init\000"
 1539      74616C5F 
 1539      50574D5F 
 1539      496E6974 
 1539      00
 1540              	.LASF36:
 1541 0087 44696769 		.ascii	"Digital_PWM_ReadCapture\000"
 1541      74616C5F 
 1541      50574D5F 
 1541      52656164 
 1541      43617074 
 1542              	.LASF44:
 1543 009f 44696769 		.ascii	"Digital_PWM_initVar\000"
 1543      74616C5F 
 1543      50574D5F 
 1543      696E6974 
 1543      56617200 
 1544              	.LASF32:
 1545 00b3 44696769 		.ascii	"Digital_PWM_ReadStatusRegister\000"
 1545      74616C5F 
 1545      50574D5F 
 1545      52656164 
 1545      53746174 
 1546              	.LASF9:
 1547 00d2 666C6F61 		.ascii	"float\000"
 1547      7400
 1548              	.LASF24:
 1549 00d8 636F756E 		.ascii	"counter\000"
 1549      74657200 
 1550              	.LASF1:
 1551 00e0 756E7369 		.ascii	"unsigned char\000"
 1551      676E6564 
 1551      20636861 
 1551      7200
 1552              	.LASF29:
 1553 00ee 44696769 		.ascii	"Digital_PWM_SetInterruptMode\000"
 1553      74616C5F 
 1553      50574D5F 
 1553      53657449 
 1553      6E746572 
 1554              	.LASF13:
 1555 010b 72656738 		.ascii	"reg8\000"
 1555      00
 1556              	.LASF5:
 1557 0110 6C6F6E67 		.ascii	"long unsigned int\000"
 1557      20756E73 
 1557      69676E65 
 1557      6420696E 
 1557      7400
 1558              	.LASF12:
 1559 0122 75696E74 		.ascii	"uint8\000"
 1559      3800
 1560              	.LASF35:
 1561 0128 636F6E74 		.ascii	"control\000"
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 45


 1561      726F6C00 
 1562              	.LASF40:
 1563 0130 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1563      4320342E 
 1563      392E3320 
 1563      32303135 
 1563      30333033 
 1564 0163 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1564      20726576 
 1564      6973696F 
 1564      6E203232 
 1564      31323230 
 1565 0196 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1565      66756E63 
 1565      74696F6E 
 1565      2D736563 
 1565      74696F6E 
 1566              	.LASF10:
 1567 01be 646F7562 		.ascii	"double\000"
 1567      6C6500
 1568              	.LASF34:
 1569 01c5 44696769 		.ascii	"Digital_PWM_WriteControlRegister\000"
 1569      74616C5F 
 1569      50574D5F 
 1569      57726974 
 1569      65436F6E 
 1570              	.LASF42:
 1571 01e6 433A5C53 		.ascii	"C:\\SVN\\apps\\trunk\\Cypress Academy\\PSoC-121-Ana"
 1571      564E5C61 
 1571      7070735C 
 1571      7472756E 
 1571      6B5C4379 
 1572 0214 6C6F675C 		.ascii	"log\\Scope\\KEES_Scope\\PSoC\\Scope.cydsn\000"
 1572      53636F70 
 1572      655C4B45 
 1572      45535F53 
 1572      636F7065 
 1573              	.LASF31:
 1574 023a 44696769 		.ascii	"Digital_PWM_ReadCounter\000"
 1574      74616C5F 
 1574      50574D5F 
 1574      52656164 
 1574      436F756E 
 1575              	.LASF19:
 1576 0252 44696769 		.ascii	"Digital_PWM_Stop\000"
 1576      74616C5F 
 1576      50574D5F 
 1576      53746F70 
 1576      00
 1577              	.LASF8:
 1578 0263 756E7369 		.ascii	"unsigned int\000"
 1578      676E6564 
 1578      20696E74 
 1578      00
 1579              	.LASF7:
 1580 0270 6C6F6E67 		.ascii	"long long unsigned int\000"
 1580      206C6F6E 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 46


 1580      6720756E 
 1580      7369676E 
 1580      65642069 
 1581              	.LASF39:
 1582 0287 44696769 		.ascii	"Digital_PWM_ReadPeriod\000"
 1582      74616C5F 
 1582      50574D5F 
 1582      52656164 
 1582      50657269 
 1583              	.LASF33:
 1584 029e 72657375 		.ascii	"result\000"
 1584      6C7400
 1585              	.LASF23:
 1586 02a5 44696769 		.ascii	"Digital_PWM_WritePeriod\000"
 1586      74616C5F 
 1586      50574D5F 
 1586      57726974 
 1586      65506572 
 1587              	.LASF15:
 1588 02bd 6374726C 		.ascii	"ctrl\000"
 1588      00
 1589              	.LASF14:
 1590 02c2 73697A65 		.ascii	"sizetype\000"
 1590      74797065 
 1590      00
 1591              	.LASF6:
 1592 02cb 6C6F6E67 		.ascii	"long long int\000"
 1592      206C6F6E 
 1592      6720696E 
 1592      7400
 1593              	.LASF17:
 1594 02d9 44696769 		.ascii	"Digital_PWM_Start\000"
 1594      74616C5F 
 1594      50574D5F 
 1594      53746172 
 1594      7400
 1595              	.LASF22:
 1596 02eb 44696769 		.ascii	"Digital_PWM_ClearFIFO\000"
 1596      74616C5F 
 1596      50574D5F 
 1596      436C6561 
 1596      72464946 
 1597              	.LASF30:
 1598 0301 696E7465 		.ascii	"interruptMode\000"
 1598      72727570 
 1598      744D6F64 
 1598      6500
 1599              	.LASF2:
 1600 030f 73686F72 		.ascii	"short int\000"
 1600      7420696E 
 1600      7400
 1601              	.LASF41:
 1602 0319 47656E65 		.ascii	"Generated_Source\\PSoC5\\Digital_PWM.c\000"
 1602      72617465 
 1602      645F536F 
 1602      75726365 
 1602      5C50536F 
ARM GAS  C:\Users\Greg\AppData\Local\Temp\ccGuoxFO.s 			page 47


 1603              	.LASF21:
 1604 033e 44696769 		.ascii	"Digital_PWM_WriteCounter\000"
 1604      74616C5F 
 1604      50574D5F 
 1604      57726974 
 1604      65436F75 
 1605              	.LASF26:
 1606 0357 44696769 		.ascii	"Digital_PWM_WriteCompare1\000"
 1606      74616C5F 
 1606      50574D5F 
 1606      57726974 
 1606      65436F6D 
 1607              	.LASF28:
 1608 0371 44696769 		.ascii	"Digital_PWM_WriteCompare2\000"
 1608      74616C5F 
 1608      50574D5F 
 1608      57726974 
 1608      65436F6D 
 1609              	.LASF37:
 1610 038b 44696769 		.ascii	"Digital_PWM_ReadCompare1\000"
 1610      74616C5F 
 1610      50574D5F 
 1610      52656164 
 1610      436F6D70 
 1611              	.LASF38:
 1612 03a4 44696769 		.ascii	"Digital_PWM_ReadCompare2\000"
 1612      74616C5F 
 1612      50574D5F 
 1612      52656164 
 1612      436F6D70 
 1613              	.LASF0:
 1614 03bd 7369676E 		.ascii	"signed char\000"
 1614      65642063 
 1614      68617200 
 1615              	.LASF27:
 1616 03c9 636F6D70 		.ascii	"compare\000"
 1616      61726500 
 1617              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
